// This file is automatically generated by the Generate.py script.
#include "Software/Berry/Berry.hpp"
extern "C"
{
#include "be_constobj.h"
#include "be_mapping.h"
}
using namespace Xila_Namespace;
using namespace Communication_Types;

// - Functions

// - - Constructors
void * Berry_IP_Address_Class_Initialize_55AACFA9_4F1C_4474_A88D_CD6A83C1B40C(bvm* V)
{
void* Pointer = be_malloc(V, sizeof(Communication_Types::IP_Address_Class));
return new (Pointer) Communication_Types::IP_Address_Class(); 
}
BE_FUNC_CTYPE_DECLARE(Berry_IP_Address_Class_Initialize_55AACFA9_4F1C_4474_A88D_CD6A83C1B40C, "+_p", "@");

void * Berry_IP_Address_Class_Initialize_FA309592_0A19_4862_9B6D_0BD978AA9E23(bvm* V, bool A_0)
{
void* Pointer = be_malloc(V, sizeof(Communication_Types::IP_Address_Class));
return new (Pointer) Communication_Types::IP_Address_Class(A_0); 
}
BE_FUNC_CTYPE_DECLARE(Berry_IP_Address_Class_Initialize_FA309592_0A19_4862_9B6D_0BD978AA9E23, "+_p", "@b");

void * Berry_IP_Address_Class_Initialize_8ABA6D7C_4584_40F2_AC01_01E90EFAF9EF(bvm* V, int A_0)
{
void* Pointer = be_malloc(V, sizeof(Communication_Types::IP_Address_Class));
return new (Pointer) Communication_Types::IP_Address_Class((unsigned int)A_0); 
}
BE_FUNC_CTYPE_DECLARE(Berry_IP_Address_Class_Initialize_8ABA6D7C_4584_40F2_AC01_01E90EFAF9EF, "+_p", "@i");

void * Berry_IP_Address_Class_Initialize_35417563_95E8_449D_87E0_67341EE28773(bvm* V, const unsigned char* A_0, bool A_1 = true)
{
void* Pointer = be_malloc(V, sizeof(Communication_Types::IP_Address_Class));
return new (Pointer) Communication_Types::IP_Address_Class(A_0, A_1); 
}
BE_FUNC_CTYPE_DECLARE(Berry_IP_Address_Class_Initialize_35417563_95E8_449D_87E0_67341EE28773, "+_p", "@s[b");

void * Berry_IP_Address_Class_Initialize_49D7F27B_83E8_4C61_8073_64A96CBF9E1D(bvm* V, int A_0, int A_1, int A_2, int A_3)
{
void* Pointer = be_malloc(V, sizeof(Communication_Types::IP_Address_Class));
return new (Pointer) Communication_Types::IP_Address_Class((unsigned char)A_0, (unsigned char)A_1, (unsigned char)A_2, (unsigned char)A_3); 
}
BE_FUNC_CTYPE_DECLARE(Berry_IP_Address_Class_Initialize_49D7F27B_83E8_4C61_8073_64A96CBF9E1D, "+_p", "@iiii");

void * Berry_IP_Address_Class_Initialize_F21D5830_E1CE_407B_9C8C_50523CC23698(bvm* V)
{
void* Pointer = be_malloc(V, sizeof(Communication_Types::IP_Address_Class));
return new (Pointer) Communication_Types::IP_Address_Class(); 
}
BE_FUNC_CTYPE_DECLARE(Berry_IP_Address_Class_Initialize_F21D5830_E1CE_407B_9C8C_50523CC23698, "+_p", "@");

void * Berry_IP_Address_Class_Initialize_A413ED9C_39B7_4F5A_96E8_BE3FF2EEAB81(bvm* V)
{
void* Pointer = be_malloc(V, sizeof(Communication_Types::IP_Address_Class));
return new (Pointer) Communication_Types::IP_Address_Class(); 
}
BE_FUNC_CTYPE_DECLARE(Berry_IP_Address_Class_Initialize_A413ED9C_39B7_4F5A_96E8_BE3FF2EEAB81, "+_p", "@");


// - - Destructors
void Berry_IP_Address_Class_Deinitialize_5638A5D8_26D8_47DF_A0C3_AA46F6F01EDF(bvm* V, Xila_Namespace::Communication_Types::IP_Address_Class* I)
{
if (!I) { return; }
I->~IP_Address_Class();
be_free(V, I, sizeof(Communication_Types::IP_Address_Class));
}
BE_FUNC_CTYPE_DECLARE(Berry_IP_Address_Class_Deinitialize_5638A5D8_26D8_47DF_A0C3_AA46F6F01EDF, "", "@.");


// - - Functions
const char* Berry_IP_Address_Class_To_5D6683FA_77E1_418B_B731_8829A57D8B89(bvm* V, Xila_Namespace::Communication_Types::IP_Address_Class* I)
{
String_Type S_0;
S_0.Set_Buffer((char*)Berry_Class::Get_Instance(V)->Buffer, sizeof(Berry_Class::Buffer));
I->To(S_0); 
return S_0;
}
BE_FUNC_CTYPE_DECLARE(Berry_IP_Address_Class_To_5D6683FA_77E1_418B_B731_8829A57D8B89, "s", "@.");

bool Berry_IP_Address_Class_Is_IP_v4_7319FD28_6E65_4967_B497_B2122D23D401(Xila_Namespace::Communication_Types::IP_Address_Class* I)
{
return I->Is_IP_v4(); 
}
BE_FUNC_CTYPE_DECLARE(Berry_IP_Address_Class_Is_IP_v4_7319FD28_6E65_4967_B497_B2122D23D401, "b", ".");

void Berry_IP_Address_Class_Set_IP_Version_F78196AD_3403_420F_A990_B06D133F0790(Xila_Namespace::Communication_Types::IP_Address_Class* I, bool A_0)
{
return I->Set_IP_Version(A_0); 
}
BE_FUNC_CTYPE_DECLARE(Berry_IP_Address_Class_Set_IP_Version_F78196AD_3403_420F_A990_B06D133F0790, "", ".b");

// - - Operators
bool Berry_IP_Address_Class_Operator_738FC585_0AC5_4E59_94C0_37132C32A0B1(Xila_Namespace::Communication_Types::IP_Address_Class* I, Xila_Namespace::Communication_Types::IP_Address_Class* A_0)
{
return *I == *A_0;
}
BE_FUNC_CTYPE_DECLARE(Berry_IP_Address_Class_Operator_738FC585_0AC5_4E59_94C0_37132C32A0B1, "b", "..")

bool Berry_IP_Address_Class_Operator_1D7C49D6_F4B2_4B58_8028_2449E0B0E740(Xila_Namespace::Communication_Types::IP_Address_Class* I, Xila_Namespace::Communication_Types::IP_Address_Class* A_0)
{
return *I == *A_0;
}
BE_FUNC_CTYPE_DECLARE(Berry_IP_Address_Class_Operator_1D7C49D6_F4B2_4B58_8028_2449E0B0E740, "b", "..")


// - Berry declaration
/* @const_object_info_begin
class Berry_IP_Address_Type(scope:global, name:IP_Address_Type)
{
	_p, var
	init, ctype_func(Berry_IP_Address_Class_Initialize_55AACFA9_4F1C_4474_A88D_CD6A83C1B40C)
	init, ctype_func(Berry_IP_Address_Class_Initialize_FA309592_0A19_4862_9B6D_0BD978AA9E23)
	init, ctype_func(Berry_IP_Address_Class_Initialize_8ABA6D7C_4584_40F2_AC01_01E90EFAF9EF)
	init, ctype_func(Berry_IP_Address_Class_Initialize_35417563_95E8_449D_87E0_67341EE28773)
	init, ctype_func(Berry_IP_Address_Class_Initialize_49D7F27B_83E8_4C61_8073_64A96CBF9E1D)
	init, ctype_func(Berry_IP_Address_Class_Initialize_F21D5830_E1CE_407B_9C8C_50523CC23698)
	init, ctype_func(Berry_IP_Address_Class_Initialize_A413ED9C_39B7_4F5A_96E8_BE3FF2EEAB81)
	deinit, ctype_func(Berry_IP_Address_Class_Deinitialize_5638A5D8_26D8_47DF_A0C3_AA46F6F01EDF)
	To, ctype_func(Berry_IP_Address_Class_To_5D6683FA_77E1_418B_B731_8829A57D8B89)
	Is_IP_v4, ctype_func(Berry_IP_Address_Class_Is_IP_v4_7319FD28_6E65_4967_B497_B2122D23D401)
	Set_IP_Version, ctype_func(Berry_IP_Address_Class_Set_IP_Version_F78196AD_3403_420F_A990_B06D133F0790)
	==, ctype_func(Berry_IP_Address_Class_Operator_738FC585_0AC5_4E59_94C0_37132C32A0B1)
	==, ctype_func(Berry_IP_Address_Class_Operator_1D7C49D6_F4B2_4B58_8028_2449E0B0E740)

}
@const_object_info_end */


extern "C"
{
	#include "../generate/be_fixed_Berry_IP_Address_Type.h"
}
// - Functions

// - - Constructors
void * Berry_HTTPS_Client_Class_Initialize_7D5C00CA_732C_4847_BBC1_38DE94C4CE6D(bvm* V)
{
void* Pointer = be_malloc(V, sizeof(Communication_Types::HTTPS_Client_Class));
return new (Pointer) Communication_Types::HTTPS_Client_Class(); 
}
BE_FUNC_CTYPE_DECLARE(Berry_HTTPS_Client_Class_Initialize_7D5C00CA_732C_4847_BBC1_38DE94C4CE6D, "+_p", "@");


// - - Destructors
void Berry_HTTPS_Client_Class_Deinitialize_8AD6C0BC_0CE6_4EC4_82BA_D6D9D3BC3BA4(bvm* V, Xila_Namespace::Communication_Types::HTTPS_Client_Class* I)
{
if (!I) { return; }
I->~HTTPS_Client_Class();
be_free(V, I, sizeof(Communication_Types::HTTPS_Client_Class));
}
BE_FUNC_CTYPE_DECLARE(Berry_HTTPS_Client_Class_Deinitialize_8AD6C0BC_0CE6_4EC4_82BA_D6D9D3BC3BA4, "", "@.");


// - - Functions
int Berry_HTTPS_Client_Class_Begin_9D536B85_50D7_4181_B8EB_954DC3D6A694(Xila_Namespace::Communication_Types::HTTPS_Client_Class* I, ::Xila_Namespace::Communication_Types::WiFi_Client_Class* A_0, const char* A_1, int A_2, const char* A_3 = __null, bool A_4 = false)
{
return (int)I->Begin(*A_0, A_1, (short unsigned int)A_2, A_3, A_4); 
}
BE_FUNC_CTYPE_DECLARE(Berry_HTTPS_Client_Class_Begin_9D536B85_50D7_4181_B8EB_954DC3D6A694, "i", "..si[sb");

void Berry_HTTPS_Client_Class_End_78D06AD5_08F4_47D1_8D89_A569ABD60DE0(Xila_Namespace::Communication_Types::HTTPS_Client_Class* I)
{
return I->End(); 
}
BE_FUNC_CTYPE_DECLARE(Berry_HTTPS_Client_Class_End_78D06AD5_08F4_47D1_8D89_A569ABD60DE0, "", ".");

bool Berry_HTTPS_Client_Class_Connected_07B84DE2_DE89_4DC8_9FAA_5488A79E5E20(Xila_Namespace::Communication_Types::HTTPS_Client_Class* I)
{
return I->Connected(); 
}
BE_FUNC_CTYPE_DECLARE(Berry_HTTPS_Client_Class_Connected_07B84DE2_DE89_4DC8_9FAA_5488A79E5E20, "b", ".");

int Berry_HTTPS_Client_Class_Get_888BDB45_BA53_4285_BAEF_827BE5159C64(Xila_Namespace::Communication_Types::HTTPS_Client_Class* I)
{
return (int)I->Get(); 
}
BE_FUNC_CTYPE_DECLARE(Berry_HTTPS_Client_Class_Get_888BDB45_BA53_4285_BAEF_827BE5159C64, "i", ".");

int Berry_HTTPS_Client_Class_Patch_41F55B77_A5CE_4911_9945_E3BCF37DE35B(Xila_Namespace::Communication_Types::HTTPS_Client_Class* I, const char* A_0)
{
return (int)I->Patch(A_0); 
}
BE_FUNC_CTYPE_DECLARE(Berry_HTTPS_Client_Class_Patch_41F55B77_A5CE_4911_9945_E3BCF37DE35B, "i", ".s");

int Berry_HTTPS_Client_Class_Post_58749148_1496_4830_A782_9F5AC2D6F52B(Xila_Namespace::Communication_Types::HTTPS_Client_Class* I, const char* A_0)
{
return (int)I->Post(A_0); 
}
BE_FUNC_CTYPE_DECLARE(Berry_HTTPS_Client_Class_Post_58749148_1496_4830_A782_9F5AC2D6F52B, "i", ".s");

int Berry_HTTPS_Client_Class_Put_BB2C5CF7_B50C_4122_8D50_4EDFE9D33DF1(Xila_Namespace::Communication_Types::HTTPS_Client_Class* I, const char* A_0)
{
return (int)I->Put(A_0); 
}
BE_FUNC_CTYPE_DECLARE(Berry_HTTPS_Client_Class_Put_BB2C5CF7_B50C_4122_8D50_4EDFE9D33DF1, "i", ".s");

int Berry_HTTPS_Client_Class_Send_Request_4FDBEDFE_BE3C_4105_BB3B_7CF73C7F7F46(Xila_Namespace::Communication_Types::HTTPS_Client_Class* I, const char* A_0, const char* A_1 = __null)
{
return (int)I->Send_Request(A_0, A_1); 
}
BE_FUNC_CTYPE_DECLARE(Berry_HTTPS_Client_Class_Send_Request_4FDBEDFE_BE3C_4105_BB3B_7CF73C7F7F46, "i", ".s[s");

void Berry_HTTPS_Client_Class_Add_Header_FB64FA68_9E62_4D89_8C59_793C74A41120(Xila_Namespace::Communication_Types::HTTPS_Client_Class* I, const char* A_0, const char* A_1, bool A_2 = false, bool A_3 = true)
{
return I->Add_Header(A_0, A_1, A_2, A_3); 
}
BE_FUNC_CTYPE_DECLARE(Berry_HTTPS_Client_Class_Add_Header_FB64FA68_9E62_4D89_8C59_793C74A41120, "", ".ss[bb");

bool Berry_HTTPS_Client_Class_Has_Header_ADDF9A42_6084_4909_908D_FEF6C6797463(Xila_Namespace::Communication_Types::HTTPS_Client_Class* I, const char* A_0)
{
return I->Has_Header(A_0); 
}
BE_FUNC_CTYPE_DECLARE(Berry_HTTPS_Client_Class_Has_Header_ADDF9A42_6084_4909_908D_FEF6C6797463, "b", ".s");

void Berry_HTTPS_Client_Class_Use_HTTP_1_0_92D72489_BA9F_485D_B25E_3F19CC40F46C(Xila_Namespace::Communication_Types::HTTPS_Client_Class* I, bool A_0)
{
return I->Use_HTTP_1_0(A_0); 
}
BE_FUNC_CTYPE_DECLARE(Berry_HTTPS_Client_Class_Use_HTTP_1_0_92D72489_BA9F_485D_B25E_3F19CC40F46C, "", ".b");

void Berry_HTTPS_Client_Class_Reset_Cookie_Jar_E804EE70_C54D_4C4F_97AE_5597D5119F31(Xila_Namespace::Communication_Types::HTTPS_Client_Class* I)
{
return I->Reset_Cookie_Jar(); 
}
BE_FUNC_CTYPE_DECLARE(Berry_HTTPS_Client_Class_Reset_Cookie_Jar_E804EE70_C54D_4C4F_97AE_5597D5119F31, "", ".");

void Berry_HTTPS_Client_Class_Clear_All_Cookies_7E5BA325_10C4_4730_838D_5FB541A92E22(Xila_Namespace::Communication_Types::HTTPS_Client_Class* I)
{
return I->Clear_All_Cookies(); 
}
BE_FUNC_CTYPE_DECLARE(Berry_HTTPS_Client_Class_Clear_All_Cookies_7E5BA325_10C4_4730_838D_5FB541A92E22, "", ".");

void Berry_HTTPS_Client_Class_Set_Reuse_F0BBE0FC_FA7F_4D4E_AB97_ACDB94543E32(Xila_Namespace::Communication_Types::HTTPS_Client_Class* I, bool A_0)
{
return I->Set_Reuse(A_0); 
}
BE_FUNC_CTYPE_DECLARE(Berry_HTTPS_Client_Class_Set_Reuse_F0BBE0FC_FA7F_4D4E_AB97_ACDB94543E32, "", ".b");

void Berry_HTTPS_Client_Class_Set_User_Agent_88CC6F58_3AEB_4F95_8E7C_FB689B33FB5A(Xila_Namespace::Communication_Types::HTTPS_Client_Class* I, const char* A_0)
{
return I->Set_User_Agent(A_0); 
}
BE_FUNC_CTYPE_DECLARE(Berry_HTTPS_Client_Class_Set_User_Agent_88CC6F58_3AEB_4F95_8E7C_FB689B33FB5A, "", ".s");

void Berry_HTTPS_Client_Class_Set_Authorization_8B80703C_88D5_456E_9B5E_A182A183735D(Xila_Namespace::Communication_Types::HTTPS_Client_Class* I, const char* A_0, const char* A_1 = __null)
{
return I->Set_Authorization(A_0, A_1); 
}
BE_FUNC_CTYPE_DECLARE(Berry_HTTPS_Client_Class_Set_Authorization_8B80703C_88D5_456E_9B5E_A182A183735D, "", ".s[s");

void Berry_HTTPS_Client_Class_Set_Authorization_Type_AA57CA3D_934F_4AE0_9E16_64490C88F271(Xila_Namespace::Communication_Types::HTTPS_Client_Class* I, const char* A_0)
{
return I->Set_Authorization_Type(A_0); 
}
BE_FUNC_CTYPE_DECLARE(Berry_HTTPS_Client_Class_Set_Authorization_Type_AA57CA3D_934F_4AE0_9E16_64490C88F271, "", ".s");

void Berry_HTTPS_Client_Class_Set_Connect_Timeout_5A234C48_8F93_43AD_98C6_4E8F75FFEB2E(Xila_Namespace::Communication_Types::HTTPS_Client_Class* I, int A_0)
{
return I->Set_Connect_Timeout((unsigned int)A_0); 
}
BE_FUNC_CTYPE_DECLARE(Berry_HTTPS_Client_Class_Set_Connect_Timeout_5A234C48_8F93_43AD_98C6_4E8F75FFEB2E, "", ".i");

void Berry_HTTPS_Client_Class_Set_Timeout_578119F9_AB04_4674_A456_C230151AC9E7(Xila_Namespace::Communication_Types::HTTPS_Client_Class* I, int A_0)
{
return I->Set_Timeout((unsigned int)A_0); 
}
BE_FUNC_CTYPE_DECLARE(Berry_HTTPS_Client_Class_Set_Timeout_578119F9_AB04_4674_A456_C230151AC9E7, "", ".i");

void Berry_HTTPS_Client_Class_Set_Follow_Redirects_73293DE4_F8BF_4A27_8F0A_E42377EA1485(Xila_Namespace::Communication_Types::HTTPS_Client_Class* I, bool A_0, bool A_1 = false)
{
return I->Set_Follow_Redirects(A_0, A_1); 
}
BE_FUNC_CTYPE_DECLARE(Berry_HTTPS_Client_Class_Set_Follow_Redirects_73293DE4_F8BF_4A27_8F0A_E42377EA1485, "", ".b[b");

void Berry_HTTPS_Client_Class_Set_Redirect_Limit_7C8D1AE8_E0C0_4CFA_BF95_973F34C35DE7(Xila_Namespace::Communication_Types::HTTPS_Client_Class* I, int A_0)
{
return I->Set_Redirect_Limit((short unsigned int)A_0); 
}
BE_FUNC_CTYPE_DECLARE(Berry_HTTPS_Client_Class_Set_Redirect_Limit_7C8D1AE8_E0C0_4CFA_BF95_973F34C35DE7, "", ".i");

int Berry_HTTPS_Client_Class_Set_URL_89D6C2F7_5ABF_4067_803F_F42DDF652CF1(Xila_Namespace::Communication_Types::HTTPS_Client_Class* I, const char* A_0)
{
return (int)I->Set_URL(A_0); 
}
BE_FUNC_CTYPE_DECLARE(Berry_HTTPS_Client_Class_Set_URL_89D6C2F7_5ABF_4067_803F_F42DDF652CF1, "i", ".s");

const char* Berry_HTTPS_Client_Class_Get_Header_907A744D_06B2_4374_AFD6_133CF0959172(bvm* V, Xila_Namespace::Communication_Types::HTTPS_Client_Class* I, const char* A_1)
{
String_Type S_0;
S_0.Set_Buffer((char*)Berry_Class::Get_Instance(V)->Buffer, sizeof(Berry_Class::Buffer));
I->Get_Header(S_0, A_1); 
return S_0;
}
BE_FUNC_CTYPE_DECLARE(Berry_HTTPS_Client_Class_Get_Header_907A744D_06B2_4374_AFD6_133CF0959172, "s", "@.s");

const char* Berry_HTTPS_Client_Class_Get_Header_Name_8809A246_40CF_4BCB_8101_5AB111495DCB(bvm* V, Xila_Namespace::Communication_Types::HTTPS_Client_Class* I, int A_1)
{
String_Type S_0;
S_0.Set_Buffer((char*)Berry_Class::Get_Instance(V)->Buffer, sizeof(Berry_Class::Buffer));
I->Get_Header_Name(S_0, (unsigned int)A_1); 
return S_0;
}
BE_FUNC_CTYPE_DECLARE(Berry_HTTPS_Client_Class_Get_Header_Name_8809A246_40CF_4BCB_8101_5AB111495DCB, "s", "@.i");

int Berry_HTTPS_Client_Class_Get_Header_Count_2BAA15B5_6E5F_47A7_9187_F645A77D1265(Xila_Namespace::Communication_Types::HTTPS_Client_Class* I)
{
return (int)I->Get_Header_Count(); 
}
BE_FUNC_CTYPE_DECLARE(Berry_HTTPS_Client_Class_Get_Header_Count_2BAA15B5_6E5F_47A7_9187_F645A77D1265, "i", ".");

int Berry_HTTPS_Client_Class_Get_Size_9FEC396B_836A_426B_A633_D53B51CD9583(Xila_Namespace::Communication_Types::HTTPS_Client_Class* I)
{
return (int)I->Get_Size(); 
}
BE_FUNC_CTYPE_DECLARE(Berry_HTTPS_Client_Class_Get_Size_9FEC396B_836A_426B_A633_D53B51CD9583, "i", ".");

const char* Berry_HTTPS_Client_Class_Get_Location_ED4598B1_C70B_430A_8F0B_E29EF58BDE6E(Xila_Namespace::Communication_Types::HTTPS_Client_Class* I)
{
return I->Get_Location(); 
}
BE_FUNC_CTYPE_DECLARE(Berry_HTTPS_Client_Class_Get_Location_ED4598B1_C70B_430A_8F0B_E29EF58BDE6E, "s", ".");

const char* Berry_HTTPS_Client_Class_Get_String_786615EA_0A21_4AD3_AA2E_D74C9D52025E(bvm* V, Xila_Namespace::Communication_Types::HTTPS_Client_Class* I)
{
String_Type S_0;
S_0.Set_Buffer((char*)Berry_Class::Get_Instance(V)->Buffer, sizeof(Berry_Class::Buffer));
I->Get_String(S_0); 
return S_0;
}
BE_FUNC_CTYPE_DECLARE(Berry_HTTPS_Client_Class_Get_String_786615EA_0A21_4AD3_AA2E_D74C9D52025E, "s", "@.");

// - - Operators

// - Berry declaration
/* @const_object_info_begin
class Berry_HTTPS_Client_Type(scope:global, name:HTTPS_Client_Type)
{
	_p, var
	init, ctype_func(Berry_HTTPS_Client_Class_Initialize_7D5C00CA_732C_4847_BBC1_38DE94C4CE6D)
	deinit, ctype_func(Berry_HTTPS_Client_Class_Deinitialize_8AD6C0BC_0CE6_4EC4_82BA_D6D9D3BC3BA4)
	Begin, ctype_func(Berry_HTTPS_Client_Class_Begin_9D536B85_50D7_4181_B8EB_954DC3D6A694)
	End, ctype_func(Berry_HTTPS_Client_Class_End_78D06AD5_08F4_47D1_8D89_A569ABD60DE0)
	Connected, ctype_func(Berry_HTTPS_Client_Class_Connected_07B84DE2_DE89_4DC8_9FAA_5488A79E5E20)
	Get, ctype_func(Berry_HTTPS_Client_Class_Get_888BDB45_BA53_4285_BAEF_827BE5159C64)
	Patch, ctype_func(Berry_HTTPS_Client_Class_Patch_41F55B77_A5CE_4911_9945_E3BCF37DE35B)
	Post, ctype_func(Berry_HTTPS_Client_Class_Post_58749148_1496_4830_A782_9F5AC2D6F52B)
	Put, ctype_func(Berry_HTTPS_Client_Class_Put_BB2C5CF7_B50C_4122_8D50_4EDFE9D33DF1)
	Send_Request, ctype_func(Berry_HTTPS_Client_Class_Send_Request_4FDBEDFE_BE3C_4105_BB3B_7CF73C7F7F46)
	Add_Header, ctype_func(Berry_HTTPS_Client_Class_Add_Header_FB64FA68_9E62_4D89_8C59_793C74A41120)
	Has_Header, ctype_func(Berry_HTTPS_Client_Class_Has_Header_ADDF9A42_6084_4909_908D_FEF6C6797463)
	Use_HTTP_1_0, ctype_func(Berry_HTTPS_Client_Class_Use_HTTP_1_0_92D72489_BA9F_485D_B25E_3F19CC40F46C)
	Reset_Cookie_Jar, ctype_func(Berry_HTTPS_Client_Class_Reset_Cookie_Jar_E804EE70_C54D_4C4F_97AE_5597D5119F31)
	Clear_All_Cookies, ctype_func(Berry_HTTPS_Client_Class_Clear_All_Cookies_7E5BA325_10C4_4730_838D_5FB541A92E22)
	Set_Reuse, ctype_func(Berry_HTTPS_Client_Class_Set_Reuse_F0BBE0FC_FA7F_4D4E_AB97_ACDB94543E32)
	Set_User_Agent, ctype_func(Berry_HTTPS_Client_Class_Set_User_Agent_88CC6F58_3AEB_4F95_8E7C_FB689B33FB5A)
	Set_Authorization, ctype_func(Berry_HTTPS_Client_Class_Set_Authorization_8B80703C_88D5_456E_9B5E_A182A183735D)
	Set_Authorization_Type, ctype_func(Berry_HTTPS_Client_Class_Set_Authorization_Type_AA57CA3D_934F_4AE0_9E16_64490C88F271)
	Set_Connect_Timeout, ctype_func(Berry_HTTPS_Client_Class_Set_Connect_Timeout_5A234C48_8F93_43AD_98C6_4E8F75FFEB2E)
	Set_Timeout, ctype_func(Berry_HTTPS_Client_Class_Set_Timeout_578119F9_AB04_4674_A456_C230151AC9E7)
	Set_Follow_Redirects, ctype_func(Berry_HTTPS_Client_Class_Set_Follow_Redirects_73293DE4_F8BF_4A27_8F0A_E42377EA1485)
	Set_Redirect_Limit, ctype_func(Berry_HTTPS_Client_Class_Set_Redirect_Limit_7C8D1AE8_E0C0_4CFA_BF95_973F34C35DE7)
	Set_URL, ctype_func(Berry_HTTPS_Client_Class_Set_URL_89D6C2F7_5ABF_4067_803F_F42DDF652CF1)
	Get_Header, ctype_func(Berry_HTTPS_Client_Class_Get_Header_907A744D_06B2_4374_AFD6_133CF0959172)
	Get_Header_Name, ctype_func(Berry_HTTPS_Client_Class_Get_Header_Name_8809A246_40CF_4BCB_8101_5AB111495DCB)
	Get_Header_Count, ctype_func(Berry_HTTPS_Client_Class_Get_Header_Count_2BAA15B5_6E5F_47A7_9187_F645A77D1265)
	Get_Size, ctype_func(Berry_HTTPS_Client_Class_Get_Size_9FEC396B_836A_426B_A633_D53B51CD9583)
	Get_Location, ctype_func(Berry_HTTPS_Client_Class_Get_Location_ED4598B1_C70B_430A_8F0B_E29EF58BDE6E)
	Get_String, ctype_func(Berry_HTTPS_Client_Class_Get_String_786615EA_0A21_4AD3_AA2E_D74C9D52025E)

}
@const_object_info_end */


extern "C"
{
	#include "../generate/be_fixed_Berry_HTTPS_Client_Type.h"
}
// - Functions

// - - Constructors
void * Berry_WiFi_Client_Class_Initialize_D71F63E8_9027_4318_95D3_6180B37B3115(bvm* V)
{
void* Pointer = be_malloc(V, sizeof(Communication_Types::WiFi_Client_Class));
return new (Pointer) Communication_Types::WiFi_Client_Class(); 
}
BE_FUNC_CTYPE_DECLARE(Berry_WiFi_Client_Class_Initialize_D71F63E8_9027_4318_95D3_6180B37B3115, "+_p", "@");


// - - Destructors
void Berry_WiFi_Client_Class_Deinitialize_12F6DC52_18C5_42A3_BBE3_07120D73D775(bvm* V, Xila_Namespace::Communication_Types::WiFi_Client_Class* I)
{
if (!I) { return; }
I->~WiFi_Client_Class();
be_free(V, I, sizeof(Communication_Types::WiFi_Client_Class));
}
BE_FUNC_CTYPE_DECLARE(Berry_WiFi_Client_Class_Deinitialize_12F6DC52_18C5_42A3_BBE3_07120D73D775, "", "@.");


// - - Functions
int Berry_WiFi_Client_Class_Connect_7BB4464A_A35E_47C4_9A67_FCEA1711F7F0(Xila_Namespace::Communication_Types::WiFi_Client_Class* I, const char* A_0, int A_1, int A_2 = 30000)
{
return (int)I->Connect(A_0, (short unsigned int)A_1, (int)A_2); 
}
BE_FUNC_CTYPE_DECLARE(Berry_WiFi_Client_Class_Connect_7BB4464A_A35E_47C4_9A67_FCEA1711F7F0, "i", ".si[i");

void Berry_WiFi_Client_Class_Stop_3EDB5143_C347_4D5F_B338_A77A9908933F(Xila_Namespace::Communication_Types::WiFi_Client_Class* I)
{
return I->Stop(); 
}
BE_FUNC_CTYPE_DECLARE(Berry_WiFi_Client_Class_Stop_3EDB5143_C347_4D5F_B338_A77A9908933F, "", ".");

bool Berry_WiFi_Client_Class_Connected_00D0DE2E_54CD_4057_B640_AAE60621402B(Xila_Namespace::Communication_Types::WiFi_Client_Class* I)
{
return I->Connected(); 
}
BE_FUNC_CTYPE_DECLARE(Berry_WiFi_Client_Class_Connected_00D0DE2E_54CD_4057_B640_AAE60621402B, "b", ".");

const char* Berry_WiFi_Client_Class_Last_Error_1DCB1A74_1915_4B46_B845_21F12DFDA900(bvm* V, Xila_Namespace::Communication_Types::WiFi_Client_Class* I)
{
String_Type S_0;
S_0.Set_Buffer((char*)Berry_Class::Get_Instance(V)->Buffer, sizeof(Berry_Class::Buffer));
I->Last_Error(S_0); 
return S_0;
}
BE_FUNC_CTYPE_DECLARE(Berry_WiFi_Client_Class_Last_Error_1DCB1A74_1915_4B46_B845_21F12DFDA900, "s", "@.");

void Berry_WiFi_Client_Class_Set_Insecure_AED71CEA_AD76_4574_852E_B33D51FC2FD5(Xila_Namespace::Communication_Types::WiFi_Client_Class* I)
{
return I->Set_Insecure(); 
}
BE_FUNC_CTYPE_DECLARE(Berry_WiFi_Client_Class_Set_Insecure_AED71CEA_AD76_4574_852E_B33D51FC2FD5, "", ".");

void Berry_WiFi_Client_Class_Set_Handshake_Timeout_EA871E8B_B5EC_4C31_961B_11747CBA18A1(Xila_Namespace::Communication_Types::WiFi_Client_Class* I, int A_0)
{
return I->Set_Handshake_Timeout((unsigned int)A_0); 
}
BE_FUNC_CTYPE_DECLARE(Berry_WiFi_Client_Class_Set_Handshake_Timeout_EA871E8B_B5EC_4C31_961B_11747CBA18A1, "", ".i");

void Berry_WiFi_Client_Class_Set_Timeout_0DFA8D04_A213_4CD8_ACC4_E239DE2F4952(Xila_Namespace::Communication_Types::WiFi_Client_Class* I, int A_0)
{
return I->Set_Timeout((unsigned int)A_0); 
}
BE_FUNC_CTYPE_DECLARE(Berry_WiFi_Client_Class_Set_Timeout_0DFA8D04_A213_4CD8_ACC4_E239DE2F4952, "", ".i");

int Berry_WiFi_Client_Class_Available_775064BA_93EF_413E_BA8A_7FCDF8A8E313(Xila_Namespace::Communication_Types::WiFi_Client_Class* I)
{
return (int)I->Available(); 
}
BE_FUNC_CTYPE_DECLARE(Berry_WiFi_Client_Class_Available_775064BA_93EF_413E_BA8A_7FCDF8A8E313, "i", ".");

int Berry_WiFi_Client_Class_Peek_BA54E799_4145_4BEC_9A18_B4F72D6457DB(Xila_Namespace::Communication_Types::WiFi_Client_Class* I)
{
return (int)I->Peek(); 
}
BE_FUNC_CTYPE_DECLARE(Berry_WiFi_Client_Class_Peek_BA54E799_4145_4BEC_9A18_B4F72D6457DB, "i", ".");

int Berry_WiFi_Client_Class_Read_52469351_8C4E_4AF1_AFAF_99F9E9B84509(Xila_Namespace::Communication_Types::WiFi_Client_Class* I)
{
return (int)I->Read(); 
}
BE_FUNC_CTYPE_DECLARE(Berry_WiFi_Client_Class_Read_52469351_8C4E_4AF1_AFAF_99F9E9B84509, "i", ".");

const unsigned char* Berry_WiFi_Client_Class_Read_Bytes_41C1A5B4_C7E6_4203_9F7A_A73916E04035(bvm* V, Xila_Namespace::Communication_Types::WiFi_Client_Class* I, int A_1)
{
unsigned char* S_0 = (unsigned char*)Berry_Class::Get_Instance(V)->Buffer;
I->Read_Bytes(S_0, (A_1 > sizeof(Berry_Class::Buffer)) ? sizeof(Berry_Class::Buffer) : A_1); 
return S_0;
}
BE_FUNC_CTYPE_DECLARE(Berry_WiFi_Client_Class_Read_Bytes_41C1A5B4_C7E6_4203_9F7A_A73916E04035, "s", "@.i");

const char* Berry_WiFi_Client_Class_Read_String_DF74408E_E893_4389_A6EB_17767485E363(bvm* V, Xila_Namespace::Communication_Types::WiFi_Client_Class* I)
{
String_Type S_0;
S_0.Set_Buffer((char*)Berry_Class::Get_Instance(V)->Buffer, sizeof(Berry_Class::Buffer));
I->Read_String(S_0); 
return S_0;
}
BE_FUNC_CTYPE_DECLARE(Berry_WiFi_Client_Class_Read_String_DF74408E_E893_4389_A6EB_17767485E363, "s", "@.");

void Berry_WiFi_Client_Class_Flush_A41DE907_E9CC_43DD_8446_DEFA57E563FD(Xila_Namespace::Communication_Types::WiFi_Client_Class* I)
{
return I->Flush(); 
}
BE_FUNC_CTYPE_DECLARE(Berry_WiFi_Client_Class_Flush_A41DE907_E9CC_43DD_8446_DEFA57E563FD, "", ".");

int Berry_WiFi_Client_Class_Write_D71861AD_6E64_46E9_B1D6_41ED98ED74D5(Xila_Namespace::Communication_Types::WiFi_Client_Class* I, int A_0)
{
return (int)I->Write((unsigned char)A_0); 
}
BE_FUNC_CTYPE_DECLARE(Berry_WiFi_Client_Class_Write_D71861AD_6E64_46E9_B1D6_41ED98ED74D5, "i", ".i");

int Berry_WiFi_Client_Class_Write_Bytes_BB858350_CAB4_4509_9570_3F3D377FA43D(Xila_Namespace::Communication_Types::WiFi_Client_Class* I, const unsigned char* A_0, int A_1)
{
return (int)I->Write_Bytes(A_0, (unsigned int)A_1); 
}
BE_FUNC_CTYPE_DECLARE(Berry_WiFi_Client_Class_Write_Bytes_BB858350_CAB4_4509_9570_3F3D377FA43D, "i", ".si");

int Berry_WiFi_Client_Class_Write_String_37547934_75C6_4689_9DB5_FB3CC463C769(Xila_Namespace::Communication_Types::WiFi_Client_Class* I, const char* A_0)
{
return (int)I->Write_String(A_0); 
}
BE_FUNC_CTYPE_DECLARE(Berry_WiFi_Client_Class_Write_String_37547934_75C6_4689_9DB5_FB3CC463C769, "i", ".s");

// - - Operators
bool Berry_WiFi_Client_Class_Operator_34F78E3F_3792_4913_99AE_C9CEC0C5375E(Xila_Namespace::Communication_Types::WiFi_Client_Class* I, Xila_Namespace::Communication_Types::WiFi_Client_Class* A_0)
{
return *I == *A_0;
}
BE_FUNC_CTYPE_DECLARE(Berry_WiFi_Client_Class_Operator_34F78E3F_3792_4913_99AE_C9CEC0C5375E, "b", "..")

bool Berry_WiFi_Client_Class_Operator_7AF44339_6CAC_442A_B29A_59345A420CB9(Xila_Namespace::Communication_Types::WiFi_Client_Class* I, Xila_Namespace::Communication_Types::WiFi_Client_Class* A_0)
{
return *I != *A_0;
}
BE_FUNC_CTYPE_DECLARE(Berry_WiFi_Client_Class_Operator_7AF44339_6CAC_442A_B29A_59345A420CB9, "b", "..")


// - Berry declaration
/* @const_object_info_begin
class Berry_WiFi_Client_Type(scope:global, name:WiFi_Client_Type)
{
	_p, var
	init, ctype_func(Berry_WiFi_Client_Class_Initialize_D71F63E8_9027_4318_95D3_6180B37B3115)
	deinit, ctype_func(Berry_WiFi_Client_Class_Deinitialize_12F6DC52_18C5_42A3_BBE3_07120D73D775)
	Connect, ctype_func(Berry_WiFi_Client_Class_Connect_7BB4464A_A35E_47C4_9A67_FCEA1711F7F0)
	Stop, ctype_func(Berry_WiFi_Client_Class_Stop_3EDB5143_C347_4D5F_B338_A77A9908933F)
	Connected, ctype_func(Berry_WiFi_Client_Class_Connected_00D0DE2E_54CD_4057_B640_AAE60621402B)
	Last_Error, ctype_func(Berry_WiFi_Client_Class_Last_Error_1DCB1A74_1915_4B46_B845_21F12DFDA900)
	Set_Insecure, ctype_func(Berry_WiFi_Client_Class_Set_Insecure_AED71CEA_AD76_4574_852E_B33D51FC2FD5)
	Set_Handshake_Timeout, ctype_func(Berry_WiFi_Client_Class_Set_Handshake_Timeout_EA871E8B_B5EC_4C31_961B_11747CBA18A1)
	Set_Timeout, ctype_func(Berry_WiFi_Client_Class_Set_Timeout_0DFA8D04_A213_4CD8_ACC4_E239DE2F4952)
	Available, ctype_func(Berry_WiFi_Client_Class_Available_775064BA_93EF_413E_BA8A_7FCDF8A8E313)
	Peek, ctype_func(Berry_WiFi_Client_Class_Peek_BA54E799_4145_4BEC_9A18_B4F72D6457DB)
	Read, ctype_func(Berry_WiFi_Client_Class_Read_52469351_8C4E_4AF1_AFAF_99F9E9B84509)
	Read_Bytes, ctype_func(Berry_WiFi_Client_Class_Read_Bytes_41C1A5B4_C7E6_4203_9F7A_A73916E04035)
	Read_String, ctype_func(Berry_WiFi_Client_Class_Read_String_DF74408E_E893_4389_A6EB_17767485E363)
	Flush, ctype_func(Berry_WiFi_Client_Class_Flush_A41DE907_E9CC_43DD_8446_DEFA57E563FD)
	Write, ctype_func(Berry_WiFi_Client_Class_Write_D71861AD_6E64_46E9_B1D6_41ED98ED74D5)
	Write_Bytes, ctype_func(Berry_WiFi_Client_Class_Write_Bytes_BB858350_CAB4_4509_9570_3F3D377FA43D)
	Write_String, ctype_func(Berry_WiFi_Client_Class_Write_String_37547934_75C6_4689_9DB5_FB3CC463C769)
	==, ctype_func(Berry_WiFi_Client_Class_Operator_34F78E3F_3792_4913_99AE_C9CEC0C5375E)
	!=, ctype_func(Berry_WiFi_Client_Class_Operator_7AF44339_6CAC_442A_B29A_59345A420CB9)

}
@const_object_info_end */


extern "C"
{
	#include "../generate/be_fixed_Berry_WiFi_Client_Type.h"
}
// - Functions
int Berry_Communication_Class_Start_01DB4A3D_4BDA_4FB8_B72C_6991E8DE3DCF()
{
return (int)Communication.Start(); 
}
BE_FUNC_CTYPE_DECLARE(Berry_Communication_Class_Start_01DB4A3D_4BDA_4FB8_B72C_6991E8DE3DCF, "i", "");


int Berry_Communication_Class_Stop_881512FE_FF85_4D64_B896_05210C8E0766()
{
return (int)Communication.Stop(); 
}
BE_FUNC_CTYPE_DECLARE(Berry_Communication_Class_Stop_881512FE_FF85_4D64_B896_05210C8E0766, "i", "");


void* Berry_Communication_Class_Get_Pointer()
{
	return (Module_Type*)&Communication;
}
BE_FUNC_CTYPE_DECLARE(Berry_Communication_Class_Get_Pointer, "c", "")

// - Berry declaration
/* @const_object_info_begin
module Communication (scope:global)
{
	Start, ctype_func(Berry_Communication_Class_Start_01DB4A3D_4BDA_4FB8_B72C_6991E8DE3DCF)
	Stop, ctype_func(Berry_Communication_Class_Stop_881512FE_FF85_4D64_B896_05210C8E0766)
	Get_Pointer, ctype_func(Berry_Communication_Class_Get_Pointer)

	IP_Address_Type, class(Berry_IP_Address_Type)

	HTTPS_Client_Type, class(Berry_HTTPS_Client_Type)

	WiFi_Client_Type, class(Berry_WiFi_Client_Type)

	HTTP_Code_Continue, int(100)
	HTTP_Code_Switching_Protocols, int(101)
	HTTP_Code_Processing, int(102)
	HTTP_Code_OK, int(200)
	HTTP_Code_Created, int(201)
	HTTP_Code_Accepted, int(202)
	HTTP_Code_Non_Authoritative_Information, int(203)
	HTTP_Code_No_Content, int(204)
	HTTP_Code_Reset_Content, int(205)
	HTTP_Code_Partial_Content, int(206)
	HTTP_Code_Multi_Status, int(207)
	HTTP_Code_Already_Reported, int(208)
	HTTP_Code_I_M_Used, int(226)
	HTTP_Code_Multiple_Choices, int(300)
	HTTP_Code_Moved_Permanently, int(301)
	HTTP_Code_Found, int(302)
	HTTP_Code_See_Other, int(303)
	HTTP_Code_Not_Modified, int(304)
	HTTP_Code_Use_Proxy, int(305)
	HTTP_Code_Temporary_Redirect, int(307)
	HTTP_Code_Permanent_Redirect, int(308)
	HTTP_Code_Bad_Request, int(400)
	HTTP_Code_Unauthorized, int(401)
	HTTP_Code_Payment_Required, int(402)
	HTTP_Code_Forbidden, int(403)
	HTTP_Code_Not_Found, int(404)
	HTTP_Code_Method_Not_Allowed, int(405)
	HTTP_Code_Not_Acceptable, int(406)
	HTTP_Code_Proxy_Authentication_Required, int(407)
	HTTP_Code_Request_Timeout, int(408)
	HTTP_Code_Conflict, int(409)
	HTTP_Code_Gone, int(410)
	HTTP_Code_Length_Required, int(411)
	HTTP_Code_Precondition_Failed, int(412)
	HTTP_Code_Payload_Too_Large, int(413)
	HTTP_Code_URI_Too_Long, int(414)
	HTTP_Code_Unsupported_Media_Type, int(415)
	HTTP_Code_Range_Not_Satisfiable, int(416)
	HTTP_Code_Expectation_Failed, int(417)
	HTTP_Code_Misdirected_Request, int(421)
	HTTP_Code_Unprocessable_Entity, int(422)
	HTTP_Code_Locked, int(423)
	HTTP_Code_Failed_Dependency, int(424)
	HTTP_Code_Upgrade_Required, int(426)
	HTTP_Code_Precondition_Required, int(428)
	HTTP_Code_Too_Many_Requests, int(429)
	HTTP_Code_Request_Header_Fields_Too_Large, int(431)
	HTTP_Code_Internal_Server_Error, int(500)
	HTTP_Code_Not_Implemented, int(501)
	HTTP_Code_Bad_Gateway, int(502)
	HTTP_Code_Service_Unavailable, int(503)
	HTTP_Code_Gateway_Timeout, int(504)
	HTTP_Code_HTTP_Version_Not_Supported, int(505)
	HTTP_Code_Variant_Also_Negotiates, int(506)
	HTTP_Code_Insufficient_Storage, int(507)
	HTTP_Code_Loop_Detected, int(508)
	HTTP_Code_Not_Extended, int(510)
	HTTP_Code_Network_Authentication_Required, int(511)

	Status_No_Shield, int(0)
	Status_Idle, int(1)
	Status_No_SSID_Available, int(2)
	Status_Scan_Completed, int(3)
	Status_Connected, int(4)
	Status_Connection_Failed, int(5)
	Status_Connection_Lost, int(6)
	Status_Disconnected, int(7)

	Mode_None, int(0)
	Mode_Station, int(1)
	Mode_Access_Point, int(2)
	Mode_Station_Access_Point, int(3)

	Authentication_Mode_Open, int(0)
	Authentication_Mode_WEP, int(1)
	Authentication_Mode_WPA_PSK, int(2)
	Authentication_Mode_WPA2_PSK, int(3)
	Authentication_Mode_WPA_WPA2_PSK, int(4)
	Authentication_Mode_WPA2_ENTERPRISE, int(5)
	Authentication_Mode_WPA3_PSK, int(6)
	Authentication_Mode_WPA2_WPA3_PSK, int(7)
	Authentication_Mode_WAPI_PSK, int(8)
	Authentication_Mode_MAX, int(9)

	WPA2_Authentication_Method_TLS, int(0)
	WPA2_Authentication_Method_PEAP, int(1)
	WPA2_Authentication_Method_TTLS, int(2)

}
@const_object_info_end */


extern "C"
{
	#include "../generate/be_fixed_Communication.h"
}