// This file is automatically generated by the Generate.py script.
#include "Software/Berry/Berry.hpp"
extern "C"
{
#include "be_constobj.h"
#include "be_mapping.h"
}
using namespace Xila_Namespace;
using namespace Communication_Types;

// - Functions

// - - Constructors
void * Berry_IP_Address_Class_Initialize_2FC06033_5273_4D35_A2A0_21752755FA15(bvm* V)
{
void* Pointer = be_malloc(V, sizeof(Communication_Types::IP_Address_Class));
return new (Pointer) Communication_Types::IP_Address_Class(); 
}
BE_FUNC_CTYPE_DECLARE(Berry_IP_Address_Class_Initialize_2FC06033_5273_4D35_A2A0_21752755FA15, "+_p", "@");

void * Berry_IP_Address_Class_Initialize_5500B876_EB02_4654_893A_34EE8AD63A8F(bvm* V, bool A_0)
{
void* Pointer = be_malloc(V, sizeof(Communication_Types::IP_Address_Class));
return new (Pointer) Communication_Types::IP_Address_Class(A_0); 
}
BE_FUNC_CTYPE_DECLARE(Berry_IP_Address_Class_Initialize_5500B876_EB02_4654_893A_34EE8AD63A8F, "+_p", "@b");

void * Berry_IP_Address_Class_Initialize_4FD0AD3B_1BB2_447E_B370_5AA07E729FE9(bvm* V, int A_0)
{
void* Pointer = be_malloc(V, sizeof(Communication_Types::IP_Address_Class));
return new (Pointer) Communication_Types::IP_Address_Class((unsigned int)A_0); 
}
BE_FUNC_CTYPE_DECLARE(Berry_IP_Address_Class_Initialize_4FD0AD3B_1BB2_447E_B370_5AA07E729FE9, "+_p", "@i");

void * Berry_IP_Address_Class_Initialize_A8D9E7A2_3025_4BC4_9E23_015D82CF92A6(bvm* V, const unsigned char* A_0, bool A_1 = true)
{
void* Pointer = be_malloc(V, sizeof(Communication_Types::IP_Address_Class));
return new (Pointer) Communication_Types::IP_Address_Class(A_0, A_1); 
}
BE_FUNC_CTYPE_DECLARE(Berry_IP_Address_Class_Initialize_A8D9E7A2_3025_4BC4_9E23_015D82CF92A6, "+_p", "@s[b");

void * Berry_IP_Address_Class_Initialize_399D3A68_ADC5_4251_882C_8BE16EFB1FBB(bvm* V, int A_0, int A_1, int A_2, int A_3)
{
void* Pointer = be_malloc(V, sizeof(Communication_Types::IP_Address_Class));
return new (Pointer) Communication_Types::IP_Address_Class((unsigned char)A_0, (unsigned char)A_1, (unsigned char)A_2, (unsigned char)A_3); 
}
BE_FUNC_CTYPE_DECLARE(Berry_IP_Address_Class_Initialize_399D3A68_ADC5_4251_882C_8BE16EFB1FBB, "+_p", "@iiii");

void * Berry_IP_Address_Class_Initialize_07697D7F_C993_4B05_9E79_FD8E0032A463(bvm* V)
{
void* Pointer = be_malloc(V, sizeof(Communication_Types::IP_Address_Class));
return new (Pointer) Communication_Types::IP_Address_Class(); 
}
BE_FUNC_CTYPE_DECLARE(Berry_IP_Address_Class_Initialize_07697D7F_C993_4B05_9E79_FD8E0032A463, "+_p", "@");

void * Berry_IP_Address_Class_Initialize_6702F18A_C4E1_487A_AF4B_273CF87AB5F2(bvm* V)
{
void* Pointer = be_malloc(V, sizeof(Communication_Types::IP_Address_Class));
return new (Pointer) Communication_Types::IP_Address_Class(); 
}
BE_FUNC_CTYPE_DECLARE(Berry_IP_Address_Class_Initialize_6702F18A_C4E1_487A_AF4B_273CF87AB5F2, "+_p", "@");


// - - Destructors
void Berry_IP_Address_Class_Deinitialize_9C5C7853_E99E_426B_A7D1_EAB8CCE9600F(bvm* V, Xila_Namespace::Communication_Types::IP_Address_Class* I)
{
if (!I) { return; }
I->~IP_Address_Class();
be_free(V, I, sizeof(Communication_Types::IP_Address_Class));
}
BE_FUNC_CTYPE_DECLARE(Berry_IP_Address_Class_Deinitialize_9C5C7853_E99E_426B_A7D1_EAB8CCE9600F, "", "@.");


// - - Functions
const char* Berry_IP_Address_Class_To_C29F1C51_65C9_47B8_A093_D605ADC3DECE(bvm* V, Xila_Namespace::Communication_Types::IP_Address_Class* I)
{
String_Type S_0;
S_0.Set_Buffer((char*)Berry_Class::Get_Instance(V)->Buffer, sizeof(Berry_Class::Buffer));
I->To(S_0); 
return S_0;
}
BE_FUNC_CTYPE_DECLARE(Berry_IP_Address_Class_To_C29F1C51_65C9_47B8_A093_D605ADC3DECE, "s", "@.");

bool Berry_IP_Address_Class_Is_IP_v4_E90204DD_9DA4_4A04_842E_A4A9DD45BCCE(Xila_Namespace::Communication_Types::IP_Address_Class* I)
{
return I->Is_IP_v4(); 
}
BE_FUNC_CTYPE_DECLARE(Berry_IP_Address_Class_Is_IP_v4_E90204DD_9DA4_4A04_842E_A4A9DD45BCCE, "b", ".");

void Berry_IP_Address_Class_Set_IP_Version_C2017810_56BE_4908_8885_76916C691363(Xila_Namespace::Communication_Types::IP_Address_Class* I, bool A_0)
{
return I->Set_IP_Version(A_0); 
}
BE_FUNC_CTYPE_DECLARE(Berry_IP_Address_Class_Set_IP_Version_C2017810_56BE_4908_8885_76916C691363, "", ".b");

// - - Operators
bool Berry_IP_Address_Class_Operator_665C1474_45C6_469E_B2C1_BF81812A38A2(Xila_Namespace::Communication_Types::IP_Address_Class* I, Xila_Namespace::Communication_Types::IP_Address_Class* A_0)
{
return *I == *A_0;
}
BE_FUNC_CTYPE_DECLARE(Berry_IP_Address_Class_Operator_665C1474_45C6_469E_B2C1_BF81812A38A2, "b", "..")

bool Berry_IP_Address_Class_Operator_63BF6932_8C67_487C_8C93_8017DFEA6B3F(Xila_Namespace::Communication_Types::IP_Address_Class* I, Xila_Namespace::Communication_Types::IP_Address_Class* A_0)
{
return *I == *A_0;
}
BE_FUNC_CTYPE_DECLARE(Berry_IP_Address_Class_Operator_63BF6932_8C67_487C_8C93_8017DFEA6B3F, "b", "..")


// - Berry declaration
/* @const_object_info_begin
class Berry_IP_Address_Type(scope:global, name:IP_Address_Type)
{
	_p, var
	init, ctype_func(Berry_IP_Address_Class_Initialize_2FC06033_5273_4D35_A2A0_21752755FA15)
	init, ctype_func(Berry_IP_Address_Class_Initialize_5500B876_EB02_4654_893A_34EE8AD63A8F)
	init, ctype_func(Berry_IP_Address_Class_Initialize_4FD0AD3B_1BB2_447E_B370_5AA07E729FE9)
	init, ctype_func(Berry_IP_Address_Class_Initialize_A8D9E7A2_3025_4BC4_9E23_015D82CF92A6)
	init, ctype_func(Berry_IP_Address_Class_Initialize_399D3A68_ADC5_4251_882C_8BE16EFB1FBB)
	init, ctype_func(Berry_IP_Address_Class_Initialize_07697D7F_C993_4B05_9E79_FD8E0032A463)
	init, ctype_func(Berry_IP_Address_Class_Initialize_6702F18A_C4E1_487A_AF4B_273CF87AB5F2)
	deinit, ctype_func(Berry_IP_Address_Class_Deinitialize_9C5C7853_E99E_426B_A7D1_EAB8CCE9600F)
	To, ctype_func(Berry_IP_Address_Class_To_C29F1C51_65C9_47B8_A093_D605ADC3DECE)
	Is_IP_v4, ctype_func(Berry_IP_Address_Class_Is_IP_v4_E90204DD_9DA4_4A04_842E_A4A9DD45BCCE)
	Set_IP_Version, ctype_func(Berry_IP_Address_Class_Set_IP_Version_C2017810_56BE_4908_8885_76916C691363)
	==, ctype_func(Berry_IP_Address_Class_Operator_665C1474_45C6_469E_B2C1_BF81812A38A2)
	==, ctype_func(Berry_IP_Address_Class_Operator_63BF6932_8C67_487C_8C93_8017DFEA6B3F)

}
@const_object_info_end */


extern "C"
{
	#include "../generate/be_fixed_Berry_IP_Address_Type.h"
}
// - Functions

// - - Constructors
void * Berry_HTTPS_Client_Class_Initialize_483F7F81_2E6C_4DB2_AE60_8EEDD41C981E(bvm* V)
{
void* Pointer = be_malloc(V, sizeof(Communication_Types::HTTPS_Client_Class));
return new (Pointer) Communication_Types::HTTPS_Client_Class(); 
}
BE_FUNC_CTYPE_DECLARE(Berry_HTTPS_Client_Class_Initialize_483F7F81_2E6C_4DB2_AE60_8EEDD41C981E, "+_p", "@");


// - - Destructors
void Berry_HTTPS_Client_Class_Deinitialize_4E348E02_384C_426D_873F_584547EC6B47(bvm* V, Xila_Namespace::Communication_Types::HTTPS_Client_Class* I)
{
if (!I) { return; }
I->~HTTPS_Client_Class();
be_free(V, I, sizeof(Communication_Types::HTTPS_Client_Class));
}
BE_FUNC_CTYPE_DECLARE(Berry_HTTPS_Client_Class_Deinitialize_4E348E02_384C_426D_873F_584547EC6B47, "", "@.");


// - - Functions
int Berry_HTTPS_Client_Class_Begin_47F049D3_445E_437D_8B65_20356B64C390(Xila_Namespace::Communication_Types::HTTPS_Client_Class* I, ::Xila_Namespace::Communication_Types::WiFi_Client_Class* A_0, const char* A_1, int A_2, const char* A_3 = __null, bool A_4 = false)
{
return (int)I->Begin(*A_0, A_1, (short unsigned int)A_2, A_3, A_4); 
}
BE_FUNC_CTYPE_DECLARE(Berry_HTTPS_Client_Class_Begin_47F049D3_445E_437D_8B65_20356B64C390, "i", "..si[sb");

void Berry_HTTPS_Client_Class_End_0D6C2438_7DE1_4898_B1A0_04C2824028B0(Xila_Namespace::Communication_Types::HTTPS_Client_Class* I)
{
return I->End(); 
}
BE_FUNC_CTYPE_DECLARE(Berry_HTTPS_Client_Class_End_0D6C2438_7DE1_4898_B1A0_04C2824028B0, "", ".");

bool Berry_HTTPS_Client_Class_Connected_398A7987_9517_48C3_A3B4_13662FBEEEA6(Xila_Namespace::Communication_Types::HTTPS_Client_Class* I)
{
return I->Connected(); 
}
BE_FUNC_CTYPE_DECLARE(Berry_HTTPS_Client_Class_Connected_398A7987_9517_48C3_A3B4_13662FBEEEA6, "b", ".");

int Berry_HTTPS_Client_Class_Get_30E7B2B0_57BA_4743_800F_F517DE2B9D19(Xila_Namespace::Communication_Types::HTTPS_Client_Class* I)
{
return (int)I->Get(); 
}
BE_FUNC_CTYPE_DECLARE(Berry_HTTPS_Client_Class_Get_30E7B2B0_57BA_4743_800F_F517DE2B9D19, "i", ".");

int Berry_HTTPS_Client_Class_Patch_1C4687A7_55FA_4044_98A6_67759656CD84(Xila_Namespace::Communication_Types::HTTPS_Client_Class* I, const char* A_0)
{
return (int)I->Patch(A_0); 
}
BE_FUNC_CTYPE_DECLARE(Berry_HTTPS_Client_Class_Patch_1C4687A7_55FA_4044_98A6_67759656CD84, "i", ".s");

int Berry_HTTPS_Client_Class_Post_DC9F4337_91ED_4179_8B90_D75EC8C3E2F7(Xila_Namespace::Communication_Types::HTTPS_Client_Class* I, const char* A_0)
{
return (int)I->Post(A_0); 
}
BE_FUNC_CTYPE_DECLARE(Berry_HTTPS_Client_Class_Post_DC9F4337_91ED_4179_8B90_D75EC8C3E2F7, "i", ".s");

int Berry_HTTPS_Client_Class_Put_36D0B73D_DAC5_4D15_B41E_67F0A0E19E58(Xila_Namespace::Communication_Types::HTTPS_Client_Class* I, const char* A_0)
{
return (int)I->Put(A_0); 
}
BE_FUNC_CTYPE_DECLARE(Berry_HTTPS_Client_Class_Put_36D0B73D_DAC5_4D15_B41E_67F0A0E19E58, "i", ".s");

int Berry_HTTPS_Client_Class_Send_Request_6E7EA970_DAC7_4858_83F5_68ED08893F3C(Xila_Namespace::Communication_Types::HTTPS_Client_Class* I, const char* A_0, const char* A_1 = __null)
{
return (int)I->Send_Request(A_0, A_1); 
}
BE_FUNC_CTYPE_DECLARE(Berry_HTTPS_Client_Class_Send_Request_6E7EA970_DAC7_4858_83F5_68ED08893F3C, "i", ".s[s");

void Berry_HTTPS_Client_Class_Add_Header_66A436FD_56FF_4E1E_AF61_46DAC05586C8(Xila_Namespace::Communication_Types::HTTPS_Client_Class* I, const char* A_0, const char* A_1, bool A_2 = false, bool A_3 = true)
{
return I->Add_Header(A_0, A_1, A_2, A_3); 
}
BE_FUNC_CTYPE_DECLARE(Berry_HTTPS_Client_Class_Add_Header_66A436FD_56FF_4E1E_AF61_46DAC05586C8, "", ".ss[bb");

bool Berry_HTTPS_Client_Class_Has_Header_FF03B368_E906_4470_ACDE_19E5650042EE(Xila_Namespace::Communication_Types::HTTPS_Client_Class* I, const char* A_0)
{
return I->Has_Header(A_0); 
}
BE_FUNC_CTYPE_DECLARE(Berry_HTTPS_Client_Class_Has_Header_FF03B368_E906_4470_ACDE_19E5650042EE, "b", ".s");

void Berry_HTTPS_Client_Class_Use_HTTP_1_0_2F40A241_10B3_4F14_9AFE_873CB4A9721F(Xila_Namespace::Communication_Types::HTTPS_Client_Class* I, bool A_0)
{
return I->Use_HTTP_1_0(A_0); 
}
BE_FUNC_CTYPE_DECLARE(Berry_HTTPS_Client_Class_Use_HTTP_1_0_2F40A241_10B3_4F14_9AFE_873CB4A9721F, "", ".b");

void Berry_HTTPS_Client_Class_Reset_Cookie_Jar_C3A7EB8F_0971_48E6_BA87_BC58E066D646(Xila_Namespace::Communication_Types::HTTPS_Client_Class* I)
{
return I->Reset_Cookie_Jar(); 
}
BE_FUNC_CTYPE_DECLARE(Berry_HTTPS_Client_Class_Reset_Cookie_Jar_C3A7EB8F_0971_48E6_BA87_BC58E066D646, "", ".");

void Berry_HTTPS_Client_Class_Clear_All_Cookies_A7D1A12C_4390_49F3_AD66_2BA531ECC0CB(Xila_Namespace::Communication_Types::HTTPS_Client_Class* I)
{
return I->Clear_All_Cookies(); 
}
BE_FUNC_CTYPE_DECLARE(Berry_HTTPS_Client_Class_Clear_All_Cookies_A7D1A12C_4390_49F3_AD66_2BA531ECC0CB, "", ".");

void Berry_HTTPS_Client_Class_Set_Reuse_17A3BE12_0E02_4155_8C36_41E20899F2B3(Xila_Namespace::Communication_Types::HTTPS_Client_Class* I, bool A_0)
{
return I->Set_Reuse(A_0); 
}
BE_FUNC_CTYPE_DECLARE(Berry_HTTPS_Client_Class_Set_Reuse_17A3BE12_0E02_4155_8C36_41E20899F2B3, "", ".b");

void Berry_HTTPS_Client_Class_Set_User_Agent_A10D1BD9_C7A9_4160_A7CA_C61912C72AC8(Xila_Namespace::Communication_Types::HTTPS_Client_Class* I, const char* A_0)
{
return I->Set_User_Agent(A_0); 
}
BE_FUNC_CTYPE_DECLARE(Berry_HTTPS_Client_Class_Set_User_Agent_A10D1BD9_C7A9_4160_A7CA_C61912C72AC8, "", ".s");

void Berry_HTTPS_Client_Class_Set_Authorization_4FCC727F_EEF7_4539_9966_E626EBEB58AE(Xila_Namespace::Communication_Types::HTTPS_Client_Class* I, const char* A_0, const char* A_1 = __null)
{
return I->Set_Authorization(A_0, A_1); 
}
BE_FUNC_CTYPE_DECLARE(Berry_HTTPS_Client_Class_Set_Authorization_4FCC727F_EEF7_4539_9966_E626EBEB58AE, "", ".s[s");

void Berry_HTTPS_Client_Class_Set_Authorization_Type_D485F75B_8ECE_4108_B26A_F75A7EB6FA07(Xila_Namespace::Communication_Types::HTTPS_Client_Class* I, const char* A_0)
{
return I->Set_Authorization_Type(A_0); 
}
BE_FUNC_CTYPE_DECLARE(Berry_HTTPS_Client_Class_Set_Authorization_Type_D485F75B_8ECE_4108_B26A_F75A7EB6FA07, "", ".s");

void Berry_HTTPS_Client_Class_Set_Connect_Timeout_067328BE_67CB_4CDD_85C7_984FD0FA2745(Xila_Namespace::Communication_Types::HTTPS_Client_Class* I, int A_0)
{
return I->Set_Connect_Timeout((unsigned int)A_0); 
}
BE_FUNC_CTYPE_DECLARE(Berry_HTTPS_Client_Class_Set_Connect_Timeout_067328BE_67CB_4CDD_85C7_984FD0FA2745, "", ".i");

void Berry_HTTPS_Client_Class_Set_Timeout_0F7BABCB_87B2_4070_B7E4_A46B704030AA(Xila_Namespace::Communication_Types::HTTPS_Client_Class* I, int A_0)
{
return I->Set_Timeout((unsigned int)A_0); 
}
BE_FUNC_CTYPE_DECLARE(Berry_HTTPS_Client_Class_Set_Timeout_0F7BABCB_87B2_4070_B7E4_A46B704030AA, "", ".i");

void Berry_HTTPS_Client_Class_Set_Follow_Redirects_E9CC4DD5_DABB_423D_9B37_6E6D2A5E91CC(Xila_Namespace::Communication_Types::HTTPS_Client_Class* I, bool A_0, bool A_1 = false)
{
return I->Set_Follow_Redirects(A_0, A_1); 
}
BE_FUNC_CTYPE_DECLARE(Berry_HTTPS_Client_Class_Set_Follow_Redirects_E9CC4DD5_DABB_423D_9B37_6E6D2A5E91CC, "", ".b[b");

void Berry_HTTPS_Client_Class_Set_Redirect_Limit_0F5912D9_1C0C_4EEB_BDD0_14F57CF39324(Xila_Namespace::Communication_Types::HTTPS_Client_Class* I, int A_0)
{
return I->Set_Redirect_Limit((short unsigned int)A_0); 
}
BE_FUNC_CTYPE_DECLARE(Berry_HTTPS_Client_Class_Set_Redirect_Limit_0F5912D9_1C0C_4EEB_BDD0_14F57CF39324, "", ".i");

int Berry_HTTPS_Client_Class_Set_URL_18F497DD_3D53_4071_8EC9_DCD9D0582051(Xila_Namespace::Communication_Types::HTTPS_Client_Class* I, const char* A_0)
{
return (int)I->Set_URL(A_0); 
}
BE_FUNC_CTYPE_DECLARE(Berry_HTTPS_Client_Class_Set_URL_18F497DD_3D53_4071_8EC9_DCD9D0582051, "i", ".s");

const char* Berry_HTTPS_Client_Class_Get_Header_0922D375_6F92_4A9C_8FA1_44ACE081C1A0(bvm* V, Xila_Namespace::Communication_Types::HTTPS_Client_Class* I, const char* A_1)
{
String_Type S_0;
S_0.Set_Buffer((char*)Berry_Class::Get_Instance(V)->Buffer, sizeof(Berry_Class::Buffer));
I->Get_Header(S_0, A_1); 
return S_0;
}
BE_FUNC_CTYPE_DECLARE(Berry_HTTPS_Client_Class_Get_Header_0922D375_6F92_4A9C_8FA1_44ACE081C1A0, "s", "@.s");

const char* Berry_HTTPS_Client_Class_Get_Header_Name_75417AC0_F74B_424B_913D_C0FC93FD4A87(bvm* V, Xila_Namespace::Communication_Types::HTTPS_Client_Class* I, int A_1)
{
String_Type S_0;
S_0.Set_Buffer((char*)Berry_Class::Get_Instance(V)->Buffer, sizeof(Berry_Class::Buffer));
I->Get_Header_Name(S_0, (unsigned int)A_1); 
return S_0;
}
BE_FUNC_CTYPE_DECLARE(Berry_HTTPS_Client_Class_Get_Header_Name_75417AC0_F74B_424B_913D_C0FC93FD4A87, "s", "@.i");

int Berry_HTTPS_Client_Class_Get_Header_Count_74B64026_7E9D_46D4_9C52_C202A5CC3272(Xila_Namespace::Communication_Types::HTTPS_Client_Class* I)
{
return (int)I->Get_Header_Count(); 
}
BE_FUNC_CTYPE_DECLARE(Berry_HTTPS_Client_Class_Get_Header_Count_74B64026_7E9D_46D4_9C52_C202A5CC3272, "i", ".");

int Berry_HTTPS_Client_Class_Get_Size_75056B5F_8552_4931_BDCF_ED046084B696(Xila_Namespace::Communication_Types::HTTPS_Client_Class* I)
{
return (int)I->Get_Size(); 
}
BE_FUNC_CTYPE_DECLARE(Berry_HTTPS_Client_Class_Get_Size_75056B5F_8552_4931_BDCF_ED046084B696, "i", ".");

const char* Berry_HTTPS_Client_Class_Get_Location_80C0D80C_40B1_4815_BCEF_0A6527222D41(Xila_Namespace::Communication_Types::HTTPS_Client_Class* I)
{
return I->Get_Location(); 
}
BE_FUNC_CTYPE_DECLARE(Berry_HTTPS_Client_Class_Get_Location_80C0D80C_40B1_4815_BCEF_0A6527222D41, "s", ".");

const char* Berry_HTTPS_Client_Class_Get_String_C284BD0B_C9E2_47EC_9091_56AA890A6DF8(bvm* V, Xila_Namespace::Communication_Types::HTTPS_Client_Class* I)
{
String_Type S_0;
S_0.Set_Buffer((char*)Berry_Class::Get_Instance(V)->Buffer, sizeof(Berry_Class::Buffer));
I->Get_String(S_0); 
return S_0;
}
BE_FUNC_CTYPE_DECLARE(Berry_HTTPS_Client_Class_Get_String_C284BD0B_C9E2_47EC_9091_56AA890A6DF8, "s", "@.");

// - - Operators

// - Berry declaration
/* @const_object_info_begin
class Berry_HTTPS_Client_Type(scope:global, name:HTTPS_Client_Type)
{
	_p, var
	init, ctype_func(Berry_HTTPS_Client_Class_Initialize_483F7F81_2E6C_4DB2_AE60_8EEDD41C981E)
	deinit, ctype_func(Berry_HTTPS_Client_Class_Deinitialize_4E348E02_384C_426D_873F_584547EC6B47)
	Begin, ctype_func(Berry_HTTPS_Client_Class_Begin_47F049D3_445E_437D_8B65_20356B64C390)
	End, ctype_func(Berry_HTTPS_Client_Class_End_0D6C2438_7DE1_4898_B1A0_04C2824028B0)
	Connected, ctype_func(Berry_HTTPS_Client_Class_Connected_398A7987_9517_48C3_A3B4_13662FBEEEA6)
	Get, ctype_func(Berry_HTTPS_Client_Class_Get_30E7B2B0_57BA_4743_800F_F517DE2B9D19)
	Patch, ctype_func(Berry_HTTPS_Client_Class_Patch_1C4687A7_55FA_4044_98A6_67759656CD84)
	Post, ctype_func(Berry_HTTPS_Client_Class_Post_DC9F4337_91ED_4179_8B90_D75EC8C3E2F7)
	Put, ctype_func(Berry_HTTPS_Client_Class_Put_36D0B73D_DAC5_4D15_B41E_67F0A0E19E58)
	Send_Request, ctype_func(Berry_HTTPS_Client_Class_Send_Request_6E7EA970_DAC7_4858_83F5_68ED08893F3C)
	Add_Header, ctype_func(Berry_HTTPS_Client_Class_Add_Header_66A436FD_56FF_4E1E_AF61_46DAC05586C8)
	Has_Header, ctype_func(Berry_HTTPS_Client_Class_Has_Header_FF03B368_E906_4470_ACDE_19E5650042EE)
	Use_HTTP_1_0, ctype_func(Berry_HTTPS_Client_Class_Use_HTTP_1_0_2F40A241_10B3_4F14_9AFE_873CB4A9721F)
	Reset_Cookie_Jar, ctype_func(Berry_HTTPS_Client_Class_Reset_Cookie_Jar_C3A7EB8F_0971_48E6_BA87_BC58E066D646)
	Clear_All_Cookies, ctype_func(Berry_HTTPS_Client_Class_Clear_All_Cookies_A7D1A12C_4390_49F3_AD66_2BA531ECC0CB)
	Set_Reuse, ctype_func(Berry_HTTPS_Client_Class_Set_Reuse_17A3BE12_0E02_4155_8C36_41E20899F2B3)
	Set_User_Agent, ctype_func(Berry_HTTPS_Client_Class_Set_User_Agent_A10D1BD9_C7A9_4160_A7CA_C61912C72AC8)
	Set_Authorization, ctype_func(Berry_HTTPS_Client_Class_Set_Authorization_4FCC727F_EEF7_4539_9966_E626EBEB58AE)
	Set_Authorization_Type, ctype_func(Berry_HTTPS_Client_Class_Set_Authorization_Type_D485F75B_8ECE_4108_B26A_F75A7EB6FA07)
	Set_Connect_Timeout, ctype_func(Berry_HTTPS_Client_Class_Set_Connect_Timeout_067328BE_67CB_4CDD_85C7_984FD0FA2745)
	Set_Timeout, ctype_func(Berry_HTTPS_Client_Class_Set_Timeout_0F7BABCB_87B2_4070_B7E4_A46B704030AA)
	Set_Follow_Redirects, ctype_func(Berry_HTTPS_Client_Class_Set_Follow_Redirects_E9CC4DD5_DABB_423D_9B37_6E6D2A5E91CC)
	Set_Redirect_Limit, ctype_func(Berry_HTTPS_Client_Class_Set_Redirect_Limit_0F5912D9_1C0C_4EEB_BDD0_14F57CF39324)
	Set_URL, ctype_func(Berry_HTTPS_Client_Class_Set_URL_18F497DD_3D53_4071_8EC9_DCD9D0582051)
	Get_Header, ctype_func(Berry_HTTPS_Client_Class_Get_Header_0922D375_6F92_4A9C_8FA1_44ACE081C1A0)
	Get_Header_Name, ctype_func(Berry_HTTPS_Client_Class_Get_Header_Name_75417AC0_F74B_424B_913D_C0FC93FD4A87)
	Get_Header_Count, ctype_func(Berry_HTTPS_Client_Class_Get_Header_Count_74B64026_7E9D_46D4_9C52_C202A5CC3272)
	Get_Size, ctype_func(Berry_HTTPS_Client_Class_Get_Size_75056B5F_8552_4931_BDCF_ED046084B696)
	Get_Location, ctype_func(Berry_HTTPS_Client_Class_Get_Location_80C0D80C_40B1_4815_BCEF_0A6527222D41)
	Get_String, ctype_func(Berry_HTTPS_Client_Class_Get_String_C284BD0B_C9E2_47EC_9091_56AA890A6DF8)

}
@const_object_info_end */


extern "C"
{
	#include "../generate/be_fixed_Berry_HTTPS_Client_Type.h"
}
// - Functions

// - - Constructors
void * Berry_WiFi_Client_Class_Initialize_C1028B05_9817_4249_9E2D_8C97BF6E8D77(bvm* V)
{
void* Pointer = be_malloc(V, sizeof(Communication_Types::WiFi_Client_Class));
return new (Pointer) Communication_Types::WiFi_Client_Class(); 
}
BE_FUNC_CTYPE_DECLARE(Berry_WiFi_Client_Class_Initialize_C1028B05_9817_4249_9E2D_8C97BF6E8D77, "+_p", "@");


// - - Destructors
void Berry_WiFi_Client_Class_Deinitialize_CE8BCEFC_4942_48B3_BB05_7C551AC839AD(bvm* V, Xila_Namespace::Communication_Types::WiFi_Client_Class* I)
{
if (!I) { return; }
I->~WiFi_Client_Class();
be_free(V, I, sizeof(Communication_Types::WiFi_Client_Class));
}
BE_FUNC_CTYPE_DECLARE(Berry_WiFi_Client_Class_Deinitialize_CE8BCEFC_4942_48B3_BB05_7C551AC839AD, "", "@.");


// - - Functions
int Berry_WiFi_Client_Class_Connect_0FD17A5D_B990_4E93_A85C_2148990FD34E(Xila_Namespace::Communication_Types::WiFi_Client_Class* I, const char* A_0, int A_1, int A_2 = 30000)
{
return (int)I->Connect(A_0, (short unsigned int)A_1, (int)A_2); 
}
BE_FUNC_CTYPE_DECLARE(Berry_WiFi_Client_Class_Connect_0FD17A5D_B990_4E93_A85C_2148990FD34E, "i", ".si[i");

void Berry_WiFi_Client_Class_Stop_56D9C87B_7761_4C50_9946_9A90DC66A4E6(Xila_Namespace::Communication_Types::WiFi_Client_Class* I)
{
return I->Stop(); 
}
BE_FUNC_CTYPE_DECLARE(Berry_WiFi_Client_Class_Stop_56D9C87B_7761_4C50_9946_9A90DC66A4E6, "", ".");

bool Berry_WiFi_Client_Class_Connected_DA851EBE_89BB_4C43_A7D8_30403C9F723A(Xila_Namespace::Communication_Types::WiFi_Client_Class* I)
{
return I->Connected(); 
}
BE_FUNC_CTYPE_DECLARE(Berry_WiFi_Client_Class_Connected_DA851EBE_89BB_4C43_A7D8_30403C9F723A, "b", ".");

const char* Berry_WiFi_Client_Class_Last_Error_94164BCE_5F8B_4279_B3EA_690592195108(bvm* V, Xila_Namespace::Communication_Types::WiFi_Client_Class* I)
{
String_Type S_0;
S_0.Set_Buffer((char*)Berry_Class::Get_Instance(V)->Buffer, sizeof(Berry_Class::Buffer));
I->Last_Error(S_0); 
return S_0;
}
BE_FUNC_CTYPE_DECLARE(Berry_WiFi_Client_Class_Last_Error_94164BCE_5F8B_4279_B3EA_690592195108, "s", "@.");

void Berry_WiFi_Client_Class_Set_Insecure_858632FD_F119_4C46_85E4_0294585F246F(Xila_Namespace::Communication_Types::WiFi_Client_Class* I)
{
return I->Set_Insecure(); 
}
BE_FUNC_CTYPE_DECLARE(Berry_WiFi_Client_Class_Set_Insecure_858632FD_F119_4C46_85E4_0294585F246F, "", ".");

void Berry_WiFi_Client_Class_Set_Handshake_Timeout_F6ADED24_5DBC_4BF7_8D6C_797B42FBD7A6(Xila_Namespace::Communication_Types::WiFi_Client_Class* I, int A_0)
{
return I->Set_Handshake_Timeout((unsigned int)A_0); 
}
BE_FUNC_CTYPE_DECLARE(Berry_WiFi_Client_Class_Set_Handshake_Timeout_F6ADED24_5DBC_4BF7_8D6C_797B42FBD7A6, "", ".i");

void Berry_WiFi_Client_Class_Set_Timeout_CEEB8F46_711A_4A67_B034_F0A7A3781C7C(Xila_Namespace::Communication_Types::WiFi_Client_Class* I, int A_0)
{
return I->Set_Timeout((unsigned int)A_0); 
}
BE_FUNC_CTYPE_DECLARE(Berry_WiFi_Client_Class_Set_Timeout_CEEB8F46_711A_4A67_B034_F0A7A3781C7C, "", ".i");

int Berry_WiFi_Client_Class_Available_4877D3F6_56F7_4BCC_880D_657958182742(Xila_Namespace::Communication_Types::WiFi_Client_Class* I)
{
return (int)I->Available(); 
}
BE_FUNC_CTYPE_DECLARE(Berry_WiFi_Client_Class_Available_4877D3F6_56F7_4BCC_880D_657958182742, "i", ".");

int Berry_WiFi_Client_Class_Peek_14C164E3_2A53_47D0_916A_402B5A2A8FC3(Xila_Namespace::Communication_Types::WiFi_Client_Class* I)
{
return (int)I->Peek(); 
}
BE_FUNC_CTYPE_DECLARE(Berry_WiFi_Client_Class_Peek_14C164E3_2A53_47D0_916A_402B5A2A8FC3, "i", ".");

int Berry_WiFi_Client_Class_Read_8279A767_4CCD_447F_83AB_38F8FF03FC3A(Xila_Namespace::Communication_Types::WiFi_Client_Class* I)
{
return (int)I->Read(); 
}
BE_FUNC_CTYPE_DECLARE(Berry_WiFi_Client_Class_Read_8279A767_4CCD_447F_83AB_38F8FF03FC3A, "i", ".");

const unsigned char* Berry_WiFi_Client_Class_Read_Bytes_5A518A4E_350E_45A6_9E78_E3FF8F54CCE7(bvm* V, Xila_Namespace::Communication_Types::WiFi_Client_Class* I, int A_1)
{
unsigned char* S_0 = (unsigned char*)Berry_Class::Get_Instance(V)->Buffer;
I->Read_Bytes(S_0, (A_1 > sizeof(Berry_Class::Buffer)) ? sizeof(Berry_Class::Buffer) : A_1); 
return S_0;
}
BE_FUNC_CTYPE_DECLARE(Berry_WiFi_Client_Class_Read_Bytes_5A518A4E_350E_45A6_9E78_E3FF8F54CCE7, "s", "@.i");

const char* Berry_WiFi_Client_Class_Read_String_43C8B55E_954B_4F03_90CC_F3F486E6481C(bvm* V, Xila_Namespace::Communication_Types::WiFi_Client_Class* I)
{
String_Type S_0;
S_0.Set_Buffer((char*)Berry_Class::Get_Instance(V)->Buffer, sizeof(Berry_Class::Buffer));
I->Read_String(S_0); 
return S_0;
}
BE_FUNC_CTYPE_DECLARE(Berry_WiFi_Client_Class_Read_String_43C8B55E_954B_4F03_90CC_F3F486E6481C, "s", "@.");

void Berry_WiFi_Client_Class_Flush_597DE81F_3A63_4569_9EE5_DE3E1B306531(Xila_Namespace::Communication_Types::WiFi_Client_Class* I)
{
return I->Flush(); 
}
BE_FUNC_CTYPE_DECLARE(Berry_WiFi_Client_Class_Flush_597DE81F_3A63_4569_9EE5_DE3E1B306531, "", ".");

int Berry_WiFi_Client_Class_Write_E371B807_9B06_4BF6_B1BE_6D7A635D5F32(Xila_Namespace::Communication_Types::WiFi_Client_Class* I, int A_0)
{
return (int)I->Write((unsigned char)A_0); 
}
BE_FUNC_CTYPE_DECLARE(Berry_WiFi_Client_Class_Write_E371B807_9B06_4BF6_B1BE_6D7A635D5F32, "i", ".i");

int Berry_WiFi_Client_Class_Write_Bytes_B1EA22CF_AA6E_4489_BCF3_45B11B7C75AE(Xila_Namespace::Communication_Types::WiFi_Client_Class* I, const unsigned char* A_0, int A_1)
{
return (int)I->Write_Bytes(A_0, (unsigned int)A_1); 
}
BE_FUNC_CTYPE_DECLARE(Berry_WiFi_Client_Class_Write_Bytes_B1EA22CF_AA6E_4489_BCF3_45B11B7C75AE, "i", ".si");

int Berry_WiFi_Client_Class_Write_String_517B674C_5964_4498_A071_7F65DA4EA4A2(Xila_Namespace::Communication_Types::WiFi_Client_Class* I, const char* A_0)
{
return (int)I->Write_String(A_0); 
}
BE_FUNC_CTYPE_DECLARE(Berry_WiFi_Client_Class_Write_String_517B674C_5964_4498_A071_7F65DA4EA4A2, "i", ".s");

// - - Operators
bool Berry_WiFi_Client_Class_Operator_5D7C086A_BE4E_4784_8E3F_F0B5C12EE71D(Xila_Namespace::Communication_Types::WiFi_Client_Class* I, Xila_Namespace::Communication_Types::WiFi_Client_Class* A_0)
{
return *I == *A_0;
}
BE_FUNC_CTYPE_DECLARE(Berry_WiFi_Client_Class_Operator_5D7C086A_BE4E_4784_8E3F_F0B5C12EE71D, "b", "..")

bool Berry_WiFi_Client_Class_Operator_EB599A42_B17C_445D_BB31_997146427367(Xila_Namespace::Communication_Types::WiFi_Client_Class* I, Xila_Namespace::Communication_Types::WiFi_Client_Class* A_0)
{
return *I != *A_0;
}
BE_FUNC_CTYPE_DECLARE(Berry_WiFi_Client_Class_Operator_EB599A42_B17C_445D_BB31_997146427367, "b", "..")


// - Berry declaration
/* @const_object_info_begin
class Berry_WiFi_Client_Type(scope:global, name:WiFi_Client_Type)
{
	_p, var
	init, ctype_func(Berry_WiFi_Client_Class_Initialize_C1028B05_9817_4249_9E2D_8C97BF6E8D77)
	deinit, ctype_func(Berry_WiFi_Client_Class_Deinitialize_CE8BCEFC_4942_48B3_BB05_7C551AC839AD)
	Connect, ctype_func(Berry_WiFi_Client_Class_Connect_0FD17A5D_B990_4E93_A85C_2148990FD34E)
	Stop, ctype_func(Berry_WiFi_Client_Class_Stop_56D9C87B_7761_4C50_9946_9A90DC66A4E6)
	Connected, ctype_func(Berry_WiFi_Client_Class_Connected_DA851EBE_89BB_4C43_A7D8_30403C9F723A)
	Last_Error, ctype_func(Berry_WiFi_Client_Class_Last_Error_94164BCE_5F8B_4279_B3EA_690592195108)
	Set_Insecure, ctype_func(Berry_WiFi_Client_Class_Set_Insecure_858632FD_F119_4C46_85E4_0294585F246F)
	Set_Handshake_Timeout, ctype_func(Berry_WiFi_Client_Class_Set_Handshake_Timeout_F6ADED24_5DBC_4BF7_8D6C_797B42FBD7A6)
	Set_Timeout, ctype_func(Berry_WiFi_Client_Class_Set_Timeout_CEEB8F46_711A_4A67_B034_F0A7A3781C7C)
	Available, ctype_func(Berry_WiFi_Client_Class_Available_4877D3F6_56F7_4BCC_880D_657958182742)
	Peek, ctype_func(Berry_WiFi_Client_Class_Peek_14C164E3_2A53_47D0_916A_402B5A2A8FC3)
	Read, ctype_func(Berry_WiFi_Client_Class_Read_8279A767_4CCD_447F_83AB_38F8FF03FC3A)
	Read_Bytes, ctype_func(Berry_WiFi_Client_Class_Read_Bytes_5A518A4E_350E_45A6_9E78_E3FF8F54CCE7)
	Read_String, ctype_func(Berry_WiFi_Client_Class_Read_String_43C8B55E_954B_4F03_90CC_F3F486E6481C)
	Flush, ctype_func(Berry_WiFi_Client_Class_Flush_597DE81F_3A63_4569_9EE5_DE3E1B306531)
	Write, ctype_func(Berry_WiFi_Client_Class_Write_E371B807_9B06_4BF6_B1BE_6D7A635D5F32)
	Write_Bytes, ctype_func(Berry_WiFi_Client_Class_Write_Bytes_B1EA22CF_AA6E_4489_BCF3_45B11B7C75AE)
	Write_String, ctype_func(Berry_WiFi_Client_Class_Write_String_517B674C_5964_4498_A071_7F65DA4EA4A2)
	==, ctype_func(Berry_WiFi_Client_Class_Operator_5D7C086A_BE4E_4784_8E3F_F0B5C12EE71D)
	!=, ctype_func(Berry_WiFi_Client_Class_Operator_EB599A42_B17C_445D_BB31_997146427367)

}
@const_object_info_end */


extern "C"
{
	#include "../generate/be_fixed_Berry_WiFi_Client_Type.h"
}
// - Functions
int Berry_Communication_Class_Start_79FC54AE_797A_4810_811E_97DEAA64592D()
{
return (int)Communication.Start(); 
}
BE_FUNC_CTYPE_DECLARE(Berry_Communication_Class_Start_79FC54AE_797A_4810_811E_97DEAA64592D, "i", "");


int Berry_Communication_Class_Stop_DC2012CE_96E8_45DF_9102_AC0E71BB11AD()
{
return (int)Communication.Stop(); 
}
BE_FUNC_CTYPE_DECLARE(Berry_Communication_Class_Stop_DC2012CE_96E8_45DF_9102_AC0E71BB11AD, "i", "");


void* Berry_Communication_Class_Get_Pointer()
{
	return (Module_Type*)&Communication;
}
BE_FUNC_CTYPE_DECLARE(Berry_Communication_Class_Get_Pointer, "c", "")

// - Berry declaration
/* @const_object_info_begin
module Communication (scope:global)
{
	Start, ctype_func(Berry_Communication_Class_Start_79FC54AE_797A_4810_811E_97DEAA64592D)
	Stop, ctype_func(Berry_Communication_Class_Stop_DC2012CE_96E8_45DF_9102_AC0E71BB11AD)
	Get_Pointer, ctype_func(Berry_Communication_Class_Get_Pointer)

	IP_Address_Type, class(Berry_IP_Address_Type)

	HTTPS_Client_Type, class(Berry_HTTPS_Client_Type)

	WiFi_Client_Type, class(Berry_WiFi_Client_Type)

	HTTP_Code_Continue, int(100)
	HTTP_Code_Switching_Protocols, int(101)
	HTTP_Code_Processing, int(102)
	HTTP_Code_OK, int(200)
	HTTP_Code_Created, int(201)
	HTTP_Code_Accepted, int(202)
	HTTP_Code_Non_Authoritative_Information, int(203)
	HTTP_Code_No_Content, int(204)
	HTTP_Code_Reset_Content, int(205)
	HTTP_Code_Partial_Content, int(206)
	HTTP_Code_Multi_Status, int(207)
	HTTP_Code_Already_Reported, int(208)
	HTTP_Code_I_M_Used, int(226)
	HTTP_Code_Multiple_Choices, int(300)
	HTTP_Code_Moved_Permanently, int(301)
	HTTP_Code_Found, int(302)
	HTTP_Code_See_Other, int(303)
	HTTP_Code_Not_Modified, int(304)
	HTTP_Code_Use_Proxy, int(305)
	HTTP_Code_Temporary_Redirect, int(307)
	HTTP_Code_Permanent_Redirect, int(308)
	HTTP_Code_Bad_Request, int(400)
	HTTP_Code_Unauthorized, int(401)
	HTTP_Code_Payment_Required, int(402)
	HTTP_Code_Forbidden, int(403)
	HTTP_Code_Not_Found, int(404)
	HTTP_Code_Method_Not_Allowed, int(405)
	HTTP_Code_Not_Acceptable, int(406)
	HTTP_Code_Proxy_Authentication_Required, int(407)
	HTTP_Code_Request_Timeout, int(408)
	HTTP_Code_Conflict, int(409)
	HTTP_Code_Gone, int(410)
	HTTP_Code_Length_Required, int(411)
	HTTP_Code_Precondition_Failed, int(412)
	HTTP_Code_Payload_Too_Large, int(413)
	HTTP_Code_URI_Too_Long, int(414)
	HTTP_Code_Unsupported_Media_Type, int(415)
	HTTP_Code_Range_Not_Satisfiable, int(416)
	HTTP_Code_Expectation_Failed, int(417)
	HTTP_Code_Misdirected_Request, int(421)
	HTTP_Code_Unprocessable_Entity, int(422)
	HTTP_Code_Locked, int(423)
	HTTP_Code_Failed_Dependency, int(424)
	HTTP_Code_Upgrade_Required, int(426)
	HTTP_Code_Precondition_Required, int(428)
	HTTP_Code_Too_Many_Requests, int(429)
	HTTP_Code_Request_Header_Fields_Too_Large, int(431)
	HTTP_Code_Internal_Server_Error, int(500)
	HTTP_Code_Not_Implemented, int(501)
	HTTP_Code_Bad_Gateway, int(502)
	HTTP_Code_Service_Unavailable, int(503)
	HTTP_Code_Gateway_Timeout, int(504)
	HTTP_Code_HTTP_Version_Not_Supported, int(505)
	HTTP_Code_Variant_Also_Negotiates, int(506)
	HTTP_Code_Insufficient_Storage, int(507)
	HTTP_Code_Loop_Detected, int(508)
	HTTP_Code_Not_Extended, int(510)
	HTTP_Code_Network_Authentication_Required, int(511)

	Status_No_Shield, int(0)
	Status_Idle, int(1)
	Status_No_SSID_Available, int(2)
	Status_Scan_Completed, int(3)
	Status_Connected, int(4)
	Status_Connection_Failed, int(5)
	Status_Connection_Lost, int(6)
	Status_Disconnected, int(7)

	Mode_None, int(0)
	Mode_Station, int(1)
	Mode_Access_Point, int(2)
	Mode_Station_Access_Point, int(3)

	Authentication_Mode_Open, int(0)
	Authentication_Mode_WEP, int(1)
	Authentication_Mode_WPA_PSK, int(2)
	Authentication_Mode_WPA2_PSK, int(3)
	Authentication_Mode_WPA_WPA2_PSK, int(4)
	Authentication_Mode_WPA2_ENTERPRISE, int(5)
	Authentication_Mode_WPA3_PSK, int(6)
	Authentication_Mode_WPA2_WPA3_PSK, int(7)
	Authentication_Mode_WAPI_PSK, int(8)
	Authentication_Mode_MAX, int(9)

	WPA2_Authentication_Method_TLS, int(0)
	WPA2_Authentication_Method_PEAP, int(1)
	WPA2_Authentication_Method_TTLS, int(2)

}
@const_object_info_end */


extern "C"
{
	#include "../generate/be_fixed_Communication.h"
}