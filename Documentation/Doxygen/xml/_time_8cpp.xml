<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="_time_8cpp" kind="file" language="C++">
    <compoundname>Time.cpp</compoundname>
    <includes refid="_core_8hpp" local="yes">Core/Core.hpp</includes>
    <incdepgraph>
      <node id="43">
        <label>esp_ota_ops.h</label>
      </node>
      <node id="33">
        <label>Core/Abstraction/Memory.hpp</label>
        <link refid="_memory_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>FS.h</label>
      </node>
      <node id="10">
        <label>Print.h</label>
      </node>
      <node id="6">
        <label>SPI.h</label>
      </node>
      <node id="23">
        <label>Battery_Library.hpp</label>
      </node>
      <node id="31">
        <label>Core/Abstraction/Display.hpp</label>
        <link refid="_display_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>soc/efuse_reg.h</label>
      </node>
      <node id="3">
        <label>stdint.h</label>
      </node>
      <node id="28">
        <label>Core/Modules/System.hpp</label>
        <link refid="_system_8hpp"/>
      </node>
      <node id="24">
        <label>Configuration.hpp</label>
        <link refid="_configuration_8hpp"/>
      </node>
      <node id="14">
        <label>WiFiSTA.h</label>
      </node>
      <node id="21">
        <label>ArduinoTrace.h</label>
      </node>
      <node id="38">
        <label>esp_spi_flash.h</label>
      </node>
      <node id="29">
        <label>Core/Modules/Mathematics.hpp</label>
        <link refid="_mathematics_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>StreamUtils.h</label>
      </node>
      <node id="25">
        <label>Modules/Path.hpp</label>
        <link refid="_path_8hpp"/>
      </node>
      <node id="30">
        <label>Core/Modules/Software_Management.hpp</label>
        <link refid="_software___management_8hpp_source"/>
      </node>
      <node id="44">
        <label>esp_image_format.h</label>
      </node>
      <node id="45">
        <label>MD5Builder.h</label>
      </node>
      <node id="2">
        <label>Core/Core.hpp</label>
        <link refid="_core_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>WiFiUdp.h</label>
      </node>
      <node id="40">
        <label>soc/soc.h</label>
      </node>
      <node id="36">
        <label>rom/spi_flash.h</label>
      </node>
      <node id="1">
        <label>C:/Users/alixa/github/Xila Embedded/Code/lib/Xila/src/Core/Modules/Time.cpp</label>
        <link refid="_time_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>ArduinoJson.h</label>
      </node>
      <node id="11">
        <label>IPAddress.h</label>
      </node>
      <node id="7">
        <label>time.h</label>
      </node>
      <node id="16">
        <label>WiFiScan.h</label>
      </node>
      <node id="4">
        <label>Arduino.h</label>
      </node>
      <node id="17">
        <label>WiFiGeneric.h</label>
      </node>
      <node id="35">
        <label>Esp.h</label>
      </node>
      <node id="12">
        <label>IPv6Address.h</label>
      </node>
      <node id="34">
        <label>Core/Abstraction/Flash.hpp</label>
        <link refid="_flash_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>WiFiClient.h</label>
      </node>
      <node id="37">
        <label>esp_sleep.h</label>
      </node>
      <node id="26">
        <label>Core/Modules/Task.hpp</label>
        <link refid="_task_8hpp"/>
      </node>
      <node id="42">
        <label>esp_partition.h</label>
      </node>
      <node id="27">
        <label>Core/Modules/Time.hpp</label>
        <link refid="_time_8hpp"/>
      </node>
      <node id="19">
        <label>WiFiServer.h</label>
      </node>
      <node id="13">
        <label>WiFiType.h</label>
      </node>
      <node id="15">
        <label>WiFiAP.h</label>
      </node>
      <node id="39">
        <label>memory</label>
      </node>
      <node id="22">
        <label>Nextion_Library.hpp</label>
      </node>
      <node id="32">
        <label>Core/Abstraction/GPIO.hpp</label>
        <link refid="_g_p_i_o_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Alix ANNERAUD (<ulink url="mailto:alix.anneraud@outlook.fr">alix.anneraud@outlook.fr</ulink>) </para>
</simplesect>
<simplesect kind="version"><para>0.1 </para>
</simplesect>
<simplesect kind="date"><para>11-07-2021</para>
</simplesect>
<simplesect kind="copyright"><para>Copyright (c) 2021 </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_core_8hpp" kindref="compound">Core/Core.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><ref refid="class_xila___class_1_1_time___class_1ad49dc253858436952c429f26746822d0" kindref="member">Xila_Class::Time_Class::Time_Class</ref>()</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>GMT_Offset(Default_GMT_Offset),</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Daylight_Offset(Default_Daylight_Offset)</highlight></codeline>
<codeline lineno="19"><highlight class="normal">{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/>strcpy(NTP_Server,<sp/>Default_NTP_Server);</highlight></codeline>
<codeline lineno="21"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal">uint32_t<sp/>IRAM_ATTR<sp/><ref refid="class_xila___class_1_1_time___class_1a7e326a1d8790bf0b504b95fc8026728e" kindref="member">Xila_Class::Time_Class::Get_Cycle_Count</ref>()</highlight></codeline>
<codeline lineno="28"><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>uint32_t<sp/>ccount;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>__asm__<sp/>__volatile__(</highlight><highlight class="stringliteral">&quot;esync;<sp/>rsr<sp/>%0,ccount&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;=a&quot;</highlight><highlight class="normal">(ccount));</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ccount;</highlight></codeline>
<codeline lineno="33"><highlight class="normal">}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><ref refid="class_xila___class_1a8d959952ae902a1d9caddcff96acc9ee" kindref="member">Xila_Class::Event</ref><sp/><ref refid="class_xila___class_1_1_time___class_1a6a2527eac161aff9a51993929b135b1f" kindref="member">Xila_Class::Time_Class::Save_Registry</ref>()</highlight></codeline>
<codeline lineno="40"><highlight class="normal">{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>File<sp/>Temporary_File<sp/>=<sp/>Xila.Drive.<ref refid="class_xila___class_1_1_drive___class_1a773c3b5b91558c7202d174011b34b797" kindref="member">Open</ref>(Registry(</highlight><highlight class="stringliteral">&quot;Time&quot;</highlight><highlight class="normal">),<sp/>FILE_WRITE);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>DynamicJsonDocument<sp/>Time_Registry(512);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>Time_Registry[</highlight><highlight class="stringliteral">&quot;Registry&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Time&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>Time_Registry[</highlight><highlight class="stringliteral">&quot;GMT<sp/>Offset&quot;</highlight><highlight class="normal">]<sp/>=<sp/>GMT_Offset;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>Time_Registry[</highlight><highlight class="stringliteral">&quot;Daylight<sp/>Offset&quot;</highlight><highlight class="normal">]<sp/>=<sp/>Daylight_Offset;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>Time_Registry[</highlight><highlight class="stringliteral">&quot;NTP<sp/>Server&quot;</highlight><highlight class="normal">]<sp/>=<sp/>NTP_Server;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>configTime(GMT_Offset,<sp/>Daylight_Offset,<sp/>NTP_Server);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(serializeJson(Time_Registry,<sp/>Temporary_File)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>Temporary_File.close();</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_xila___class_1a8d959952ae902a1d9caddcff96acc9eeac91f464ae2171337aa4e6a5d521b8c44" kindref="member">Error</ref>;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>Temporary_File.close();</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_xila___class_1a8d959952ae902a1d9caddcff96acc9eeaee07a60c567f17f3d8e2ad35c3d60f94" kindref="member">Success</ref>;</highlight></codeline>
<codeline lineno="55"><highlight class="normal">}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><ref refid="class_xila___class_1a8d959952ae902a1d9caddcff96acc9ee" kindref="member">Xila_Class::Event</ref><sp/><ref refid="class_xila___class_1_1_time___class_1adc8305e55fcfdef8c799d908bc6a0878" kindref="member">Xila_Class::Time_Class::Load_Registry</ref>()</highlight></codeline>
<codeline lineno="62"><highlight class="normal">{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>File<sp/>Temporary_File<sp/>=<sp/>Xila.Drive.<ref refid="class_xila___class_1_1_drive___class_1a773c3b5b91558c7202d174011b34b797" kindref="member">Open</ref>(Registry(</highlight><highlight class="stringliteral">&quot;Time&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>DynamicJsonDocument<sp/>Time_Registry(512);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(deserializeJson(Time_Registry,<sp/>Temporary_File)<sp/>!=<sp/>DeserializationError::Ok)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>Temporary_File.close();</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_xila___class_1a8d959952ae902a1d9caddcff96acc9eeac91f464ae2171337aa4e6a5d521b8c44" kindref="member">Error</ref>;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>Temporary_File.close();</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(</highlight><highlight class="stringliteral">&quot;Time&quot;</highlight><highlight class="normal">,<sp/>Time_Registry[</highlight><highlight class="stringliteral">&quot;Registry&quot;</highlight><highlight class="normal">]<sp/>|<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_xila___class_1a8d959952ae902a1d9caddcff96acc9eeac91f464ae2171337aa4e6a5d521b8c44" kindref="member">Error</ref>;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>GMT_Offset<sp/>=<sp/>Time_Registry[</highlight><highlight class="stringliteral">&quot;GMT<sp/>Offset&quot;</highlight><highlight class="normal">]<sp/>|<sp/>Default_GMT_Offset;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>Daylight_Offset<sp/>=<sp/>Time_Registry[</highlight><highlight class="stringliteral">&quot;Daylight<sp/>Offset&quot;</highlight><highlight class="normal">]<sp/>|<sp/>Default_Daylight_Offset;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>strlcpy(NTP_Server,<sp/>Time_Registry[</highlight><highlight class="stringliteral">&quot;NTP<sp/>Server&quot;</highlight><highlight class="normal">]<sp/>|<sp/>Default_NTP_Server,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(NTP_Server));</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>configTime(GMT_Offset,<sp/>Daylight_Offset,<sp/>NTP_Server);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_xila___class_1a8d959952ae902a1d9caddcff96acc9eeaee07a60c567f17f3d8e2ad35c3d60f94" kindref="member">Success</ref>;</highlight></codeline>
<codeline lineno="80"><highlight class="normal">}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_xila___class_1_1_time___class_1a016379e450877a08599aaa56c236b5d2" kindref="member">Xila_Class::Time_Class::Synchronize</ref>()</highlight></codeline>
<codeline lineno="86"><highlight class="normal">{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>time(&amp;Now);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>localtime_r(&amp;Now,<sp/>&amp;Current_Time);</highlight></codeline>
<codeline lineno="89"><highlight class="normal">}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal">tm<sp/><ref refid="class_xila___class_1_1_time___class_1a8dd2b3e6ce02bf12d0749a424939b8ba" kindref="member">Xila_Class::Time_Class::Get_Time</ref>()</highlight></codeline>
<codeline lineno="96"><highlight class="normal">{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>Synchronize();</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Current_Time;</highlight></codeline>
<codeline lineno="99"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/Users/alixa/github/Xila Embedded/Code/lib/Xila/src/Core/Modules/Time.cpp"/>
  </compounddef>
</doxygen>
