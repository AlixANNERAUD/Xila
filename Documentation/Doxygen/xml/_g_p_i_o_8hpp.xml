<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="_g_p_i_o_8hpp" kind="file" language="C++">
    <compoundname>GPIO.hpp</compoundname>
    <includes local="yes">Arduino.h</includes>
    <includedby refid="_core_8hpp" local="yes">C:/Users/alixa/GitHub/Xila/Code/lib/Xila/include/Core/Core.hpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>C:/Users/alixa/GitHub/Xila/Code/lib/Xila/include/Core/Abstraction/GPIO.hpp</label>
        <link refid="_g_p_i_o_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>Arduino.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="34">
        <label>C:/Users/alixa/GitHub/Xila/Code/lib/Xila/src/Core/Modules/Dialog.cpp</label>
        <link refid="_core_2_modules_2_dialog_8cpp"/>
      </node>
      <node id="14">
        <label>C:/Users/alixa/GitHub/Xila/Code/lib/Xila/src/Software/Shell/Desk.cpp</label>
        <link refid="_desk_8cpp"/>
      </node>
      <node id="38">
        <label>C:/Users/alixa/GitHub/Xila/Code/lib/Xila/src/Core/Modules/System.cpp</label>
        <link refid="_system_8cpp"/>
      </node>
      <node id="1">
        <label>C:/Users/alixa/GitHub/Xila/Code/lib/Xila/include/Core/Abstraction/GPIO.hpp</label>
        <link refid="_g_p_i_o_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>C:/Users/alixa/GitHub/Xila/Code/lib/Xila/src/Core/Modules/Account.cpp</label>
        <link refid="_account_8cpp"/>
      </node>
      <node id="18">
        <label>C:/Users/alixa/GitHub/Xila/Code/lib/Xila/src/Software/Shell/Shell.cpp</label>
        <link refid="_shell_8cpp"/>
      </node>
      <node id="3">
        <label>C:/Users/alixa/GitHub/Xila/Code/lib/Xila/include/Xila.hpp</label>
        <link refid="_xila_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>C:/Users/alixa/GitHub/Xila/Code/lib/Xila/src/Core/Modules/Software.cpp</label>
        <link refid="_software_8cpp"/>
      </node>
      <node id="11">
        <label>C:/Users/alixa/GitHub/Xila/Code/lib/Xila/include/Software/Piano.hpp</label>
        <link refid="_piano_8hpp"/>
      </node>
      <node id="21">
        <label>C:/Users/alixa/GitHub/Xila/Code/lib/Xila/include/Software/Text_Editor.hpp</label>
        <link refid="_text___editor_8hpp_source"/>
      </node>
      <node id="17">
        <label>C:/Users/alixa/GitHub/Xila/Code/lib/Xila/src/Software/Shell/Preferences.cpp</label>
        <link refid="_preferences_8cpp"/>
      </node>
      <node id="4">
        <label>C:/Users/alixa/GitHub/Xila/Code/lib/Xila/include/Software/Calculator.hpp</label>
        <link refid="_calculator_8hpp_source"/>
      </node>
      <node id="33">
        <label>C:/Users/alixa/GitHub/Xila/Code/lib/Xila/src/Core/Modules/Clipboard.cpp</label>
        <link refid="_clipboard_8cpp"/>
      </node>
      <node id="27">
        <label>C:/Users/alixa/GitHub/Xila/Code/lib/Xila/src/Core/Abstraction/Keyboard.cpp</label>
        <link refid="_keyboard_8cpp"/>
      </node>
      <node id="28">
        <label>C:/Users/alixa/GitHub/Xila/Code/lib/Xila/src/Core/Abstraction/Power.cpp</label>
        <link refid="_power_8cpp"/>
      </node>
      <node id="7">
        <label>C:/Users/alixa/GitHub/Xila/Code/lib/Xila/include/Software/Music_Player.hpp</label>
        <link refid="_music___player_8hpp"/>
      </node>
      <node id="25">
        <label>C:/Users/alixa/GitHub/Xila/Code/lib/Xila/src/Core/Abstraction/Flash.cpp</label>
        <link refid="_flash_8cpp"/>
      </node>
      <node id="10">
        <label>C:/Users/alixa/GitHub/Xila/Code/lib/Xila/include/Software/Periodic.hpp</label>
        <link refid="_periodic_8hpp_source"/>
      </node>
      <node id="12">
        <label>C:/Users/alixa/GitHub/Xila/Code/lib/Xila/include/Software/Pong.hpp</label>
        <link refid="_pong_8hpp_source"/>
      </node>
      <node id="16">
        <label>C:/Users/alixa/GitHub/Xila/Code/lib/Xila/src/Software/Shell/File_Manager.cpp</label>
        <link refid="_file___manager_8cpp"/>
      </node>
      <node id="5">
        <label>C:/Users/alixa/GitHub/Xila/Code/lib/Xila/include/Software/Clock.hpp</label>
        <link refid="_clock_8hpp_source"/>
      </node>
      <node id="39">
        <label>C:/Users/alixa/GitHub/Xila/Code/lib/Xila/src/Core/Modules/Time.cpp</label>
        <link refid="_time_8cpp"/>
      </node>
      <node id="29">
        <label>C:/Users/alixa/GitHub/Xila/Code/lib/Xila/src/Core/Abstraction/Sound.cpp</label>
        <link refid="_sound_8cpp"/>
      </node>
      <node id="2">
        <label>C:/Users/alixa/GitHub/Xila/Code/lib/Xila/include/Core/Core.hpp</label>
        <link refid="_core_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>C:/Users/alixa/GitHub/Xila/Code/lib/Xila/src/Core/Abstraction/Drive.cpp</label>
        <link refid="_drive_8cpp"/>
      </node>
      <node id="37">
        <label>C:/Users/alixa/GitHub/Xila/Code/lib/Xila/src/Core/Modules/Software_Handle.cpp</label>
        <link refid="_software___handle_8cpp"/>
      </node>
      <node id="26">
        <label>C:/Users/alixa/GitHub/Xila/Code/lib/Xila/src/Core/Abstraction/GPIO.cpp</label>
        <link refid="_g_p_i_o_8cpp"/>
      </node>
      <node id="13">
        <label>C:/Users/alixa/GitHub/Xila/Code/lib/Xila/include/Software/Shell/Shell.hpp</label>
        <link refid="_shell_8hpp"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>C:/Users/alixa/GitHub/Xila/Code/lib/Xila/src/Core/Core.cpp</label>
        <link refid="_core_8cpp"/>
      </node>
      <node id="19">
        <label>C:/Users/alixa/GitHub/Xila/Code/lib/Xila/include/Software/Simon.hpp</label>
        <link refid="_simon_8hpp_source"/>
      </node>
      <node id="8">
        <label>C:/Users/alixa/GitHub/Xila/Code/lib/Xila/include/Software/Oscilloscope.hpp</label>
        <link refid="_oscilloscope_8hpp"/>
      </node>
      <node id="35">
        <label>C:/Users/alixa/GitHub/Xila/Code/lib/Xila/src/Core/Modules/Mathematics.cpp</label>
        <link refid="_mathematics_8cpp"/>
      </node>
      <node id="23">
        <label>C:/Users/alixa/GitHub/Xila/Code/lib/Xila/src/Core/Abstraction/Display.cpp</label>
        <link refid="_display_8cpp"/>
      </node>
      <node id="15">
        <label>C:/Users/alixa/GitHub/Xila/Code/lib/Xila/src/Software/Shell/Dialog.cpp</label>
        <link refid="_software_2_shell_2_dialog_8cpp"/>
      </node>
      <node id="9">
        <label>C:/Users/alixa/GitHub/Xila/Code/lib/Xila/include/Software/Paint.hpp</label>
        <link refid="_paint_8hpp_source"/>
      </node>
      <node id="22">
        <label>C:/Users/alixa/GitHub/Xila/Code/lib/Xila/include/Software/Tiny_Basic.hpp</label>
        <link refid="_tiny___basic_8hpp_source"/>
      </node>
      <node id="6">
        <label>C:/Users/alixa/GitHub/Xila/Code/lib/Xila/include/Software/Internet_Browser.hpp</label>
        <link refid="_internet___browser_8hpp_source"/>
      </node>
      <node id="30">
        <label>C:/Users/alixa/GitHub/Xila/Code/lib/Xila/src/Core/Abstraction/WiFi.cpp</label>
        <link refid="_wi_fi_8cpp"/>
      </node>
      <node id="20">
        <label>C:/Users/alixa/GitHub/Xila/Code/lib/Xila/include/Software/Software_Template.hpp</label>
        <link refid="_software___template_8hpp_source"/>
      </node>
    </invincdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Alix ANNERAUD (<ulink url="mailto:alix.anneraud@outlook.fr">alix.anneraud@outlook.fr</ulink>) </para>
</simplesect>
<simplesect kind="version"><para>0.2 </para>
</simplesect>
<simplesect kind="date"><para>05-04-2021</para>
</simplesect>
<simplesect kind="copyright"><para>Copyright (c) 2021 </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Arduino.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>GPIO_HPP_INCLUDED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GPIO_HPP_INCLUDED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Xila_Class::GPIO_Class::Set_Mode(uint8_t<sp/>Pin,<sp/>uint8_t<sp/>Mode)</highlight></codeline>
<codeline lineno="17"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>pinMode(Pin,<sp/>Mode);</highlight></codeline>
<codeline lineno="19"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_xila___class_1a8d959952ae902a1d9caddcff96acc9ee" kindref="member">Xila_Class::Event</ref><sp/>Xila_Class::GPIO_Class::Valid_Output_Pin(uint8_t<sp/>Pin)</highlight></codeline>
<codeline lineno="22"><highlight class="normal">{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(digitalPinCanOutput(Pin)<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_xila___class_1a8d959952ae902a1d9caddcff96acc9eeaee07a60c567f17f3d8e2ad35c3d60f94" kindref="member">Success</ref>;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_xila___class_1a8d959952ae902a1d9caddcff96acc9eeac91f464ae2171337aa4e6a5d521b8c44" kindref="member">Error</ref>;</highlight></codeline>
<codeline lineno="29"><highlight class="normal">}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Xila_Class::GPIO_Class::Digital_Write(uint8_t<sp/>Pin,<sp/>uint8_t<sp/><ref refid="class_xila___class_1a97f78ce2a2da8c5879eb6568b4f74fe8" kindref="member">State</ref>)</highlight></codeline>
<codeline lineno="32"><highlight class="normal">{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>digitalWrite(Pin,<sp/><ref refid="class_xila___class_1a97f78ce2a2da8c5879eb6568b4f74fe8" kindref="member">State</ref>);</highlight></codeline>
<codeline lineno="34"><highlight class="normal">}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int16_t<sp/>Xila_Class::GPIO_Class::Digital_Read(uint8_t<sp/>Pin)</highlight></codeline>
<codeline lineno="37"><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>digitalRead(Pin);</highlight></codeline>
<codeline lineno="39"><highlight class="normal">}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_xila___class_1a8d959952ae902a1d9caddcff96acc9ee" kindref="member">Xila_Class::Event</ref><sp/>Xila_Class::GPIO_Class::Valid_Digital_Pin(uint8_t<sp/>Pin)</highlight></codeline>
<codeline lineno="42"><highlight class="normal">{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(digitalPinIsValid(Pin))</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_xila___class_1a8d959952ae902a1d9caddcff96acc9eeaee07a60c567f17f3d8e2ad35c3d60f94" kindref="member">Success</ref>;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_xila___class_1a8d959952ae902a1d9caddcff96acc9eeac91f464ae2171337aa4e6a5d521b8c44" kindref="member">Error</ref>;</highlight></codeline>
<codeline lineno="48"><highlight class="normal">}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint16_t<sp/>Xila_Class::GPIO_Class::Analog_Read(uint8_t<sp/>Pin)</highlight></codeline>
<codeline lineno="51"><highlight class="normal">{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>analogRead(Pin);</highlight></codeline>
<codeline lineno="53"><highlight class="normal">}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint32_t<sp/>Xila_Class::GPIO_Class::Analog_Read_Milli_Volts(uint8_t<sp/>Pin)</highlight></codeline>
<codeline lineno="56"><highlight class="normal">{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>analogReadMilliVolts(Pin);</highlight></codeline>
<codeline lineno="58"><highlight class="normal">}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Xila_Class::GPIO_Class::Set_Voltage_Reference_Pin(uint8_t<sp/>Pin)</highlight></codeline>
<codeline lineno="61"><highlight class="normal">{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>analogSetVRefPin(Pin);</highlight></codeline>
<codeline lineno="63"><highlight class="normal">}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Xila_Class::GPIO_Class::Set_Attenuation(uint8_t<sp/>Pin,<sp/>uint8_t<sp/>Attenuation)</highlight></codeline>
<codeline lineno="66"><highlight class="normal">{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(Attenuation)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ADC_0db:</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>analogSetPinAttenuation(Pin,<sp/>ADC_0db);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ADC_2_5db:</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>analogSetPinAttenuation(Pin,<sp/>ADC_2_5db);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ADC_6db:</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>analogSetPinAttenuation(Pin,<sp/>ADC_6db);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ADC_11db:</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>analogSetPinAttenuation(Pin,<sp/>ADC_11db);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal">}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Xila_Class::GPIO_Class::Set_Attenuation(uint8_t<sp/>Attenuation)</highlight></codeline>
<codeline lineno="87"><highlight class="normal">{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(Attenuation)</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ADC_0db:</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>analogSetAttenuation(ADC_0db);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ADC_2_5db:</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>analogSetAttenuation(ADC_2_5db);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ADC_6db:</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>analogSetAttenuation(ADC_6db);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ADC_11db:</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>analogSetAttenuation(ADC_11db);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal">}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Xila_Class::GPIO_Class::Set_Clock_Divider(uint8_t<sp/>Clock_Divider)</highlight></codeline>
<codeline lineno="108"><highlight class="normal">{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>analogSetClockDiv(Clock_Divider);</highlight></codeline>
<codeline lineno="110"><highlight class="normal">}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Xila_Class::GPIO_Class::Set_Width(uint8_t<sp/>Bits_Width)</highlight></codeline>
<codeline lineno="113"><highlight class="normal">{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>analogSetWidth(Bits_Width);</highlight></codeline>
<codeline lineno="115"><highlight class="normal">}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Xila_Class::GPIO_Class::Set_Read_Resolutions(uint8_t<sp/>Bits_Resolution)</highlight></codeline>
<codeline lineno="118"><highlight class="normal">{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>analogReadResolution(Bits_Resolution);</highlight></codeline>
<codeline lineno="120"><highlight class="normal">}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Xila_Class::GPIO_Class::Attach_Interrupt(uint8_t<sp/>Pin,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*Function_Pointer)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">),<sp/>int16_t<sp/>Mode)</highlight></codeline>
<codeline lineno="123"><highlight class="normal">{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>attachInterrupt(Pin,<sp/>Function_Pointer,<sp/>Mode);</highlight></codeline>
<codeline lineno="125"><highlight class="normal">}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Xila_Class::GPIO_Class::Attach_Interrupt_Argument(uint8_t<sp/>Pin,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*Function_Pointer)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*),<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*Argument,<sp/>int16_t<sp/>Mode)</highlight></codeline>
<codeline lineno="128"><highlight class="normal">{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>attachInterruptArg(Pin,<sp/>Function_Pointer,<sp/>Argument,<sp/>Mode);</highlight></codeline>
<codeline lineno="130"><highlight class="normal">}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Xila_Class::GPIO_Class::Detech_Interrupt(uint8_t<sp/>Pin)</highlight></codeline>
<codeline lineno="133"><highlight class="normal">{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>detachInterrupt(Pin);</highlight></codeline>
<codeline lineno="135"><highlight class="normal">}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="C:/Users/alixa/GitHub/Xila/Code/lib/Xila/include/Core/Abstraction/GPIO.hpp"/>
  </compounddef>
</doxygen>
