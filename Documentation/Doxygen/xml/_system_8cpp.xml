<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="_system_8cpp" kind="file" language="C++">
    <compoundname>System.cpp</compoundname>
    <includes refid="_core_8hpp" local="yes">Core/Core.hpp</includes>
    <includes local="yes">soc/rtc_wdt.h</includes>
    <includes local="yes">esp_task_wdt.h</includes>
    <includes local="yes">Update.h</includes>
    <incdepgraph>
      <node id="43">
        <label>esp_ota_ops.h</label>
      </node>
      <node id="33">
        <label>Core/Abstraction/Memory.hpp</label>
        <link refid="_memory_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>FS.h</label>
      </node>
      <node id="10">
        <label>Print.h</label>
      </node>
      <node id="6">
        <label>SPI.h</label>
      </node>
      <node id="47">
        <label>esp_task_wdt.h</label>
      </node>
      <node id="23">
        <label>Battery_Library.hpp</label>
      </node>
      <node id="31">
        <label>Core/Abstraction/Display.hpp</label>
        <link refid="_display_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>soc/efuse_reg.h</label>
      </node>
      <node id="3">
        <label>stdint.h</label>
      </node>
      <node id="28">
        <label>Core/Modules/System.hpp</label>
        <link refid="_system_8hpp"/>
      </node>
      <node id="24">
        <label>Configuration.hpp</label>
        <link refid="_configuration_8hpp"/>
      </node>
      <node id="14">
        <label>WiFiSTA.h</label>
      </node>
      <node id="21">
        <label>ArduinoTrace.h</label>
      </node>
      <node id="38">
        <label>esp_spi_flash.h</label>
      </node>
      <node id="29">
        <label>Core/Modules/Mathematics.hpp</label>
        <link refid="_mathematics_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>StreamUtils.h</label>
      </node>
      <node id="25">
        <label>Modules/Path.hpp</label>
        <link refid="_path_8hpp"/>
      </node>
      <node id="30">
        <label>Core/Modules/Software_Management.hpp</label>
        <link refid="_software___management_8hpp_source"/>
      </node>
      <node id="44">
        <label>esp_image_format.h</label>
      </node>
      <node id="45">
        <label>MD5Builder.h</label>
      </node>
      <node id="2">
        <label>Core/Core.hpp</label>
        <link refid="_core_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>WiFiUdp.h</label>
      </node>
      <node id="40">
        <label>soc/soc.h</label>
      </node>
      <node id="36">
        <label>rom/spi_flash.h</label>
      </node>
      <node id="8">
        <label>ArduinoJson.h</label>
      </node>
      <node id="11">
        <label>IPAddress.h</label>
      </node>
      <node id="1">
        <label>C:/Users/alixa/github/Xila Embedded/Code/lib/Xila/src/Core/Modules/System.cpp</label>
        <link refid="_system_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>time.h</label>
      </node>
      <node id="16">
        <label>WiFiScan.h</label>
      </node>
      <node id="4">
        <label>Arduino.h</label>
      </node>
      <node id="17">
        <label>WiFiGeneric.h</label>
      </node>
      <node id="35">
        <label>Esp.h</label>
      </node>
      <node id="48">
        <label>Update.h</label>
      </node>
      <node id="46">
        <label>soc/rtc_wdt.h</label>
      </node>
      <node id="12">
        <label>IPv6Address.h</label>
      </node>
      <node id="34">
        <label>Core/Abstraction/Flash.hpp</label>
        <link refid="_flash_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>WiFiClient.h</label>
      </node>
      <node id="37">
        <label>esp_sleep.h</label>
      </node>
      <node id="26">
        <label>Core/Modules/Task.hpp</label>
        <link refid="_task_8hpp"/>
      </node>
      <node id="42">
        <label>esp_partition.h</label>
      </node>
      <node id="27">
        <label>Core/Modules/Time.hpp</label>
        <link refid="_time_8hpp"/>
      </node>
      <node id="19">
        <label>WiFiServer.h</label>
      </node>
      <node id="13">
        <label>WiFiType.h</label>
      </node>
      <node id="15">
        <label>WiFiAP.h</label>
      </node>
      <node id="39">
        <label>memory</label>
      </node>
      <node id="22">
        <label>Nextion_Library.hpp</label>
      </node>
      <node id="32">
        <label>Core/Abstraction/GPIO.hpp</label>
        <link refid="_g_p_i_o_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_system_8cpp_1ae3b73a1c7db72f7098795deba68110c1" prot="public" static="no" mutable="no">
        <type><ref refid="class_xila___class_1_1_software___handle" kindref="compound">Xila_Class::Software_Handle</ref></type>
        <definition>Xila_Class::Software_Handle Shell_Handle</definition>
        <argsstring></argsstring>
        <name>Shell_Handle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/alixa/github/Xila Embedded/Code/lib/Xila/src/Core/Modules/System.cpp" line="17" column="36" declfile="C:/Users/alixa/github/Xila Embedded/Code/lib/Xila/src/Core/Modules/System.cpp" declline="17" declcolumn="36"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Alix ANNERAUD (<ulink url="mailto:alix.anneraud@outlook.fr">alix.anneraud@outlook.fr</ulink>) </para>
</simplesect>
<simplesect kind="version"><para>0.1 </para>
</simplesect>
<simplesect kind="date"><para>11-07-2021</para>
</simplesect>
<simplesect kind="copyright"><para>Copyright (c) 2021 </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_core_8hpp" kindref="compound">Core/Core.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;soc/rtc_wdt.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;esp_task_wdt.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Update.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="class_xila___class_1_1_software___handle" kindref="compound">Xila_Class::Software_Handle</ref><sp/>Shell_Handle;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><ref refid="class_xila___class_1_1_system___class_1ae4aa4ac898ea84745fa59a2445afff2b" kindref="member">Xila_Class::System_Class::System_Class</ref>()</highlight></codeline>
<codeline lineno="23"><highlight class="normal">{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/>State<sp/>=<sp/>Default;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>Task_Handle<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>strlcpy(<ref refid="class_xila___class_1_1_system___class_1a45d66d24db04e7347ca4fd9c142c2706" kindref="member">Device_Name</ref>,<sp/>Default_Device_Name,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="class_xila___class_1_1_system___class_1a45d66d24db04e7347ca4fd9c142c2706" kindref="member">Device_Name</ref>));</highlight></codeline>
<codeline lineno="27"><highlight class="normal">}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><ref refid="class_xila___class_1_1_system___class_1a3c67f435112171d93a83eac6d68b84e6" kindref="member">Xila_Class::System_Class::~System_Class</ref>()</highlight></codeline>
<codeline lineno="33"><highlight class="normal">{</highlight></codeline>
<codeline lineno="34"><highlight class="normal">}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><ref refid="class_xila___class_1a8d959952ae902a1d9caddcff96acc9ee" kindref="member">Xila_Class::Event</ref><sp/><ref refid="class_xila___class_1_1_system___class_1af4fcdb39e66aec32ea01ddc9728ed70d" kindref="member">Xila_Class::System_Class::Load_Registry</ref>()</highlight></codeline>
<codeline lineno="41"><highlight class="normal">{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>File<sp/>Temporary_File<sp/>=<sp/>Xila.Drive.<ref refid="class_xila___class_1_1_drive___class_1a773c3b5b91558c7202d174011b34b797" kindref="member">Open</ref>((Registry(</highlight><highlight class="stringliteral">&quot;System&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>DynamicJsonDocument<sp/>System_Registry(512);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(deserializeJson(System_Registry,<sp/>Temporary_File))<sp/></highlight><highlight class="comment">//<sp/>error<sp/>while<sp/>deserialising</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>Temporary_File.close();</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_xila___class_1a8d959952ae902a1d9caddcff96acc9eeac91f464ae2171337aa4e6a5d521b8c44" kindref="member">Error</ref>;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>Temporary_File.close();</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(</highlight><highlight class="stringliteral">&quot;System&quot;</highlight><highlight class="normal">,<sp/>System_Registry[</highlight><highlight class="stringliteral">&quot;Registry&quot;</highlight><highlight class="normal">]<sp/>|<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_xila___class_1a8d959952ae902a1d9caddcff96acc9eeac91f464ae2171337aa4e6a5d521b8c44" kindref="member">Error</ref>;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>JsonObject<sp/>Version<sp/>=<sp/>System_Registry[</highlight><highlight class="stringliteral">&quot;Version&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Version[</highlight><highlight class="stringliteral">&quot;Major&quot;</highlight><highlight class="normal">]<sp/>!=<sp/>Xila_Version_Major<sp/>||<sp/>Version[</highlight><highlight class="stringliteral">&quot;Minor&quot;</highlight><highlight class="normal">]<sp/>!=<sp/>Xila_Version_Minor<sp/>||<sp/>Version[</highlight><highlight class="stringliteral">&quot;Revision&quot;</highlight><highlight class="normal">]<sp/>!=<sp/>Xila_Version_Revision)</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>Panic_Handler(Installation_Conflict);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>strlcpy(Xila.System.<ref refid="class_xila___class_1_1_system___class_1a45d66d24db04e7347ca4fd9c142c2706" kindref="member">Device_Name</ref>,<sp/>System_Registry[</highlight><highlight class="stringliteral">&quot;Device<sp/>Name&quot;</highlight><highlight class="normal">]<sp/>|<sp/>Default_Device_Name,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Xila.System.<ref refid="class_xila___class_1_1_system___class_1a45d66d24db04e7347ca4fd9c142c2706" kindref="member">Device_Name</ref>));</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_xila___class_1a8d959952ae902a1d9caddcff96acc9eeaee07a60c567f17f3d8e2ad35c3d60f94" kindref="member">Success</ref>;</highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><ref refid="class_xila___class_1a8d959952ae902a1d9caddcff96acc9ee" kindref="member">Xila_Class::Event</ref><sp/><ref refid="class_xila___class_1_1_system___class_1a5013c52976a80c0a4666b3e63da001cf" kindref="member">Xila_Class::System_Class::Save_Registry</ref>()</highlight></codeline>
<codeline lineno="68"><highlight class="normal">{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>File<sp/>Temporary_File<sp/>=<sp/>Xila.Drive.<ref refid="class_xila___class_1_1_drive___class_1a773c3b5b91558c7202d174011b34b797" kindref="member">Open</ref>((Registry(</highlight><highlight class="stringliteral">&quot;System&quot;</highlight><highlight class="normal">)),<sp/>FILE_WRITE);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>DynamicJsonDocument<sp/>System_Registry(256);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>System_Registry[</highlight><highlight class="stringliteral">&quot;Registry&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;System&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>System_Registry[</highlight><highlight class="stringliteral">&quot;Device<sp/>Name&quot;</highlight><highlight class="normal">]<sp/>=<sp/>Device_Name;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>JsonObject<sp/>Version<sp/>=<sp/>System_Registry.createNestedObject(</highlight><highlight class="stringliteral">&quot;Version&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>Version[</highlight><highlight class="stringliteral">&quot;Major&quot;</highlight><highlight class="normal">]<sp/>=<sp/>Xila_Version_Major;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>Version[</highlight><highlight class="stringliteral">&quot;Minor&quot;</highlight><highlight class="normal">]<sp/>=<sp/>Xila_Version_Minor;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>Version[</highlight><highlight class="stringliteral">&quot;Revision&quot;</highlight><highlight class="normal">]<sp/>=<sp/>Xila_Version_Revision;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(serializeJson(System_Registry,<sp/>Temporary_File)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>Temporary_File.close();</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_xila___class_1a8d959952ae902a1d9caddcff96acc9eeac91f464ae2171337aa4e6a5d521b8c44" kindref="member">Error</ref>;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>Temporary_File.close();</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_xila___class_1a8d959952ae902a1d9caddcff96acc9eeaee07a60c567f17f3d8e2ad35c3d60f94" kindref="member">Success</ref>;</highlight></codeline>
<codeline lineno="84"><highlight class="normal">}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_xila___class_1_1_system___class_1a4fa674687889e351b8bb6e7697c2060f" kindref="member">Xila_Class::System_Class::Task</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)</highlight></codeline>
<codeline lineno="90"><highlight class="normal">{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>uint32_t<sp/>Next_Refresh<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>Xila.Power.<ref refid="class_xila___class_1_1_power___class_1aad9c824e3d1d500e283b67221b92787a" kindref="member">Button_Counter</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(1)</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>Check<sp/>power<sp/>button<sp/>interrupt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>Xila.Power.<ref refid="class_xila___class_1_1_power___class_1a80836e70cd2de6ef80ae268b0ce3c1cd" kindref="member">Check_Button</ref>();</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>Execute<sp/>data<sp/>from<sp/>display.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>Xila.Display.Loop();</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>Task<sp/>to<sp/>refresh<sp/>every<sp/>10<sp/>seconds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Xila.Time.Milliseconds()<sp/>&gt;<sp/>Next_Refresh)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>Check<sp/>if<sp/>drive<sp/>is<sp/>not<sp/>disconnected.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!Xila.Drive.<ref refid="class_xila___class_1_1_drive___class_1afc4521e0d8b8f0aac23af14d9e9239eb" kindref="member">Exists</ref>(Xila_Directory_Path)<sp/>||<sp/>!Xila.Drive.<ref refid="class_xila___class_1_1_drive___class_1afc4521e0d8b8f0aac23af14d9e9239eb" kindref="member">Exists</ref>(Software_Directory_Path))</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Xila.System.<ref refid="class_xila___class_1_1_system___class_1a96f3b3f9bceae6af625c4f7e454262de" kindref="member">Panic_Handler</ref>(Xila.System.System_Drive_Failure);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>Check<sp/>if<sp/>running<sp/>software<sp/>is<sp/>not<sp/>frozen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Xila.Software_Management.<ref refid="class_xila___class_1_1_software___management___class_1a09fdce2ac534f4f3b069d7c535da7256" kindref="member">Check_Watchdog</ref>();</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>Check<sp/>WiFi<sp/>is<sp/>connected</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Xila.WiFi.status()<sp/>!=<sp/>WL_CONNECTED)</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Xila.WiFi.<ref refid="class_xila___class_1_1_wi_fi___class_1a7663be1a0fff6cb5c8c7c8d78735714b" kindref="member">Load_Registry</ref>();</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>Check<sp/>available<sp/>(prevent<sp/>memory<sp/>overflow)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Xila.Memory.<ref refid="class_xila___class_1_1_memory___class_1a38dd64055940cebe039450f0eab7fcbd" kindref="member">Get_Free_Heap</ref>()<sp/>&lt;<sp/>Low_Memory_Threshold)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Xila.System.<ref refid="class_xila___class_1_1_system___class_1a96f3b3f9bceae6af625c4f7e454262de" kindref="member">Panic_Handler</ref>(Low_Memory);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>Synchronise<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Xila.Time.<ref refid="class_xila___class_1_1_time___class_1a016379e450877a08599aaa56c236b5d2" kindref="member">Synchronize</ref>();</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>Check<sp/>if<sp/>software<sp/>is<sp/>currently<sp/>maximized</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Xila.Software_Management.<ref refid="class_xila___class_1_1_software___management___class_1a9719930db34c13d8cf5ce82e6dbe3d0c" kindref="member">Openned</ref>[0]<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Xila.Task.<ref refid="class_xila___class_1_1_task___class_1a1a65d70162c95dfd3ac8b4683e913ce9" kindref="member">Delay</ref>(100);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>If<sp/>no<sp/>software<sp/>is<sp/>currently<sp/>maximized,<sp/>maximize<sp/>shell.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Xila.Software_Management.<ref refid="class_xila___class_1_1_software___management___class_1a9719930db34c13d8cf5ce82e6dbe3d0c" kindref="member">Openned</ref>[0]<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Xila.Software_Management.<ref refid="class_xila___class_1_1_software___management___class_1a9048eca103dfe2548068231fdc5261e9" kindref="member">Open</ref>(Shell_Handle);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Xila.Software_Management.Shell_Send_Instruction(Xila.Desk);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Xila.Software_Management.<ref refid="class_xila___class_1_1_software___management___class_1a9f4a4465b54c7894bbd7147d8e575075" kindref="member">Shell_Maximize</ref>();</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>Clear<sp/>the<sp/>refresh<sp/>timer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Next_Refresh<sp/>=<sp/>Xila.Time.Milliseconds()<sp/>+<sp/>10000;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>Xila.Task.<ref refid="class_xila___class_1_1_task___class_1a1a65d70162c95dfd3ac8b4683e913ce9" kindref="member">Delay</ref>(20);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal">}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><ref refid="class_xila___class_1a8d959952ae902a1d9caddcff96acc9ee" kindref="member">Xila_Class::Event</ref><sp/><ref refid="class_xila___class_1_1_system___class_1a95052e8e2e003d16606d42bf8d58bbec" kindref="member">Xila_Class::System_Class::Load_Executable</ref>(File<sp/>Executable_File)</highlight></codeline>
<codeline lineno="146"><highlight class="normal">{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!Executable_File<sp/>||<sp/>Executable_File.isDirectory())</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Xila.<ref refid="class_xila___class_1a8d959952ae902a1d9caddcff96acc9eeac91f464ae2171337aa4e6a5d521b8c44" kindref="member">Error</ref>;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Executable_File.isDirectory())</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Xila.<ref refid="class_xila___class_1a8d959952ae902a1d9caddcff96acc9eeac91f464ae2171337aa4e6a5d521b8c44" kindref="member">Error</ref>;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Executable_File.size()<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Xila.<ref refid="class_xila___class_1a8d959952ae902a1d9caddcff96acc9eeac91f464ae2171337aa4e6a5d521b8c44" kindref="member">Error</ref>;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!Update.begin(Executable_File.size(),<sp/>U_FLASH))</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Xila.<ref refid="class_xila___class_1a8d959952ae902a1d9caddcff96acc9eeac91f464ae2171337aa4e6a5d521b8c44" kindref="member">Error</ref>;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>Written<sp/>=<sp/>Update.writeStream(Executable_File);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Written<sp/>!=<sp/>Executable_File.size())</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Xila.<ref refid="class_xila___class_1a8d959952ae902a1d9caddcff96acc9eeac91f464ae2171337aa4e6a5d521b8c44" kindref="member">Error</ref>;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!Update.end())</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Xila.<ref refid="class_xila___class_1a8d959952ae902a1d9caddcff96acc9eeac91f464ae2171337aa4e6a5d521b8c44" kindref="member">Error</ref>;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!Update.isFinished())</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Xila.<ref refid="class_xila___class_1a8d959952ae902a1d9caddcff96acc9eeac91f464ae2171337aa4e6a5d521b8c44" kindref="member">Error</ref>;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Xila.<ref refid="class_xila___class_1a8d959952ae902a1d9caddcff96acc9eeaee07a60c567f17f3d8e2ad35c3d60f94" kindref="member">Success</ref>;</highlight></codeline>
<codeline lineno="178"><highlight class="normal">}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_xila___class_1_1_system___class_1a96f3b3f9bceae6af625c4f7e454262de" kindref="member">Xila_Class::System_Class::Panic_Handler</ref>(Panic_Code<sp/>Panic_Code)</highlight></codeline>
<codeline lineno="185"><highlight class="normal">{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>Xila.Display.Set_Current_Page(F(</highlight><highlight class="stringliteral">&quot;Core_Panic&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>Temporary_String[32];</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>snprintf(Temporary_String,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Temporary_String),<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>code<sp/>:<sp/>%X&quot;</highlight><highlight class="normal">,<sp/>Panic_Code);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>Xila.Display.Set_Text(F(</highlight><highlight class="stringliteral">&quot;ERRORCODE_TXT&quot;</highlight><highlight class="normal">),<sp/>Temporary_String);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/>vTaskSuspendAll();</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/>uint32_t<sp/>Delay_Time<sp/>=<sp/>Xila.Time.Milliseconds();</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((Xila.Time.Milliseconds()<sp/>-<sp/>Delay_Time)<sp/>&lt;<sp/>5000)</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/>abort();</highlight></codeline>
<codeline lineno="196"><highlight class="normal">}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><ref refid="class_xila___class_1a8d959952ae902a1d9caddcff96acc9ee" kindref="member">Xila_Class::Event</ref><sp/><ref refid="class_xila___class_1_1_system___class_1a65bb969da88ed612c9acdf621ea33ddd" kindref="member">Xila_Class::System_Class::Save_Dump</ref>()</highlight></codeline>
<codeline lineno="203"><highlight class="normal">{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/>DynamicJsonDocument<sp/>Dump_Registry(Default_Registry_Size);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/>JsonArray<sp/>Software<sp/>=<sp/>Dump_Registry.createNestedArray(</highlight><highlight class="stringliteral">&quot;Software&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/>Dump_Registry[</highlight><highlight class="stringliteral">&quot;Registry&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Dump&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint8_t<sp/>i<sp/>=<sp/>2;<sp/>i<sp/>&lt;=<sp/>7;<sp/>i++)</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Xila.Software_Management.<ref refid="class_xila___class_1_1_software___management___class_1a9719930db34c13d8cf5ce82e6dbe3d0c" kindref="member">Openned</ref>[i]<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Software.add(Xila.Software_Management.<ref refid="class_xila___class_1_1_software___management___class_1a9719930db34c13d8cf5ce82e6dbe3d0c" kindref="member">Openned</ref>[i]-&gt;<ref refid="class_xila___class_1_1_software_1a5c3d107b2dbdd581b9aa79b9d0f6b04f" kindref="member">Handle</ref>-&gt;<ref refid="class_xila___class_1_1_software___handle_1a1bc0e5ad3b90c8fc5ccb3a36830641e3" kindref="member">Name</ref>);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/>Dump_Registry[</highlight><highlight class="stringliteral">&quot;User&quot;</highlight><highlight class="normal">]<sp/>=<sp/>Xila.Account.<ref refid="class_xila___class_1_1_account___class_1a4621eb60e306930d785a26eacbcdf439" kindref="member">Get_Current_Username</ref>();</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/>File<sp/>Dump_File<sp/>=<sp/>Xila.Drive.<ref refid="class_xila___class_1_1_drive___class_1a773c3b5b91558c7202d174011b34b797" kindref="member">Open</ref>(Dump_Registry_Path,<sp/>FILE_WRITE);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(serializeJson(Dump_Registry,<sp/>Dump_File)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>Dump_File.close();</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_xila___class_1a8d959952ae902a1d9caddcff96acc9eeac91f464ae2171337aa4e6a5d521b8c44" kindref="member">Error</ref>;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/>Dump_File.close();</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_xila___class_1a8d959952ae902a1d9caddcff96acc9eeaee07a60c567f17f3d8e2ad35c3d60f94" kindref="member">Success</ref>;</highlight></codeline>
<codeline lineno="229"><highlight class="normal">}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><ref refid="class_xila___class_1a8d959952ae902a1d9caddcff96acc9ee" kindref="member">Xila_Class::Event</ref><sp/><ref refid="class_xila___class_1_1_system___class_1a4a3ee109288842604fe1d719105a3f77" kindref="member">Xila_Class::System_Class::Load_Dump</ref>()</highlight></codeline>
<codeline lineno="236"><highlight class="normal">{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Xila.Drive.<ref refid="class_xila___class_1_1_drive___class_1afc4521e0d8b8f0aac23af14d9e9239eb" kindref="member">Exists</ref>(Dump_Registry_Path))</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>File<sp/>Dump_File<sp/>=<sp/>Xila.Drive.<ref refid="class_xila___class_1_1_drive___class_1a773c3b5b91558c7202d174011b34b797" kindref="member">Open</ref>((Dump_Registry_Path));</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>DynamicJsonDocument<sp/>Dump_Registry(Default_Registry_Size);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(deserializeJson(Dump_Registry,<sp/>Dump_File)<sp/>!=<sp/>DeserializationError::Ok)</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Dump_File.close();</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Xila.Drive.<ref refid="class_xila___class_1_1_drive___class_1a7ba7605ddfbe7ccacfe81a7e49ea576d" kindref="member">Remove</ref>(Dump_Registry_Path);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_xila___class_1a8d959952ae902a1d9caddcff96acc9eeac91f464ae2171337aa4e6a5d521b8c44" kindref="member">Error</ref>;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>Dump_File.close();</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>Xila.Drive.<ref refid="class_xila___class_1_1_drive___class_1a7ba7605ddfbe7ccacfe81a7e49ea576d" kindref="member">Remove</ref>(Dump_Registry_Path);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(Dump_Registry[</highlight><highlight class="stringliteral">&quot;Registry&quot;</highlight><highlight class="normal">]<sp/>|<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Dump&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_xila___class_1a8d959952ae902a1d9caddcff96acc9eeac91f464ae2171337aa4e6a5d521b8c44" kindref="member">Error</ref>;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>Temporary_Software_Name[Default_Software_Name_Length];</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>JsonArray<sp/>Software<sp/>=<sp/>Dump_Registry[</highlight><highlight class="stringliteral">&quot;Software&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint8_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>6;<sp/>i++)</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memset(Temporary_Software_Name,<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Temporary_Software_Name));</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>strlcpy(Temporary_Software_Name,<sp/>Software[i]<sp/>|<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Temporary_Software_Name));</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint8_t<sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>Maximum_Software;<sp/>j++)</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Xila.Software_Management.<ref refid="class_xila___class_1_1_software___management___class_1a047a947c780a5396a0824217633c7d92" kindref="member">Handle</ref>[j]<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(Xila.Software_Management.<ref refid="class_xila___class_1_1_software___management___class_1a047a947c780a5396a0824217633c7d92" kindref="member">Handle</ref>[j]-&gt;<ref refid="class_xila___class_1_1_software___handle_1a1bc0e5ad3b90c8fc5ccb3a36830641e3" kindref="member">Name</ref>,<sp/>Temporary_Software_Name)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Xila.Software_Management.<ref refid="class_xila___class_1_1_software___management___class_1a9048eca103dfe2548068231fdc5261e9" kindref="member">Open</ref>(*Xila.Software_Management.<ref refid="class_xila___class_1_1_software___management___class_1a047a947c780a5396a0824217633c7d92" kindref="member">Handle</ref>[j]);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>strlcpy(Xila.Account.<ref refid="class_xila___class_1_1_account___class_1ae6736ab0abe4073f9455d5b40442ba71" kindref="member">Current_Username</ref>,<sp/>Dump_Registry[</highlight><highlight class="stringliteral">&quot;User&quot;</highlight><highlight class="normal">]<sp/>|<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Xila.Account.<ref refid="class_xila___class_1_1_account___class_1ae6736ab0abe4073f9455d5b40442ba71" kindref="member">Current_Username</ref>));</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Xila.Account.<ref refid="class_xila___class_1_1_account___class_1ae6736ab0abe4073f9455d5b40442ba71" kindref="member">Current_Username</ref>[0]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Xila.Account.Set_State(Xila.Account.Locked);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_xila___class_1a8d959952ae902a1d9caddcff96acc9eeaee07a60c567f17f3d8e2ad35c3d60f94" kindref="member">Success</ref>;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_xila___class_1a8d959952ae902a1d9caddcff96acc9eeac91f464ae2171337aa4e6a5d521b8c44" kindref="member">Error</ref>;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="288"><highlight class="normal">}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="class_xila___class_1_1_system___class_1a411ed4158ac620612c14a994257cc891" kindref="member">Xila_Class::System_Class::Get_Device_Name</ref>()</highlight></codeline>
<codeline lineno="295"><highlight class="normal">{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Xila.System.<ref refid="class_xila___class_1_1_system___class_1a45d66d24db04e7347ca4fd9c142c2706" kindref="member">Device_Name</ref>;</highlight></codeline>
<codeline lineno="297"><highlight class="normal">}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_xila___class_1_1_system___class_1a332890e008438669c624c579031c6c06" kindref="member">Xila_Class::System_Class::Refresh_Header</ref>()</highlight></codeline>
<codeline lineno="303"><highlight class="normal">{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Xila.Display.Get_State()<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/></highlight><highlight class="comment">//<sp/>if<sp/>display<sp/>sleep</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>Temporary_Char_Array[6];</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>Update<sp/>clock</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/>Temporary_Char_Array[0]<sp/>=<sp/>Xila.Time.Current_Time.tm_hour<sp/>/<sp/>10;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/>Temporary_Char_Array[0]<sp/>+=<sp/>48;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/>Temporary_Char_Array[1]<sp/>=<sp/>Xila.Time.Current_Time.tm_hour<sp/>%<sp/>10;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/>Temporary_Char_Array[1]<sp/>+=<sp/>48;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/>Temporary_Char_Array[2]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/>Temporary_Char_Array[3]<sp/>=<sp/>Xila.Time.Current_Time.tm_min<sp/>/<sp/>10;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/>Temporary_Char_Array[3]<sp/>+=<sp/>48;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/>Temporary_Char_Array[4]<sp/>=<sp/>Xila.Time.Current_Time.tm_min<sp/>%<sp/>10;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/>Temporary_Char_Array[4]<sp/>+=<sp/>48;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/>Temporary_Char_Array[5]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/>Xila.Display.Set_Text(F(</highlight><highlight class="stringliteral">&quot;CLOCK_TXT&quot;</highlight><highlight class="normal">),<sp/>Temporary_Char_Array);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>connexion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/>Temporary_Char_Array[5]<sp/>=<sp/>Xila.WiFi.RSSI();</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Xila.WiFi.status()<sp/>==<sp/>WL_CONNECTED)</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Temporary_Char_Array[5]<sp/>&lt;=<sp/>-70)</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Xila.Display.Set_Text(F(</highlight><highlight class="stringliteral">&quot;CONNEXION_BUT&quot;</highlight><highlight class="normal">),<sp/>Xila.Display.WiFi_Low);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Temporary_Char_Array[0]<sp/>&lt;=<sp/>-50<sp/>&amp;&amp;<sp/>Temporary_Char_Array[0]<sp/>&gt;<sp/>-70)</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Xila.Display.Set_Text(F(</highlight><highlight class="stringliteral">&quot;CONNEXION_BUT&quot;</highlight><highlight class="normal">),<sp/>Xila.Display.WiFi_Medium);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Xila.Display.Set_Text(F(</highlight><highlight class="stringliteral">&quot;CONNEXION_BUT&quot;</highlight><highlight class="normal">),<sp/>Xila.Display.WiFi_High);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>Xila.Display.Set_Text(F(</highlight><highlight class="stringliteral">&quot;CONNEXION_BUT&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>Update<sp/>charge<sp/>level</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/>Temporary_Char_Array[5]<sp/>=<sp/>Xila.Power.Get_Charge_Level();</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Temporary_Char_Array[5]<sp/>&lt;=<sp/>5)</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>Xila.Display.Set_Text(F(</highlight><highlight class="stringliteral">&quot;BATTERY_BUT&quot;</highlight><highlight class="normal">),<sp/>Xila.Display.Battery_Empty);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>Xila.Display.Set_Font_Color(F(</highlight><highlight class="stringliteral">&quot;BATTERY_BUT&quot;</highlight><highlight class="normal">),<sp/>Xila.Display.Red);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Temporary_Char_Array[5]<sp/>&lt;=<sp/>10<sp/>&amp;&amp;<sp/>Temporary_Char_Array[5]<sp/>&gt;<sp/>5)</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>Xila.Display.Set_Text(F(</highlight><highlight class="stringliteral">&quot;BATTERY_BUT&quot;</highlight><highlight class="normal">),<sp/>Xila.Display.Battery_Empty);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>Xila.Display.Set_Font_Color(F(</highlight><highlight class="stringliteral">&quot;BATTERY_BUT&quot;</highlight><highlight class="normal">),<sp/>Xila.Display.White);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Temporary_Char_Array[5]<sp/>&lt;=<sp/>35<sp/>&amp;&amp;<sp/>Temporary_Char_Array[5]<sp/>&gt;<sp/>10)</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>Xila.Display.Set_Text(F(</highlight><highlight class="stringliteral">&quot;BATTERY_BUT&quot;</highlight><highlight class="normal">),<sp/>Xila.Display.Battery_Quarter);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Temporary_Char_Array[5]<sp/>&lt;=<sp/>60<sp/>&amp;&amp;<sp/>Temporary_Char_Array[5]<sp/>&gt;<sp/>35)</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>Xila.Display.Set_Text(F(</highlight><highlight class="stringliteral">&quot;BATTERY_BUT&quot;</highlight><highlight class="normal">),<sp/>Xila.Display.Battery_Half);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Temporary_Char_Array[5]<sp/>&lt;=<sp/>85<sp/>&amp;&amp;<sp/>Temporary_Char_Array[5]<sp/>&gt;<sp/>60)</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>Xila.Display.Set_Text(F(</highlight><highlight class="stringliteral">&quot;BATTERY_BUT&quot;</highlight><highlight class="normal">),<sp/>Xila.Display.Battery_Three_Quarters);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>more<sp/>than<sp/>85<sp/>%</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/>Xila.Display.Set_Text(F(</highlight><highlight class="stringliteral">&quot;BATTERY_BUT&quot;</highlight><highlight class="normal">),<sp/>Xila.Display.Battery_Full);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>Update<sp/>sound</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/>Temporary_Char_Array[5]<sp/>=<sp/>Xila.Sound.<ref refid="class_xila___class_1_1_sound___class_1a6ff91eed9eb1dd826ad2eba29b31b6c0" kindref="member">Get_Volume</ref>();</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Temporary_Char_Array[5]<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>Xila.Display.Set_Text(F(</highlight><highlight class="stringliteral">&quot;SOUND_BUT&quot;</highlight><highlight class="normal">),<sp/>Xila.Display.Sound_Mute);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Temporary_Char_Array[5]<sp/>&lt;<sp/>86)</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>Xila.Display.Set_Text(F(</highlight><highlight class="stringliteral">&quot;SOUND_BUT&quot;</highlight><highlight class="normal">),<sp/>Xila.Display.Sound_Low);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Temporary_Char_Array[5]<sp/>&lt;<sp/>172)</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>Xila.Display.Set_Text(F(</highlight><highlight class="stringliteral">&quot;SOUND_BUT&quot;</highlight><highlight class="normal">),<sp/>Xila.Display.Sound_Medium);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>Xila.Display.Set_Text(F(</highlight><highlight class="stringliteral">&quot;SOUND_BUT&quot;</highlight><highlight class="normal">),<sp/>Xila.Display.Sound_High);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="396"><highlight class="normal">}</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_xila___class_1_1_system___class_1a1544c6a7f57a011c98170ac2169aa782" kindref="member">Xila_Class::System_Class::First_Start_Routine</ref>()</highlight></codeline>
<codeline lineno="402"><highlight class="normal">{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>USB_Serial<sp/>==<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/>Serial.begin(Default_USB_Serial_Speed);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Xila.System.Task_Handle<sp/>!=<sp/>NULL)<sp/></highlight><highlight class="comment">//<sp/>Already<sp/>started</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>Check<sp/>if<sp/>the<sp/>power<sp/>button<sp/>was<sp/>press<sp/>or<sp/>the<sp/>power<sp/>supply<sp/>plugged.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/>esp_sleep_enable_ext0_wakeup(Power_Button_Pin,<sp/>LOW);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/>esp_sleep_wakeup_cause_t<sp/>Wakeup_Cause<sp/>=<sp/>esp_sleep_get_wakeup_cause();</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>Start_On_Power<sp/>==<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Wakeup_Cause<sp/>!=<sp/>ESP_SLEEP_WAKEUP_EXT0)</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>Xila.Power.<ref refid="class_xila___class_1_1_power___class_1a9b4719f1ead21dbdbc3401973993775d" kindref="member">Deep_Sleep</ref>();</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>Start_On_Power<sp/>==<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Wakeup_Cause<sp/>!=<sp/>ESP_SLEEP_WAKEUP_EXT0<sp/>&amp;&amp;<sp/>Wakeup_Cause<sp/>!=<sp/>ESP_SLEEP_WAKEUP_UNDEFINED)</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>Xila.Power.<ref refid="class_xila___class_1_1_power___class_1a9b4719f1ead21dbdbc3401973993775d" kindref="member">Deep_Sleep</ref>();</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>Set<sp/>power<sp/>button<sp/>interrupts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/>Xila.GPIO.<ref refid="class_xila___class_1_1_g_p_i_o___class_1a4d61aa3002e4d810c8446430ce979c2f" kindref="member">Set_Mode</ref>(Power_Button_Pin,<sp/>INPUT);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/>Xila.GPIO.<ref refid="class_xila___class_1_1_g_p_i_o___class_1a5e392a9291b7b6ecdbad9e2db3e6fcc1" kindref="member">Attach_Interrupt</ref>(digitalPinToInterrupt(Power_Button_Pin),<sp/>Xila.Power.<ref refid="class_xila___class_1_1_power___class_1a68682860b74e10dd2fc2fa669a71ce8b" kindref="member">Button_Interrupt_Handler</ref>,<sp/>Xila.GPIO.<ref refid="class_xila___class_1_1_g_p_i_o___class_1acb2a4750713a181d8c988c524191b014a5f3ad6926ebcda668893f054bb07fa20" kindref="member">Change</ref>);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>Increase<sp/>esp32<sp/>hardware<sp/>watchdog<sp/>timeout</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(esp_task_wdt_init(Maximum_Watchdog_Timeout<sp/>/<sp/>1000,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>!=<sp/>ESP_OK)</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP.restart();</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>Initialize<sp/>drive.<sp/>--<sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>Drive_Mode<sp/>==<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/>Xila.GPIO.<ref refid="class_xila___class_1_1_g_p_i_o___class_1a4d61aa3002e4d810c8446430ce979c2f" kindref="member">Set_Mode</ref>(14,<sp/>INPUT_PULLUP);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/>Xila.GPIO.<ref refid="class_xila___class_1_1_g_p_i_o___class_1a4d61aa3002e4d810c8446430ce979c2f" kindref="member">Set_Mode</ref>(2,<sp/>INPUT_PULLUP);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/>Xila.GPIO.<ref refid="class_xila___class_1_1_g_p_i_o___class_1a4d61aa3002e4d810c8446430ce979c2f" kindref="member">Set_Mode</ref>(4,<sp/>INPUT_PULLUP);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/>Xila.GPIO.<ref refid="class_xila___class_1_1_g_p_i_o___class_1a4d61aa3002e4d810c8446430ce979c2f" kindref="member">Set_Mode</ref>(12,<sp/>INPUT_PULLUP);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/>Xila.GPIO.<ref refid="class_xila___class_1_1_g_p_i_o___class_1a4d61aa3002e4d810c8446430ce979c2f" kindref="member">Set_Mode</ref>(13,<sp/>INPUT_PULLUP);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!Xila.Drive.<ref refid="class_xila___class_1_1_drive___class_1ae6ee65e39b64633977e13099011c3673" kindref="member">Begin</ref>()<sp/>||<sp/>Xila.Drive.<ref refid="class_xila___class_1_1_drive___class_1a292061e7081549b280ff14c0612357bc" kindref="member">Type</ref>()<sp/>==<sp/>Xila.Drive.<ref refid="class_xila___class_1_1_drive___class_1a7e7d4a3f766198a07fef592597404d5aa383e5858e9e99cab882bc243a37e85e8" kindref="member">None</ref>)</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/>Xila.Display.Set_Text(F(</highlight><highlight class="stringliteral">&quot;EVENT_TXT&quot;</highlight><highlight class="normal">),<sp/>F(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>initialize<sp/>drive.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!Xila.Drive.<ref refid="class_xila___class_1_1_drive___class_1ae6ee65e39b64633977e13099011c3673" kindref="member">Begin</ref>()<sp/>||<sp/>Xila.Drive.<ref refid="class_xila___class_1_1_drive___class_1a292061e7081549b280ff14c0612357bc" kindref="member">Type</ref>()<sp/>==<sp/>Xila.Drive.<ref refid="class_xila___class_1_1_drive___class_1a7e7d4a3f766198a07fef592597404d5aa383e5858e9e99cab882bc243a37e85e8" kindref="member">None</ref>)</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/>Xila.Drive.<ref refid="class_xila___class_1_1_drive___class_1ac3f935e3060f0a754e4aea39b0c150bd" kindref="member">End</ref>();</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>Xila.Task.<ref refid="class_xila___class_1_1_task___class_1a1a65d70162c95dfd3ac8b4683e913ce9" kindref="member">Delay</ref>(200);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/>Xila.Display.Set_Text(F(</highlight><highlight class="stringliteral">&quot;EVENT_TXT&quot;</highlight><highlight class="normal">),<sp/>F(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>Initialize<sp/>display.<sp/>--<sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/>Xila.Display.Set_Callback_Function_Numeric_Data(Xila.Display.<ref refid="class_xila___class_1_1_display___class_1a6d37d3e73494d1ec37d691245bfded8b" kindref="member">Incomming_Numeric_Data_From_Display</ref>);</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/>Xila.Display.Set_Callback_Function_String_Data(Xila.Display.<ref refid="class_xila___class_1_1_display___class_1af4e9eeffcd68b5354a84d0400bbcf908" kindref="member">Incomming_String_Data_From_Display</ref>);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/>Xila.Display.Set_Callback_Function_Event(Xila.Display.<ref refid="class_xila___class_1_1_display___class_1af571914a2dd55645c4b6109284958f70" kindref="member">Incomming_Event_From_Display</ref>);</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Xila.Display.<ref refid="class_xila___class_1_1_display___class_1a4634dd85c9ecc3919ac2bf616472ce69" kindref="member">Load_Registry</ref>()<sp/>!=<sp/><ref refid="class_xila___class_1a8d959952ae902a1d9caddcff96acc9eeaee07a60c567f17f3d8e2ad35c3d60f94" kindref="member">Success</ref>)</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/>Xila.Display.<ref refid="class_xila___class_1_1_display___class_1a57a1a229e2cf6b56a00374fbd4b7f57e" kindref="member">Save_Registry</ref>();</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/>Xila.Display.Begin(Xila.Display.Baud_Rate,<sp/>Xila.Display.Receive_Pin,<sp/>Xila.Display.Transmit_Pin);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!Xila.Drive.<ref refid="class_xila___class_1_1_drive___class_1afc4521e0d8b8f0aac23af14d9e9239eb" kindref="member">Exists</ref>(Users_Directory_Path))</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/>File<sp/>Temporary_File<sp/>=<sp/>Xila.Drive.<ref refid="class_xila___class_1_1_drive___class_1a773c3b5b91558c7202d174011b34b797" kindref="member">Open</ref>(Display_Executable_Path);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Xila.Display.Update(Temporary_File)<sp/>!=<sp/>Xila.Display.Update_Succeed)</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Panic_Handler(Failed_To_Update_Display);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/>Xila.Task.<ref refid="class_xila___class_1_1_task___class_1a1a65d70162c95dfd3ac8b4683e913ce9" kindref="member">Delay</ref>(5000);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/>Xila.Display.Begin(Xila.Display.Baud_Rate,<sp/>Xila.Display.Receive_Pin,<sp/>Xila.Display.Transmit_Pin);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/>Xila.GPIO.<ref refid="class_xila___class_1_1_g_p_i_o___class_1a4d61aa3002e4d810c8446430ce979c2f" kindref="member">Set_Mode</ref>(Default_Display_Switching_Pin,<sp/>Xila.GPIO.<ref refid="class_xila___class_1_1_g_p_i_o___class_1a5f8475f7571a2b465d633353d8fcdbfcad19f97e127de37752a423ca8309dcdb2" kindref="member">Output</ref>);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/>Xila.GPIO.<ref refid="class_xila___class_1_1_g_p_i_o___class_1ae0884fdc33e1d1fd732381945b97431b" kindref="member">Digital_Write</ref>(Default_Display_Switching_Pin,<sp/>Xila.GPIO.<ref refid="class_xila___class_1_1_g_p_i_o___class_1a476ef78e4ebbbce44ae4bc5a82eb914ba58d99dc2621426b9b22ee47becca04d1" kindref="member">High</ref>);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/>Xila.Task.<ref refid="class_xila___class_1_1_task___class_1a1a65d70162c95dfd3ac8b4683e913ce9" kindref="member">Delay</ref>(2000);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/>Xila.Display.Wake_Up();</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/>Xila.Display.Set_Touch_Wake_Up(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/>Xila.Display.Set_Serial_Wake_Up(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/>Xila.Display.Set_Brightness(Xila.Display.Brightness);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/>Xila.Display.Set_Standby_Touch_Timer(Xila.Display.Standby_Time);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/>Xila.Display.Set_Current_Page(F(</highlight><highlight class="stringliteral">&quot;Core_Load&quot;</highlight><highlight class="normal">));<sp/></highlight><highlight class="comment">//<sp/>Play<sp/>animation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/>Xila.Display.Set_Trigger(F(</highlight><highlight class="stringliteral">&quot;LOAD_TIM&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>Check<sp/>system<sp/>integrity<sp/>--<sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!Xila.Drive.<ref refid="class_xila___class_1_1_drive___class_1afc4521e0d8b8f0aac23af14d9e9239eb" kindref="member">Exists</ref>(Xila_Directory_Path)<sp/>||<sp/>!Xila.Drive.<ref refid="class_xila___class_1_1_drive___class_1afc4521e0d8b8f0aac23af14d9e9239eb" kindref="member">Exists</ref>(Software_Directory_Path))</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/>Xila.System.<ref refid="class_xila___class_1_1_system___class_1a96f3b3f9bceae6af625c4f7e454262de" kindref="member">Panic_Handler</ref>(Xila.System.Missing_System_Files);</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>Load<sp/>system<sp/>registry<sp/>--<sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Xila.System.<ref refid="class_xila___class_1_1_system___class_1af4fcdb39e66aec32ea01ddc9728ed70d" kindref="member">Load_Registry</ref>()<sp/>!=<sp/><ref refid="class_xila___class_1a8d959952ae902a1d9caddcff96acc9eeaee07a60c567f17f3d8e2ad35c3d60f94" kindref="member">Success</ref>)</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/>Xila.System.<ref refid="class_xila___class_1_1_system___class_1a96f3b3f9bceae6af625c4f7e454262de" kindref="member">Panic_Handler</ref>(Xila.System.Damaged_System_Registry);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/>Xila.WiFi.setHostname(Xila.System.<ref refid="class_xila___class_1_1_system___class_1a45d66d24db04e7347ca4fd9c142c2706" kindref="member">Device_Name</ref>);<sp/></highlight><highlight class="comment">//<sp/>Set<sp/>hostname</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>Load<sp/>sound<sp/>registry<sp/>--</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Xila.Sound.<ref refid="class_xila___class_1_1_sound___class_1ace40cc5c81319ad4c0c61993cc894ca5" kindref="member">Load_Registry</ref>()<sp/>!=<sp/><ref refid="class_xila___class_1a8d959952ae902a1d9caddcff96acc9eeaee07a60c567f17f3d8e2ad35c3d60f94" kindref="member">Success</ref>)</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/>Xila.Sound.<ref refid="class_xila___class_1_1_sound___class_1a80a3ec224409e3c52093afe4deca445b" kindref="member">Save_Registry</ref>();</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/>Xila.Sound.Begin();</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>Play<sp/>startup<sp/>sound</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/>Xila.Sound.<ref refid="class_xila___class_1_1_sound___class_1a6431df53f50f2a27cb47ccba414083fe" kindref="member">Play</ref>(Sounds(</highlight><highlight class="stringliteral">&quot;Startup.wav&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>Load<sp/>power<sp/>registry<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Xila.Power.<ref refid="class_xila___class_1_1_power___class_1a779d37dcb121719d751cd040cff6b84a" kindref="member">Load_Registry</ref>()<sp/>!=<sp/><ref refid="class_xila___class_1a8d959952ae902a1d9caddcff96acc9eeaee07a60c567f17f3d8e2ad35c3d60f94" kindref="member">Success</ref>)</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/>Xila.Power.<ref refid="class_xila___class_1_1_power___class_1ac67b1cc6f75381d5ea3e9da400dc7de3" kindref="member">Save_Registry</ref>();</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>Network<sp/>registry<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Xila.WiFi.<ref refid="class_xila___class_1_1_wi_fi___class_1a7663be1a0fff6cb5c8c7c8d78735714b" kindref="member">Load_Registry</ref>()<sp/>!=<sp/><ref refid="class_xila___class_1a8d959952ae902a1d9caddcff96acc9eeaee07a60c567f17f3d8e2ad35c3d60f94" kindref="member">Success</ref>)</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/>Xila.WiFi.<ref refid="class_xila___class_1_1_wi_fi___class_1a6c71a9c6ef7b5c874e7f7c8a1716fc31" kindref="member">Save_Registry</ref>();</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>Time<sp/>registry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Xila.Time.<ref refid="class_xila___class_1_1_time___class_1adc8305e55fcfdef8c799d908bc6a0878" kindref="member">Load_Registry</ref>()<sp/>!=<sp/><ref refid="class_xila___class_1a8d959952ae902a1d9caddcff96acc9eeaee07a60c567f17f3d8e2ad35c3d60f94" kindref="member">Success</ref>)</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/>Xila.Time.<ref refid="class_xila___class_1_1_time___class_1a6a2527eac161aff9a51993929b135b1f" kindref="member">Save_Registry</ref>();</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>Load<sp/>account<sp/>registry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Xila.Account.<ref refid="class_xila___class_1_1_account___class_1a0e5ba763e38f904b6ea35dc0a29254ba" kindref="member">Load_Registry</ref>()<sp/>!=<sp/><ref refid="class_xila___class_1a8d959952ae902a1d9caddcff96acc9eeaee07a60c567f17f3d8e2ad35c3d60f94" kindref="member">Success</ref>)</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/>Xila.Account.<ref refid="class_xila___class_1_1_account___class_1aaff807ed1d55e77972324ce7c5601d7e" kindref="member">Set_Autologin</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>Load<sp/>Keyboard<sp/>Registry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Xila.Keyboard.<ref refid="class_xila___class_1_1_keyboard___class_1a43f3cb3ddaf195cba6d21a46539c0680" kindref="member">Load_Registry</ref>()<sp/>!=<sp/><ref refid="class_xila___class_1a8d959952ae902a1d9caddcff96acc9eeaee07a60c567f17f3d8e2ad35c3d60f94" kindref="member">Success</ref>)</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/>Xila.Keyboard.<ref refid="class_xila___class_1_1_keyboard___class_1ac9e9097217975b9a6135b694c18d4541" kindref="member">Save_Registry</ref>();<sp/></highlight><highlight class="comment">//<sp/>recreate<sp/>a<sp/>keyboard<sp/>registry<sp/>with<sp/>default<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="552"><highlight class="normal">}</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_xila___class_1_1_system___class_1a61de79a583c025ef94816add2d946e09" kindref="member">Xila_Class::System_Class::Second_Start_Routine</ref>()</highlight></codeline>
<codeline lineno="558"><highlight class="normal">{</highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>Animations<sp/>==<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/>Xila.Task.<ref refid="class_xila___class_1_1_task___class_1a1a65d70162c95dfd3ac8b4683e913ce9" kindref="member">Delay</ref>(3000);</highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/>Xila.Display.Set_Value(F(</highlight><highlight class="stringliteral">&quot;STATE_VAR&quot;</highlight><highlight class="normal">),<sp/>2);</highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>Animations<sp/>==<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/>Xila.Task.<ref refid="class_xila___class_1_1_task___class_1a1a65d70162c95dfd3ac8b4683e913ce9" kindref="member">Delay</ref>(3000);</highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/>Xila.Task.<ref refid="class_xila___class_1_1_task___class_1a1a65d70162c95dfd3ac8b4683e913ce9" kindref="member">Delay</ref>(500);</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/>Xila.System.<ref refid="class_xila___class_1_1_system___class_1a4a3ee109288842604fe1d719105a3f77" kindref="member">Load_Dump</ref>();</highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/>Xila.Task.<ref refid="class_xila___class_1_1_task___class_1a1a65d70162c95dfd3ac8b4683e913ce9" kindref="member">Delay</ref>(100);</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/>Execute_Startup_Function();</highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/>Xila.Task.Create(Xila.System.<ref refid="class_xila___class_1_1_system___class_1a4fa674687889e351b8bb6e7697c2060f" kindref="member">Task</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Core<sp/>Task&quot;</highlight><highlight class="normal">,<sp/>Memory_Chunk(4),<sp/>NULL,<sp/>Xila.Task.System_Task,<sp/>&amp;Xila.System.Task_Handle);</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/>Xila.Task.Delete();<sp/></highlight><highlight class="comment">//<sp/>delete<sp/>main<sp/>task</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal">}</highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_xila___class_1_1_system___class_1a82ff50079477272431931981d3ed967c" kindref="member">Xila_Class::System_Class::Start</ref>(<ref refid="class_xila___class_1_1_software___handle" kindref="compound">Xila_Class::Software_Handle</ref><sp/>**Software_Package,<sp/>uint8_t<sp/>Size)</highlight></codeline>
<codeline lineno="589"><highlight class="normal">{</highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/>First_Start_Routine();</highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Restore<sp/>attribute</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint8_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>Size;<sp/>i++)</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/>Xila.Software_Management.<ref refid="class_xila___class_1_1_software___management___class_1af9f7f49bcba7ba7c5dc1ed221396d99b" kindref="member">Add_Handle</ref>(*Software_Package[i]);</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/>Second_Start_Routine();</highlight></codeline>
<codeline lineno="601"><highlight class="normal">}</highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_xila___class_1_1_system___class_1a82ff50079477272431931981d3ed967c" kindref="member">Xila_Class::System_Class::Start</ref>()</highlight></codeline>
<codeline lineno="607"><highlight class="normal">{</highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/>First_Start_Routine();</highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="class_xila___class_1_1_software___handle" kindref="compound">Xila_Class::Software_Handle</ref><sp/>Calculator_Handle;</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="class_xila___class_1_1_software___handle" kindref="compound">Xila_Class::Software_Handle</ref><sp/>Clock_Handle;</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="class_xila___class_1_1_software___handle" kindref="compound">Xila_Class::Software_Handle</ref><sp/>Internet_Browser_Handle;</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="class_xila___class_1_1_software___handle" kindref="compound">Xila_Class::Software_Handle</ref><sp/>Music_Player_Handle;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="class_xila___class_1_1_software___handle" kindref="compound">Xila_Class::Software_Handle</ref><sp/>Oscilloscope_Handle;</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="class_xila___class_1_1_software___handle" kindref="compound">Xila_Class::Software_Handle</ref><sp/>Paint_Handle;</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="class_xila___class_1_1_software___handle" kindref="compound">Xila_Class::Software_Handle</ref><sp/>Periodic_Handle;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="class_xila___class_1_1_software___handle" kindref="compound">Xila_Class::Software_Handle</ref><sp/>Piano_Handle;</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="class_xila___class_1_1_software___handle" kindref="compound">Xila_Class::Software_Handle</ref><sp/>Pong_Handle;</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="class_xila___class_1_1_software___handle" kindref="compound">Xila_Class::Software_Handle</ref><sp/>Simon_Handle;</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="class_xila___class_1_1_software___handle" kindref="compound">Xila_Class::Software_Handle</ref><sp/>Text_Editor_Handle;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="class_xila___class_1_1_software___handle" kindref="compound">Xila_Class::Software_Handle</ref><sp/>Tiny_Basic_Handle;</highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/>Xila.Software_Management.<ref refid="class_xila___class_1_1_software___management___class_1af9f7f49bcba7ba7c5dc1ed221396d99b" kindref="member">Add_Handle</ref>(Calculator_Handle);</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/>Xila.Software_Management.<ref refid="class_xila___class_1_1_software___management___class_1af9f7f49bcba7ba7c5dc1ed221396d99b" kindref="member">Add_Handle</ref>(Clock_Handle);</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/>Xila.Software_Management.<ref refid="class_xila___class_1_1_software___management___class_1af9f7f49bcba7ba7c5dc1ed221396d99b" kindref="member">Add_Handle</ref>(Internet_Browser_Handle);</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/>Xila.Software_Management.<ref refid="class_xila___class_1_1_software___management___class_1af9f7f49bcba7ba7c5dc1ed221396d99b" kindref="member">Add_Handle</ref>(Music_Player_Handle);</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/>Xila.Software_Management.<ref refid="class_xila___class_1_1_software___management___class_1af9f7f49bcba7ba7c5dc1ed221396d99b" kindref="member">Add_Handle</ref>(Oscilloscope_Handle);</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/>Xila.Software_Management.<ref refid="class_xila___class_1_1_software___management___class_1af9f7f49bcba7ba7c5dc1ed221396d99b" kindref="member">Add_Handle</ref>(Paint_Handle);</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/>Xila.Software_Management.<ref refid="class_xila___class_1_1_software___management___class_1af9f7f49bcba7ba7c5dc1ed221396d99b" kindref="member">Add_Handle</ref>(Periodic_Handle);</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/>Xila.Software_Management.<ref refid="class_xila___class_1_1_software___management___class_1af9f7f49bcba7ba7c5dc1ed221396d99b" kindref="member">Add_Handle</ref>(Piano_Handle);</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/>Xila.Software_Management.<ref refid="class_xila___class_1_1_software___management___class_1af9f7f49bcba7ba7c5dc1ed221396d99b" kindref="member">Add_Handle</ref>(Pong_Handle);</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/>Xila.Software_Management.<ref refid="class_xila___class_1_1_software___management___class_1af9f7f49bcba7ba7c5dc1ed221396d99b" kindref="member">Add_Handle</ref>(Simon_Handle);</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/>Xila.Software_Management.<ref refid="class_xila___class_1_1_software___management___class_1af9f7f49bcba7ba7c5dc1ed221396d99b" kindref="member">Add_Handle</ref>(Text_Editor_Handle);</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/>Xila.Software_Management.<ref refid="class_xila___class_1_1_software___management___class_1af9f7f49bcba7ba7c5dc1ed221396d99b" kindref="member">Add_Handle</ref>(Tiny_Basic_Handle);</highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/>Second_Start_Routine();</highlight></codeline>
<codeline lineno="638"><highlight class="normal">}</highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_xila___class_1_1_system___class_1ab4d3605f0e05e7a59310b9eef55ddb20" kindref="member">Xila_Class::System_Class::Execute_Startup_Function</ref>()</highlight></codeline>
<codeline lineno="644"><highlight class="normal">{</highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/>(*Shell_Handle.<ref refid="class_xila___class_1_1_software___handle_1a1b9c55b42b0c0c6a2acb993c9a497a28" kindref="member">Startup_Function_Pointer</ref>)();</highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint8_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>Maximum_Software;<sp/>i++)</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Xila.Software_Management.<ref refid="class_xila___class_1_1_software___management___class_1a047a947c780a5396a0824217633c7d92" kindref="member">Handle</ref>[i]<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Xila.Software_Management.<ref refid="class_xila___class_1_1_software___management___class_1a047a947c780a5396a0824217633c7d92" kindref="member">Handle</ref>[i]-&gt;<ref refid="class_xila___class_1_1_software___handle_1a1b9c55b42b0c0c6a2acb993c9a497a28" kindref="member">Startup_Function_Pointer</ref><sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*Xila.Software_Management.<ref refid="class_xila___class_1_1_software___management___class_1a047a947c780a5396a0824217633c7d92" kindref="member">Handle</ref>[i]-&gt;<ref refid="class_xila___class_1_1_software___handle_1a1b9c55b42b0c0c6a2acb993c9a497a28" kindref="member">Startup_Function_Pointer</ref>)();</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="659"><highlight class="normal">}</highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_xila___class_1_1_system___class_1afa8381f7d491d3e84d648ec55dd7c08e" kindref="member">Xila_Class::System_Class::Shutdown</ref>()</highlight></codeline>
<codeline lineno="665"><highlight class="normal">{</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/>Xila.Software_Management.<ref refid="class_xila___class_1_1_software___management___class_1a9f4a4465b54c7894bbd7147d8e575075" kindref="member">Shell_Maximize</ref>();</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/>Xila.Software_Management.Shell_Send_Instruction(Xila.Shutdown);</highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint8_t<sp/>i<sp/>=<sp/>2;<sp/>i<sp/>&lt;<sp/>8;<sp/>i++)</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Xila.Software_Management.<ref refid="class_xila___class_1_1_software___management___class_1a9719930db34c13d8cf5ce82e6dbe3d0c" kindref="member">Openned</ref>[i]<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Xila.Software_Management.<ref refid="class_xila___class_1_1_software___management___class_1a9719930db34c13d8cf5ce82e6dbe3d0c" kindref="member">Openned</ref>[i]-&gt;<ref refid="class_xila___class_1_1_software_1aa45509b64cac8ff55986ef789716b55a" kindref="member">Send_Instruction</ref>(Xila.Shutdown);</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Xila.Task.Resume(Xila.Software_Management.<ref refid="class_xila___class_1_1_software___management___class_1a9719930db34c13d8cf5ce82e6dbe3d0c" kindref="member">Openned</ref>[i]-&gt;<ref refid="class_xila___class_1_1_software_1aa9c6eccc5e85e629d875fc6080714f30" kindref="member">Task_Handle</ref>);</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>Waiting<sp/>for<sp/>the<sp/>software<sp/>to<sp/>close</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint8_t<sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;=<sp/>200;<sp/>j++)</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Xila.Software_Management.<ref refid="class_xila___class_1_1_software___management___class_1a9719930db34c13d8cf5ce82e6dbe3d0c" kindref="member">Openned</ref>[i]<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j<sp/>==<sp/>200<sp/>&amp;&amp;<sp/>Xila.Software_Management.<ref refid="class_xila___class_1_1_software___management___class_1a9719930db34c13d8cf5ce82e6dbe3d0c" kindref="member">Openned</ref>[i]<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Xila.Software_Management.<ref refid="class_xila___class_1_1_software___management___class_1aa48d00fc8c3a3a46bf0a995373aeea35" kindref="member">Force_Close</ref>(*Xila.Software_Management.<ref refid="class_xila___class_1_1_software___management___class_1a9719930db34c13d8cf5ce82e6dbe3d0c" kindref="member">Openned</ref>[i]-&gt;<ref refid="class_xila___class_1_1_software_1a5c3d107b2dbdd581b9aa79b9d0f6b04f" kindref="member">Handle</ref>);</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Xila.Task.<ref refid="class_xila___class_1_1_task___class_1a1a65d70162c95dfd3ac8b4683e913ce9" kindref="member">Delay</ref>(20);</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/>Second_Sleep_Routine();</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/>Xila.Power.<ref refid="class_xila___class_1_1_power___class_1a9b4719f1ead21dbdbc3401973993775d" kindref="member">Deep_Sleep</ref>();</highlight></codeline>
<codeline lineno="693"><highlight class="normal">}</highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_xila___class_1_1_system___class_1a5b71b479f7d00c89b23b11b587e6e734" kindref="member">Xila_Class::System_Class::Second_Sleep_Routine</ref>()</highlight></codeline>
<codeline lineno="699"><highlight class="normal">{</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/>Xila.Task.Delete(Xila.System.Task_Handle);</highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/>Xila.Display.<ref refid="class_xila___class_1_1_display___class_1a57a1a229e2cf6b56a00374fbd4b7f57e" kindref="member">Save_Registry</ref>();</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/>Xila.Keyboard.<ref refid="class_xila___class_1_1_keyboard___class_1ac9e9097217975b9a6135b694c18d4541" kindref="member">Save_Registry</ref>();</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/>Xila.Power.<ref refid="class_xila___class_1_1_power___class_1ac67b1cc6f75381d5ea3e9da400dc7de3" kindref="member">Save_Registry</ref>();</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/>Xila.Sound.<ref refid="class_xila___class_1_1_sound___class_1a80a3ec224409e3c52093afe4deca445b" kindref="member">Save_Registry</ref>();</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/>Xila.WiFi.<ref refid="class_xila___class_1_1_wi_fi___class_1a6c71a9c6ef7b5c874e7f7c8a1716fc31" kindref="member">Save_Registry</ref>();</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/>Xila.Time.<ref refid="class_xila___class_1_1_time___class_1a6a2527eac161aff9a51993929b135b1f" kindref="member">Save_Registry</ref>();</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/>Xila.System.<ref refid="class_xila___class_1_1_system___class_1a5013c52976a80c0a4666b3e63da001cf" kindref="member">Save_Registry</ref>();</highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/>Xila.Sound.<ref refid="class_xila___class_1_1_sound___class_1a6431df53f50f2a27cb47ccba414083fe" kindref="member">Play</ref>(Sounds(</highlight><highlight class="stringliteral">&quot;Shutdown.wav&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/>Xila.Task.<ref refid="class_xila___class_1_1_task___class_1a1a65d70162c95dfd3ac8b4683e913ce9" kindref="member">Delay</ref>(8000);</highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/>Xila.Task.Delete(Xila.Sound.<ref refid="class_xila___class_1_1_sound___class_1a604889ac9cd6d022b8deb033fa07ab95" kindref="member">Task_Handle</ref>);</highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Disconnect<sp/>wifi</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/>Xila.WiFi.disconnect();</highlight></codeline>
<codeline lineno="718"><highlight class="normal">}</highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_xila___class_1_1_system___class_1afbbc6b35ceb316842c50f12968b1abc5" kindref="member">Xila_Class::System_Class::Hibernate</ref>()</highlight></codeline>
<codeline lineno="724"><highlight class="normal">{</highlight></codeline>
<codeline lineno="725"><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/>Xila.System.<ref refid="class_xila___class_1_1_system___class_1a65bb969da88ed612c9acdf621ea33ddd" kindref="member">Save_Dump</ref>();</highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/>Xila.Software_Management.<ref refid="class_xila___class_1_1_software___management___class_1a9f4a4465b54c7894bbd7147d8e575075" kindref="member">Shell_Maximize</ref>();</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/>Xila.Software_Management.Shell_Send_Instruction(Xila.Hibernate);</highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint8_t<sp/>i<sp/>=<sp/>2;<sp/>i<sp/>&lt;<sp/>8;<sp/>i++)</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Xila.Software_Management.<ref refid="class_xila___class_1_1_software___management___class_1a9719930db34c13d8cf5ce82e6dbe3d0c" kindref="member">Openned</ref>[i]<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Xila.Software_Management.<ref refid="class_xila___class_1_1_software___management___class_1a9719930db34c13d8cf5ce82e6dbe3d0c" kindref="member">Openned</ref>[i]-&gt;<ref refid="class_xila___class_1_1_software_1aa45509b64cac8ff55986ef789716b55a" kindref="member">Send_Instruction</ref>(Xila.Hibernate);</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Xila.Task.Resume(Xila.Software_Management.<ref refid="class_xila___class_1_1_software___management___class_1a9719930db34c13d8cf5ce82e6dbe3d0c" kindref="member">Openned</ref>[i]-&gt;<ref refid="class_xila___class_1_1_software_1aa9c6eccc5e85e629d875fc6080714f30" kindref="member">Task_Handle</ref>);</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>Waiting<sp/>for<sp/>the<sp/>software<sp/>to<sp/>close</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint8_t<sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;=<sp/>200;<sp/>j++)</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Xila.Software_Management.<ref refid="class_xila___class_1_1_software___management___class_1a9719930db34c13d8cf5ce82e6dbe3d0c" kindref="member">Openned</ref>[i]<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j<sp/>==<sp/>200<sp/>&amp;&amp;<sp/>Xila.Software_Management.<ref refid="class_xila___class_1_1_software___management___class_1a9719930db34c13d8cf5ce82e6dbe3d0c" kindref="member">Openned</ref>[i]<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Xila.Software_Management.<ref refid="class_xila___class_1_1_software___management___class_1aa48d00fc8c3a3a46bf0a995373aeea35" kindref="member">Force_Close</ref>(*Xila.Software_Management.<ref refid="class_xila___class_1_1_software___management___class_1a9719930db34c13d8cf5ce82e6dbe3d0c" kindref="member">Openned</ref>[i]-&gt;<ref refid="class_xila___class_1_1_software_1a5c3d107b2dbdd581b9aa79b9d0f6b04f" kindref="member">Handle</ref>);</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Xila.Task.<ref refid="class_xila___class_1_1_task___class_1a1a65d70162c95dfd3ac8b4683e913ce9" kindref="member">Delay</ref>(20);</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/>Second_Sleep_Routine();</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/>Xila.Power.<ref refid="class_xila___class_1_1_power___class_1a9b4719f1ead21dbdbc3401973993775d" kindref="member">Deep_Sleep</ref>();</highlight></codeline>
<codeline lineno="757"><highlight class="normal">}</highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_xila___class_1_1_system___class_1aa62d535cf5cd7ef97fecea0e142ee7e5" kindref="member">Xila_Class::System_Class::Restart</ref>()</highlight></codeline>
<codeline lineno="763"><highlight class="normal">{</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/>Xila.Software_Management.Shell_Send_Instruction(Xila.Restart);</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/>Xila.Software_Management.<ref refid="class_xila___class_1_1_software___management___class_1a9f4a4465b54c7894bbd7147d8e575075" kindref="member">Shell_Maximize</ref>();</highlight></codeline>
<codeline lineno="766"><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint8_t<sp/>i<sp/>=<sp/>2;<sp/>i<sp/>&lt;<sp/>8;<sp/>i++)</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Xila.Software_Management.<ref refid="class_xila___class_1_1_software___management___class_1a9719930db34c13d8cf5ce82e6dbe3d0c" kindref="member">Openned</ref>[i]<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Xila.Software_Management.<ref refid="class_xila___class_1_1_software___management___class_1a9719930db34c13d8cf5ce82e6dbe3d0c" kindref="member">Openned</ref>[i]-&gt;<ref refid="class_xila___class_1_1_software_1aa45509b64cac8ff55986ef789716b55a" kindref="member">Send_Instruction</ref>(Xila.Restart);</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Xila.Task.Resume(Xila.Software_Management.<ref refid="class_xila___class_1_1_software___management___class_1a9719930db34c13d8cf5ce82e6dbe3d0c" kindref="member">Openned</ref>[i]-&gt;<ref refid="class_xila___class_1_1_software_1aa9c6eccc5e85e629d875fc6080714f30" kindref="member">Task_Handle</ref>);</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>Waiting<sp/>for<sp/>the<sp/>software<sp/>to<sp/>close</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint8_t<sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;=<sp/>200;<sp/>j++)</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Xila.Software_Management.<ref refid="class_xila___class_1_1_software___management___class_1a9719930db34c13d8cf5ce82e6dbe3d0c" kindref="member">Openned</ref>[i]<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j<sp/>==<sp/>200<sp/>&amp;&amp;<sp/>Xila.Software_Management.<ref refid="class_xila___class_1_1_software___management___class_1a9719930db34c13d8cf5ce82e6dbe3d0c" kindref="member">Openned</ref>[i]<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Xila.Software_Management.<ref refid="class_xila___class_1_1_software___management___class_1aa48d00fc8c3a3a46bf0a995373aeea35" kindref="member">Force_Close</ref>(*Xila.Software_Management.<ref refid="class_xila___class_1_1_software___management___class_1a9719930db34c13d8cf5ce82e6dbe3d0c" kindref="member">Openned</ref>[i]-&gt;<ref refid="class_xila___class_1_1_software_1a5c3d107b2dbdd581b9aa79b9d0f6b04f" kindref="member">Handle</ref>);</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Xila.Task.<ref refid="class_xila___class_1_1_task___class_1a1a65d70162c95dfd3ac8b4683e913ce9" kindref="member">Delay</ref>(20);</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="788"><highlight class="normal"></highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/>Second_Sleep_Routine();</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/>ESP.restart();</highlight></codeline>
<codeline lineno="791"><highlight class="normal">}</highlight></codeline>
<codeline lineno="792"><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal">uint8_t<sp/><ref refid="class_xila___class_1_1_system___class_1ad973a1eba045ae45f913620f819f4694" kindref="member">Xila_Class::System_Class::Get_Chip_Revision</ref>()</highlight></codeline>
<codeline lineno="798"><highlight class="normal">{</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/>esp_chip_info_t<sp/>chip_info;</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/>esp_chip_info(&amp;chip_info);</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>chip_info.revision;</highlight></codeline>
<codeline lineno="802"><highlight class="normal">}</highlight></codeline>
<codeline lineno="803"><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="class_xila___class_1_1_system___class_1a215a0b748b9f5b5e326d10200e1aac56" kindref="member">Xila_Class::System_Class::Get_Chip_Model</ref>()</highlight></codeline>
<codeline lineno="809"><highlight class="normal">{</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/>uint32_t<sp/>chip_ver<sp/>=<sp/>REG_GET_FIELD(EFUSE_BLK0_RDATA3_REG,<sp/>EFUSE_RD_CHIP_VER_PKG);</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/>uint32_t<sp/>pkg_ver<sp/>=<sp/>chip_ver<sp/>&amp;<sp/>0x7;</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(pkg_ver)</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>EFUSE_RD_CHIP_VER_PKG_ESP32D0WDQ6:</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;ESP32-D0WDQ6&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>EFUSE_RD_CHIP_VER_PKG_ESP32D0WDQ5:</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;ESP32-D0WDQ5&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>EFUSE_RD_CHIP_VER_PKG_ESP32D2WDQ5:</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;ESP32-D2WDQ5&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>EFUSE_RD_CHIP_VER_PKG_ESP32PICOD2:</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;ESP32-PICO-D2&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>EFUSE_RD_CHIP_VER_PKG_ESP32PICOD4:</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;ESP32-PICO-D4&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Unknown&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="827"><highlight class="normal">}</highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal">uint32_t<sp/><ref refid="class_xila___class_1_1_system___class_1a0ec622fb9f5221e5e2098202aa3c0958" kindref="member">Xila_Class::System_Class::Get_Chip_Cores</ref>()</highlight></codeline>
<codeline lineno="834"><highlight class="normal">{</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/>esp_chip_info_t<sp/>chip_info;</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/>esp_chip_info(&amp;chip_info);</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>chip_info.cores;</highlight></codeline>
<codeline lineno="838"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/Users/alixa/github/Xila Embedded/Code/lib/Xila/src/Core/Modules/System.cpp"/>
  </compounddef>
</doxygen>
