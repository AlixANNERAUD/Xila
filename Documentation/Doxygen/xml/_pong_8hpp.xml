<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="_pong_8hpp" kind="file" language="C++">
    <compoundname>Pong.hpp</compoundname>
    <includes refid="_xila_8hpp" local="yes">Xila.hpp</includes>
    <incdepgraph>
      <node id="11">
        <label>sys/stat.h</label>
      </node>
      <node id="42">
        <label>Task.hpp</label>
        <link refid="_task_8hpp"/>
      </node>
      <node id="6">
        <label>FS.h</label>
      </node>
      <node id="8">
        <label>vfs_api.h</label>
      </node>
      <node id="22">
        <label>Print.h</label>
      </node>
      <node id="17">
        <label>SPI.h</label>
      </node>
      <node id="15">
        <label>driver/sdmmc_defs.h</label>
      </node>
      <node id="5">
        <label>stdint.h</label>
      </node>
      <node id="39">
        <label>Path.hpp</label>
        <link refid="_path_8hpp_source"/>
      </node>
      <node id="43">
        <label>Time.hpp</label>
        <link refid="_time_8hpp"/>
      </node>
      <node id="26">
        <label>WiFiSTA.h</label>
      </node>
      <node id="21">
        <label>StreamUtils.h</label>
      </node>
      <node id="10">
        <label>sys/unistd.h</label>
      </node>
      <node id="40">
        <label>Software.hpp</label>
        <link refid="_software_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>Driver/Display.hpp</label>
        <link refid="_display_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>HardwareSerial.h</label>
      </node>
      <node id="32">
        <label>WiFiUdp.h</label>
      </node>
      <node id="1">
        <label>C:/Users/alixa/github/Xila Embedded/Code/Operating_System/Espressif_32/include/Software/Pong.hpp</label>
        <link refid="_pong_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>esp_log.h</label>
      </node>
      <node id="13">
        <label>esp_vfs_fat.h</label>
      </node>
      <node id="20">
        <label>ArduinoJson.h</label>
      </node>
      <node id="23">
        <label>IPAddress.h</label>
      </node>
      <node id="44">
        <label>System.hpp</label>
        <link refid="_system_8hpp"/>
      </node>
      <node id="14">
        <label>driver/sdmmc_host.h</label>
      </node>
      <node id="38">
        <label>Driver/Battery.hpp</label>
        <link refid="_battery_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>time.h</label>
      </node>
      <node id="28">
        <label>WiFiScan.h</label>
      </node>
      <node id="3">
        <label>Arduino.h</label>
      </node>
      <node id="29">
        <label>WiFiGeneric.h</label>
      </node>
      <node id="19">
        <label>Update.h</label>
      </node>
      <node id="2">
        <label>Xila.hpp</label>
        <link refid="_xila_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>ff.h</label>
      </node>
      <node id="9">
        <label>sd_diskio.h</label>
      </node>
      <node id="36">
        <label>SD_MMC.h</label>
      </node>
      <node id="4">
        <label>Core/Core.hpp</label>
        <link refid="_core_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>sdmmc_cmd.h</label>
      </node>
      <node id="24">
        <label>IPv6Address.h</label>
      </node>
      <node id="30">
        <label>WiFiClient.h</label>
      </node>
      <node id="35">
        <label>Configuration.hpp</label>
        <link refid="_configuration_8hpp_source"/>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>Software_Handle.hpp</label>
        <link refid="_software___handle_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>WiFiServer.h</label>
      </node>
      <node id="25">
        <label>WiFiType.h</label>
      </node>
      <node id="27">
        <label>WiFiAP.h</label>
      </node>
      <node id="12">
        <label>dirent.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="class_pong___class" prot="public">Pong_Class</innerclass>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_pong_8hpp_1a0c5a4238ba1360a8b0b5ef4eec50bbee" prot="public" static="no" mutable="no">
        <type><ref refid="class_software___handle___class" kindref="compound">Software_Handle_Class</ref></type>
        <definition>Software_Handle_Class Pong_Handle(&quot;Pong&quot;, Pong_Class::Icon_32, Pong_Class::Load)</definition>
        <argsstring>(&quot;Pong&quot;, Pong_Class::Icon_32, Pong_Class::Load)</argsstring>
        <name>Pong_Handle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/alixa/github/Xila Embedded/Code/Operating_System/Espressif_32/include/Software/Pong.hpp" line="30" column="23"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>PONG_HPP_INCLUDED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PONG_HPP_INCLUDED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Xila.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6" refid="class_pong___class" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_pong___class" kindref="compound">Pong_Class</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_software___class" kindref="compound">Software_Class</ref></highlight></codeline>
<codeline lineno="7"><highlight class="normal">{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_pong___class" kindref="compound">Pong_Class</ref>*<sp/>Instance_Pointer;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>Player_1_Score,<sp/>Player_2_Score;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Refresh_Interface();</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_pong___class" kindref="compound">Pong_Class</ref>();</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>~<ref refid="class_pong___class" kindref="compound">Pong_Class</ref>();</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Main_Task(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>Image</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Icon_32<sp/>=<sp/>Xila.Display.Pong</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_software___class" kindref="compound">Software_Class</ref>*<sp/>Load();</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal">};</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><ref refid="class_software___handle___class" kindref="compound">Software_Handle_Class</ref><sp/>Pong_Handle(</highlight><highlight class="stringliteral">&quot;Pong&quot;</highlight><highlight class="normal">,<sp/>Pong_Class::Icon_32,<sp/>Pong_Class::Load);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="C:/Users/alixa/github/Xila Embedded/Code/Operating_System/Espressif_32/include/Software/Pong.hpp"/>
  </compounddef>
</doxygen>
