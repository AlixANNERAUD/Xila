<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="_software___handle_8cpp" kind="file" language="C++">
    <compoundname>Software_Handle.cpp</compoundname>
    <includes refid="_core_8hpp" local="yes">Core/Core.hpp</includes>
    <incdepgraph>
      <node id="43">
        <label>esp_ota_ops.h</label>
      </node>
      <node id="5">
        <label>FS.h</label>
      </node>
      <node id="10">
        <label>Print.h</label>
      </node>
      <node id="6">
        <label>SPI.h</label>
      </node>
      <node id="33">
        <label>Core/Abstraction/Memory.hpp</label>
        <link refid="_memory_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>Battery_Library.hpp</label>
      </node>
      <node id="30">
        <label>Core/Modules/Software_Management.hpp</label>
        <link refid="_software___management_8hpp_source"/>
      </node>
      <node id="32">
        <label>Core/Abstraction/GPIO.hpp</label>
        <link refid="_g_p_i_o_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>soc/efuse_reg.h</label>
      </node>
      <node id="3">
        <label>stdint.h</label>
      </node>
      <node id="14">
        <label>WiFiSTA.h</label>
      </node>
      <node id="21">
        <label>ArduinoTrace.h</label>
      </node>
      <node id="38">
        <label>esp_spi_flash.h</label>
      </node>
      <node id="9">
        <label>StreamUtils.h</label>
      </node>
      <node id="44">
        <label>esp_image_format.h</label>
      </node>
      <node id="45">
        <label>MD5Builder.h</label>
      </node>
      <node id="25">
        <label>Modules/Path.hpp</label>
        <link refid="_path_8hpp"/>
      </node>
      <node id="20">
        <label>WiFiUdp.h</label>
      </node>
      <node id="27">
        <label>Core/Modules/Time.hpp</label>
        <link refid="_time_8hpp"/>
      </node>
      <node id="40">
        <label>soc/soc.h</label>
      </node>
      <node id="36">
        <label>rom/spi_flash.h</label>
      </node>
      <node id="24">
        <label>Configuration.hpp</label>
        <link refid="_configuration_8hpp"/>
      </node>
      <node id="8">
        <label>ArduinoJson.h</label>
      </node>
      <node id="11">
        <label>IPAddress.h</label>
      </node>
      <node id="26">
        <label>Core/Modules/Task.hpp</label>
        <link refid="_task_8hpp"/>
      </node>
      <node id="7">
        <label>time.h</label>
      </node>
      <node id="29">
        <label>Core/Modules/Mathematics.hpp</label>
        <link refid="_mathematics_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>WiFiScan.h</label>
      </node>
      <node id="4">
        <label>Arduino.h</label>
      </node>
      <node id="17">
        <label>WiFiGeneric.h</label>
      </node>
      <node id="35">
        <label>Esp.h</label>
      </node>
      <node id="2">
        <label>Core/Core.hpp</label>
        <link refid="_core_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>C:/Users/alixa/GitHub/Xila/Code/lib/Xila/src/Core/Modules/Software_Handle.cpp</label>
        <link refid="_software___handle_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>Core/Modules/System.hpp</label>
        <link refid="_system_8hpp"/>
      </node>
      <node id="31">
        <label>Core/Abstraction/Display.hpp</label>
        <link refid="_display_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>Core/Abstraction/Flash.hpp</label>
        <link refid="_flash_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>IPv6Address.h</label>
      </node>
      <node id="18">
        <label>WiFiClient.h</label>
      </node>
      <node id="37">
        <label>esp_sleep.h</label>
      </node>
      <node id="42">
        <label>esp_partition.h</label>
      </node>
      <node id="19">
        <label>WiFiServer.h</label>
      </node>
      <node id="13">
        <label>WiFiType.h</label>
      </node>
      <node id="15">
        <label>WiFiAP.h</label>
      </node>
      <node id="39">
        <label>memory</label>
      </node>
      <node id="22">
        <label>Nextion_Library.hpp</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="_software___handle_8cpp_1ae77cd2121287340e8e792024de99cce9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator==</definition>
        <argsstring>(Xila_Class::Software_Handle const &amp;a, Xila_Class::Software_Handle const &amp;b)</argsstring>
        <name>operator==</name>
        <param>
          <type><ref refid="class_xila___class_1_1_software___handle" kindref="compound">Xila_Class::Software_Handle</ref> const &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="class_xila___class_1_1_software___handle" kindref="compound">Xila_Class::Software_Handle</ref> const &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Compare two software handle. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>1st software handle to compare. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>2nd software handle to compare. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if software handle are identical </para>
</simplesect>
<simplesect kind="return"><para>false if software handle are different </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/alixa/GitHub/Xila/Code/lib/Xila/src/Core/Modules/Software_Handle.cpp" line="75" column="6" bodyfile="C:/Users/alixa/GitHub/Xila/Code/lib/Xila/src/Core/Modules/Software_Handle.cpp" bodystart="75" bodyend="78"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Alix ANNERAUD (<ulink url="mailto:alix.anneraud@outlook.fr">alix.anneraud@outlook.fr</ulink>) </para>
</simplesect>
<simplesect kind="version"><para>0.1 </para>
</simplesect>
<simplesect kind="date"><para>11-07-2021</para>
</simplesect>
<simplesect kind="copyright"><para>Copyright (c) 2021 </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_core_8hpp" kindref="compound">Core/Core.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Software<sp/>handle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><ref refid="class_xila___class_1_1_software___handle_1aed2d6b2819a8ce358b4b39e60cf62961" kindref="member">Xila_Class::Software_Handle::Software_Handle</ref>()</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>Icon(0),</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Load_Function_Pointer(NULL),</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Startup_Function_Pointer(NULL)</highlight></codeline>
<codeline lineno="22"><highlight class="normal">{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/>memset(Name,<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Name));</highlight></codeline>
<codeline lineno="24"><highlight class="normal">}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_xila___class_1_1_software___handle_1a92a2b7a80d5e8237970dc827a142c88d" kindref="member">Xila_Class::Software_Handle::Is_Equal</ref>(<ref refid="class_xila___class_1_1_software___handle" kindref="compound">Xila_Class::Software_Handle</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;Software_Handle_To_Compare)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="33"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(<ref refid="class_xila___class_1_1_software___handle_1a1bc0e5ad3b90c8fc5ccb3a36830641e3" kindref="member">Name</ref>,<sp/>Software_Handle_To_Compare.<ref refid="class_xila___class_1_1_software___handle_1a1bc0e5ad3b90c8fc5ccb3a36830641e3" kindref="member">Name</ref>)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_xila___class_1_1_software___handle_1afbcb05915e75409ae945458c98040a13" kindref="member">Icon</ref><sp/>!=<sp/>Software_Handle_To_Compare.<ref refid="class_xila___class_1_1_software___handle_1afbcb05915e75409ae945458c98040a13" kindref="member">Icon</ref>)</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="43"><highlight class="normal">}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><ref refid="class_xila___class_1_1_software___handle_1aed2d6b2819a8ce358b4b39e60cf62961" kindref="member">Xila_Class::Software_Handle::Software_Handle</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*Software_Name,<sp/>uint8_t<sp/>Icon_ID,<sp/><ref refid="class_xila___class_1_1_software" kindref="compound">Xila_Class::Software</ref><sp/>*(*Load_Function_Pointer)(),<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*Startup_Function_Pointer)())</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>Icon(Icon_ID),</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Load_Function_Pointer(Load_Function_Pointer),</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Startup_Function_Pointer(Startup_Function_Pointer)</highlight></codeline>
<codeline lineno="56"><highlight class="normal">{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>memset(Name,<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Name));</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>strcpy(Name,<sp/>Software_Name);</highlight></codeline>
<codeline lineno="59"><highlight class="normal">}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><ref refid="class_xila___class_1_1_software___handle_1a3ff43a109c08f6fef7a2045f5934ac0e" kindref="member">Xila_Class::Software_Handle::~Software_Handle</ref>()</highlight></codeline>
<codeline lineno="65"><highlight class="normal">{</highlight></codeline>
<codeline lineno="66"><highlight class="normal">}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_software___handle_8cpp_1ae77cd2121287340e8e792024de99cce9" kindref="member">operator==</ref>(<ref refid="class_xila___class_1_1_software___handle" kindref="compound">Xila_Class::Software_Handle</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;a,<sp/><ref refid="class_xila___class_1_1_software___handle" kindref="compound">Xila_Class::Software_Handle</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;b)</highlight></codeline>
<codeline lineno="76"><highlight class="normal">{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a.<ref refid="class_xila___class_1_1_software___handle_1a92a2b7a80d5e8237970dc827a142c88d" kindref="member">Is_Equal</ref>(b);</highlight></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/Users/alixa/GitHub/Xila/Code/lib/Xila/src/Core/Modules/Software_Handle.cpp"/>
  </compounddef>
</doxygen>
